/*!
 * devextreme-angular
 * Version: 21.1.3
 * Build date: Tue May 18 2021
 *
 * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
import * as tslib_1 from "tslib";
/* tslint:disable:max-line-length */
import { Component, NgModule, Host, SkipSelf, Input } from '@angular/core';
import { NestedOptionHost, } from 'devextreme-angular/core';
import { NestedOption } from 'devextreme-angular/core';
var DxoCrosshairComponent = /** @class */ (function (_super) {
    tslib_1.__extends(DxoCrosshairComponent, _super);
    function DxoCrosshairComponent(parentOptionHost, optionHost) {
        var _this = _super.call(this) || this;
        parentOptionHost.setNestedOption(_this);
        optionHost.setHost(_this, _this._fullOptionPath.bind(_this));
        return _this;
    }
    Object.defineProperty(DxoCrosshairComponent.prototype, "color", {
        get: function () {
            return this._getOption('color');
        },
        set: function (value) {
            this._setOption('color', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoCrosshairComponent.prototype, "dashStyle", {
        get: function () {
            return this._getOption('dashStyle');
        },
        set: function (value) {
            this._setOption('dashStyle', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoCrosshairComponent.prototype, "enabled", {
        get: function () {
            return this._getOption('enabled');
        },
        set: function (value) {
            this._setOption('enabled', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoCrosshairComponent.prototype, "horizontalLine", {
        get: function () {
            return this._getOption('horizontalLine');
        },
        set: function (value) {
            this._setOption('horizontalLine', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoCrosshairComponent.prototype, "label", {
        get: function () {
            return this._getOption('label');
        },
        set: function (value) {
            this._setOption('label', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoCrosshairComponent.prototype, "opacity", {
        get: function () {
            return this._getOption('opacity');
        },
        set: function (value) {
            this._setOption('opacity', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoCrosshairComponent.prototype, "verticalLine", {
        get: function () {
            return this._getOption('verticalLine');
        },
        set: function (value) {
            this._setOption('verticalLine', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoCrosshairComponent.prototype, "width", {
        get: function () {
            return this._getOption('width');
        },
        set: function (value) {
            this._setOption('width', value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DxoCrosshairComponent.prototype, "_optionPath", {
        get: function () {
            return 'crosshair';
        },
        enumerable: true,
        configurable: true
    });
    DxoCrosshairComponent.prototype.ngOnInit = function () {
        this._addRecreatedComponent();
    };
    DxoCrosshairComponent.prototype.ngOnDestroy = function () {
        this._addRemovedOption(this._getOptionPath());
    };
    DxoCrosshairComponent.ctorParameters = function () { return [
        { type: NestedOptionHost, decorators: [{ type: SkipSelf }, { type: Host }] },
        { type: NestedOptionHost, decorators: [{ type: Host }] }
    ]; };
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", String),
        tslib_1.__metadata("design:paramtypes", [String])
    ], DxoCrosshairComponent.prototype, "color", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", String),
        tslib_1.__metadata("design:paramtypes", [String])
    ], DxoCrosshairComponent.prototype, "dashStyle", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Boolean),
        tslib_1.__metadata("design:paramtypes", [Boolean])
    ], DxoCrosshairComponent.prototype, "enabled", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Object),
        tslib_1.__metadata("design:paramtypes", [Object])
    ], DxoCrosshairComponent.prototype, "horizontalLine", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Object),
        tslib_1.__metadata("design:paramtypes", [Object])
    ], DxoCrosshairComponent.prototype, "label", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Number),
        tslib_1.__metadata("design:paramtypes", [Number])
    ], DxoCrosshairComponent.prototype, "opacity", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Object),
        tslib_1.__metadata("design:paramtypes", [Object])
    ], DxoCrosshairComponent.prototype, "verticalLine", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Number),
        tslib_1.__metadata("design:paramtypes", [Number])
    ], DxoCrosshairComponent.prototype, "width", null);
    DxoCrosshairComponent = tslib_1.__decorate([
        Component({
            selector: 'dxo-crosshair',
            template: '',
            providers: [NestedOptionHost],
            styles: ['']
        }),
        tslib_1.__param(0, SkipSelf()), tslib_1.__param(0, Host()),
        tslib_1.__param(1, Host()),
        tslib_1.__metadata("design:paramtypes", [NestedOptionHost,
            NestedOptionHost])
    ], DxoCrosshairComponent);
    return DxoCrosshairComponent;
}(NestedOption));
export { DxoCrosshairComponent };
var DxoCrosshairModule = /** @class */ (function () {
    function DxoCrosshairModule() {
    }
    DxoCrosshairModule = tslib_1.__decorate([
        NgModule({
            declarations: [
                DxoCrosshairComponent
            ],
            exports: [
                DxoCrosshairComponent
            ],
        })
    ], DxoCrosshairModule);
    return DxoCrosshairModule;
}());
export { DxoCrosshairModule };
//# sourceMappingURL=data:application/json;base64,