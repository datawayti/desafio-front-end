{"version":3,"file":"index.d.ts","sources":["index.d.ts"],"names":[],"mappingssourcesContent":["/*!\r\n * devextreme-angular\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n *\r\n * This software may be modified and distributed under the terms\r\n * of the MIT license. See the LICENSE file in the root of the project for details.\r\n *\r\n * https://github.com/DevExpress/devextreme-angular\r\n */\r\nimport { TransferState } from '@angular/platform-browser';\r\nimport { ElementRef, NgZone, OnDestroy, EventEmitter, OnChanges, DoCheck, SimpleChanges } from '@angular/core';\r\nimport DxCalendar from 'devextreme/ui/calendar';\r\nimport { ControlValueAccessor } from '@angular/forms';\r\nimport { DxComponent, DxTemplateHost, NestedOptionHost, IterableDifferHelper, WatcherHelper } from 'devextreme-angular/core';\r\n/**\r\n * The Calendar is a UI component that displays a calendar and allows an end user to select the required date within a specified date range.\r\n\r\n */\r\nexport declare class DxCalendarComponent extends DxComponent implements OnDestroy, ControlValueAccessor, OnChanges, DoCheck {\r\n    private _watcherHelper;\r\n    private _idh;\r\n    instance: DxCalendar;\r\n    /**\r\n     * \r\n    \r\n     */\r\n    accessKey: string;\r\n    /**\r\n     * \r\n    \r\n     */\r\n    activeStateEnabled: boolean;\r\n    /**\r\n     * \r\n    \r\n     */\r\n    cellTemplate: any;\r\n    /**\r\n     * \r\n    \r\n     */\r\n    dateSerializationFormat: string;\r\n    /**\r\n     * \r\n    \r\n     */\r\n    disabled: boolean;\r\n    /**\r\n     * \r\n    \r\n     */\r\n    disabledDates: Function | Array<Date>;\r\n    /**\r\n     * \r\n    \r\n     */\r\n    elementAttr: any;\r\n    /**\r\n     * \r\n    \r\n     */\r\n    firstDayOfWeek: number | string;\r\n    /**\r\n     * \r\n    \r\n     */\r\n    focusStateEnabled: boolean;\r\n    /**\r\n     * \r\n    \r\n     */\r\n    height: number | Function | string;\r\n    /**\r\n     * \r\n    \r\n     */\r\n    hint: string;\r\n    /**\r\n     * \r\n    \r\n     */\r\n    hoverStateEnabled: boolean;\r\n    /**\r\n     * \r\n    \r\n     */\r\n    isValid: boolean;\r\n    /**\r\n     * \r\n    \r\n     */\r\n    max: Date | number | string;\r\n    /**\r\n     * \r\n    \r\n     */\r\n    maxZoomLevel: string;\r\n    /**\r\n     * \r\n    \r\n     */\r\n    min: Date | number | string;\r\n    /**\r\n     * \r\n    \r\n     */\r\n    minZoomLevel: string;\r\n    /**\r\n     * \r\n    \r\n     */\r\n    name: string;\r\n    /**\r\n     * \r\n    \r\n     */\r\n    readOnly: boolean;\r\n    /**\r\n     * \r\n    \r\n     */\r\n    rtlEnabled: boolean;\r\n    /**\r\n     * \r\n    \r\n     */\r\n    showTodayButton: boolean;\r\n    /**\r\n     * \r\n    \r\n     */\r\n    tabIndex: number;\r\n    /**\r\n     * \r\n    \r\n     */\r\n    validationError: any;\r\n    /**\r\n     * \r\n    \r\n     */\r\n    validationErrors: Array<any>;\r\n    /**\r\n     * \r\n    \r\n     */\r\n    validationMessageMode: string;\r\n    /**\r\n     * \r\n    \r\n     */\r\n    validationStatus: string;\r\n    /**\r\n     * \r\n    \r\n     */\r\n    value: Date | number | string;\r\n    /**\r\n     * \r\n    \r\n     */\r\n    visible: boolean;\r\n    /**\r\n     * \r\n    \r\n     */\r\n    width: number | Function | string;\r\n    /**\r\n     * \r\n    \r\n     */\r\n    zoomLevel: string;\r\n    /**\r\n    \r\n     * \r\n    \r\n    \r\n     */\r\n    onDisposing: EventEmitter<any>;\r\n    /**\r\n    \r\n     * \r\n    \r\n    \r\n     */\r\n    onInitialized: EventEmitter<any>;\r\n    /**\r\n    \r\n     * \r\n    \r\n    \r\n     */\r\n    onOptionChanged: EventEmitter<any>;\r\n    /**\r\n    \r\n     * \r\n    \r\n    \r\n     */\r\n    onValueChanged: EventEmitter<any>;\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    accessKeyChange: EventEmitter<string>;\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    activeStateEnabledChange: EventEmitter<boolean>;\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    cellTemplateChange: EventEmitter<any>;\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    dateSerializationFormatChange: EventEmitter<string>;\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    disabledChange: EventEmitter<boolean>;\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    disabledDatesChange: EventEmitter<Function | Array<Date>>;\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    elementAttrChange: EventEmitter<any>;\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    firstDayOfWeekChange: EventEmitter<number | string>;\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    focusStateEnabledChange: EventEmitter<boolean>;\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    heightChange: EventEmitter<number | Function | string>;\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    hintChange: EventEmitter<string>;\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    hoverStateEnabledChange: EventEmitter<boolean>;\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    isValidChange: EventEmitter<boolean>;\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    maxChange: EventEmitter<Date | number | string>;\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    maxZoomLevelChange: EventEmitter<string>;\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    minChange: EventEmitter<Date | number | string>;\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    minZoomLevelChange: EventEmitter<string>;\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    nameChange: EventEmitter<string>;\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    readOnlyChange: EventEmitter<boolean>;\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    rtlEnabledChange: EventEmitter<boolean>;\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    showTodayButtonChange: EventEmitter<boolean>;\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    tabIndexChange: EventEmitter<number>;\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    validationErrorChange: EventEmitter<any>;\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    validationErrorsChange: EventEmitter<Array<any>>;\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    validationMessageModeChange: EventEmitter<string>;\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    validationStatusChange: EventEmitter<string>;\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    valueChange: EventEmitter<Date | number | string>;\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    visibleChange: EventEmitter<boolean>;\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    widthChange: EventEmitter<number | Function | string>;\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    zoomLevelChange: EventEmitter<string>;\r\n    /**\r\n    \r\n     * \r\n    \r\n    \r\n     */\r\n    onBlur: EventEmitter<any>;\r\n    change(_: any): void;\r\n    touched: (_: any) => void;\r\n    constructor(elementRef: ElementRef, ngZone: NgZone, templateHost: DxTemplateHost, _watcherHelper: WatcherHelper, _idh: IterableDifferHelper, optionHost: NestedOptionHost, transferState: TransferState, platformId: any);\r\n    protected _createInstance(element: any, options: any): DxCalendar;\r\n    writeValue(value: any): void;\r\n    setDisabledState(isDisabled: boolean): void;\r\n    registerOnChange(fn: (_: any) => void): void;\r\n    registerOnTouched(fn: () => void): void;\r\n    _createWidget(element: any): void;\r\n    ngOnDestroy(): void;\r\n    ngOnChanges(changes: SimpleChanges): void;\r\n    setupChanges(prop: string, changes: SimpleChanges): void;\r\n    ngDoCheck(): void;\r\n    _setOption(name: string, value: any): void;\r\n}\r\nexport declare class DxCalendarModule {\r\n}\r\n"]}