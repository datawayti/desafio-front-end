{"version":3,"file":"index.d.ts","sources":["index.d.ts"],"names":[],"mappingssourcesContent":["/*!\r\n * devextreme-angular\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n *\r\n * This software may be modified and distributed under the terms\r\n * of the MIT license. See the LICENSE file in the root of the project for details.\r\n *\r\n * https://github.com/DevExpress/devextreme-angular\r\n */\r\nimport { TransferState } from '@angular/platform-browser';\r\nimport { ElementRef, NgZone, OnDestroy, EventEmitter, OnChanges, DoCheck, SimpleChanges } from '@angular/core';\r\nimport DevExpress from 'devextreme/bundles/dx.all';\r\nimport DxPivotGridFieldChooser from 'devextreme/ui/pivot_grid_field_chooser';\r\nimport { DxComponent, DxTemplateHost, NestedOptionHost, IterableDifferHelper, WatcherHelper } from 'devextreme-angular/core';\r\n/**\r\n * A complementary UI component for the PivotGrid that allows you to manage data displayed in the PivotGrid. The field chooser is already integrated in the PivotGrid and can be invoked using the context menu. If you need to continuously display the field chooser near the PivotGrid UI component, use the PivotGridFieldChooser UI component.\r\n\r\n */\r\nexport declare class DxPivotGridFieldChooserComponent extends DxComponent implements OnDestroy, OnChanges, DoCheck {\r\n    private _watcherHelper;\r\n    private _idh;\r\n    instance: DxPivotGridFieldChooser;\r\n    /**\r\n     * \r\n    \r\n     */\r\n    accessKey: string;\r\n    /**\r\n     * \r\n    \r\n     */\r\n    activeStateEnabled: boolean;\r\n    /**\r\n     * \r\n    \r\n     */\r\n    allowSearch: boolean;\r\n    /**\r\n     * \r\n    \r\n     */\r\n    applyChangesMode: string;\r\n    /**\r\n     * \r\n    \r\n     */\r\n    dataSource: DevExpress.data.PivotGridDataSource;\r\n    /**\r\n     * \r\n    \r\n     */\r\n    disabled: boolean;\r\n    /**\r\n     * \r\n    \r\n     */\r\n    elementAttr: any;\r\n    /**\r\n     * \r\n    \r\n     */\r\n    focusStateEnabled: boolean;\r\n    /**\r\n     * \r\n    \r\n     */\r\n    headerFilter: {\r\n        allowSearch?: boolean;\r\n        height?: number;\r\n        searchTimeout?: number;\r\n        showRelevantValues?: boolean;\r\n        texts?: {\r\n            cancel?: string;\r\n            emptyValue?: string;\r\n            ok?: string;\r\n        };\r\n        width?: number;\r\n    };\r\n    /**\r\n     * \r\n    \r\n     */\r\n    height: number | Function | string;\r\n    /**\r\n     * \r\n    \r\n     */\r\n    hint: string;\r\n    /**\r\n     * \r\n    \r\n     */\r\n    hoverStateEnabled: boolean;\r\n    /**\r\n     * \r\n    \r\n     */\r\n    layout: number | string;\r\n    /**\r\n     * \r\n    \r\n     */\r\n    rtlEnabled: boolean;\r\n    /**\r\n     * \r\n    \r\n     */\r\n    searchTimeout: number;\r\n    /**\r\n     * \r\n    \r\n     */\r\n    state: any;\r\n    /**\r\n     * \r\n    \r\n     */\r\n    tabIndex: number;\r\n    /**\r\n     * \r\n    \r\n     */\r\n    texts: {\r\n        allFields?: string;\r\n        columnFields?: string;\r\n        dataFields?: string;\r\n        filterFields?: string;\r\n        rowFields?: string;\r\n    };\r\n    /**\r\n     * \r\n    \r\n     */\r\n    visible: boolean;\r\n    /**\r\n     * \r\n    \r\n     */\r\n    width: number | Function | string;\r\n    /**\r\n    \r\n     * \r\n    \r\n    \r\n     */\r\n    onContentReady: EventEmitter<any>;\r\n    /**\r\n    \r\n     * \r\n    \r\n    \r\n     */\r\n    onContextMenuPreparing: EventEmitter<any>;\r\n    /**\r\n    \r\n     * \r\n    \r\n    \r\n     */\r\n    onDisposing: EventEmitter<any>;\r\n    /**\r\n    \r\n     * \r\n    \r\n    \r\n     */\r\n    onInitialized: EventEmitter<any>;\r\n    /**\r\n    \r\n     * \r\n    \r\n    \r\n     */\r\n    onOptionChanged: EventEmitter<any>;\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    accessKeyChange: EventEmitter<string>;\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    activeStateEnabledChange: EventEmitter<boolean>;\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    allowSearchChange: EventEmitter<boolean>;\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    applyChangesModeChange: EventEmitter<string>;\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    dataSourceChange: EventEmitter<DevExpress.data.PivotGridDataSource>;\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    disabledChange: EventEmitter<boolean>;\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    elementAttrChange: EventEmitter<any>;\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    focusStateEnabledChange: EventEmitter<boolean>;\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    headerFilterChange: EventEmitter<{\r\n        allowSearch?: boolean;\r\n        height?: number;\r\n        searchTimeout?: number;\r\n        showRelevantValues?: boolean;\r\n        texts?: {\r\n            cancel?: string;\r\n            emptyValue?: string;\r\n            ok?: string;\r\n        };\r\n        width?: number;\r\n    }>;\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    heightChange: EventEmitter<number | Function | string>;\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    hintChange: EventEmitter<string>;\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    hoverStateEnabledChange: EventEmitter<boolean>;\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    layoutChange: EventEmitter<number | string>;\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    rtlEnabledChange: EventEmitter<boolean>;\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    searchTimeoutChange: EventEmitter<number>;\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    stateChange: EventEmitter<any>;\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    tabIndexChange: EventEmitter<number>;\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    textsChange: EventEmitter<{\r\n        allFields?: string;\r\n        columnFields?: string;\r\n        dataFields?: string;\r\n        filterFields?: string;\r\n        rowFields?: string;\r\n    }>;\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    visibleChange: EventEmitter<boolean>;\r\n    /**\r\n    \r\n     * This member supports the internal infrastructure and is not intended to be used directly from your code.\r\n    \r\n     */\r\n    widthChange: EventEmitter<number | Function | string>;\r\n    constructor(elementRef: ElementRef, ngZone: NgZone, templateHost: DxTemplateHost, _watcherHelper: WatcherHelper, _idh: IterableDifferHelper, optionHost: NestedOptionHost, transferState: TransferState, platformId: any);\r\n    protected _createInstance(element: any, options: any): DxPivotGridFieldChooser;\r\n    ngOnDestroy(): void;\r\n    ngOnChanges(changes: SimpleChanges): void;\r\n    setupChanges(prop: string, changes: SimpleChanges): void;\r\n    ngDoCheck(): void;\r\n    _setOption(name: string, value: any): void;\r\n}\r\nexport declare class DxPivotGridFieldChooserModule {\r\n}\r\n"]}