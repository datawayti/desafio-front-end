/*!
 * devextreme-angular
 * Version: 21.1.3
 * Build date: Tue May 18 2021
 *
 * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
import { OnInit, OnDestroy } from '@angular/core';
import { Font } from 'devextreme/viz/core/base_widget';
import { NestedOptionHost } from 'devextreme-angular/core';
import { NestedOption } from 'devextreme-angular/core';
import * as ɵngcc0 from '@angular/core';
export declare class DxoCommonAxisSettingsComponent extends NestedOption implements OnDestroy, OnInit {
    allowDecimals: boolean;
    breakStyle: {
        color?: string;
        line?: string;
        width?: number;
    };
    color: string;
    constantLineStyle: {
        color?: string;
        dashStyle?: string;
        label?: {
            font?: Font;
            position?: string;
            visible?: boolean;
        };
        paddingLeftRight?: number;
        paddingTopBottom?: number;
        width?: number;
    } | {
        color?: string;
        dashStyle?: string;
        label?: {
            font?: Font;
            visible?: boolean;
        };
        width?: number;
    };
    discreteAxisDivisionMode: string;
    endOnTick: boolean;
    grid: {
        color?: string;
        opacity?: number;
        visible?: boolean;
        width?: number;
    };
    inverted: boolean;
    label: {
        alignment?: string;
        displayMode?: string;
        font?: Font;
        indentFromAxis?: number;
        overlappingBehavior?: string;
        position?: string;
        rotationAngle?: number;
        staggeringSpacing?: number;
        template?: any;
        textOverflow?: string;
        visible?: boolean;
        wordWrap?: string;
    } | {
        font?: Font;
        indentFromAxis?: number;
        overlappingBehavior?: string;
        visible?: boolean;
    };
    maxValueMargin: number;
    minorGrid: {
        color?: string;
        opacity?: number;
        visible?: boolean;
        width?: number;
    };
    minorTick: {
        color?: string;
        length?: number;
        opacity?: number;
        shift?: number;
        visible?: boolean;
        width?: number;
    } | {
        color?: string;
        length?: number;
        opacity?: number;
        visible?: boolean;
        width?: number;
    };
    minValueMargin: number;
    opacity: number;
    placeholderSize: number;
    stripStyle: {
        label?: {
            font?: Font;
            horizontalAlignment?: string;
            verticalAlignment?: string;
        };
        paddingLeftRight?: number;
        paddingTopBottom?: number;
    } | {
        label?: {
            font?: Font;
        };
    };
    tick: {
        color?: string;
        length?: number;
        opacity?: number;
        shift?: number;
        visible?: boolean;
        width?: number;
    } | {
        color?: string;
        length?: number;
        opacity?: number;
        visible?: boolean;
        width?: number;
    };
    title: {
        alignment?: string;
        font?: Font;
        margin?: number;
        textOverflow?: string;
        wordWrap?: string;
    };
    valueMarginsEnabled: boolean;
    visible: boolean;
    width: number;
    protected readonly _optionPath: string;
    constructor(parentOptionHost: NestedOptionHost, optionHost: NestedOptionHost);
    ngOnInit(): void;
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<DxoCommonAxisSettingsComponent, [{ host: true; skipSelf: true; }, { host: true; }]>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<DxoCommonAxisSettingsComponent, "dxo-common-axis-settings", never, { "allowDecimals": "allowDecimals"; "breakStyle": "breakStyle"; "color": "color"; "constantLineStyle": "constantLineStyle"; "discreteAxisDivisionMode": "discreteAxisDivisionMode"; "endOnTick": "endOnTick"; "grid": "grid"; "inverted": "inverted"; "label": "label"; "maxValueMargin": "maxValueMargin"; "minorGrid": "minorGrid"; "minorTick": "minorTick"; "minValueMargin": "minValueMargin"; "opacity": "opacity"; "placeholderSize": "placeholderSize"; "stripStyle": "stripStyle"; "tick": "tick"; "title": "title"; "valueMarginsEnabled": "valueMarginsEnabled"; "visible": "visible"; "width": "width"; }, {}, never, never>;
}
export declare class DxoCommonAxisSettingsModule {
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<DxoCommonAxisSettingsModule, never>;
    static ɵmod: ɵngcc0.ɵɵNgModuleDeclaration<DxoCommonAxisSettingsModule, [typeof DxoCommonAxisSettingsComponent], never, [typeof DxoCommonAxisSettingsComponent]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDeclaration<DxoCommonAxisSettingsModule>;
}

//# sourceMappingURL=common-axis-settings.d.ts.map