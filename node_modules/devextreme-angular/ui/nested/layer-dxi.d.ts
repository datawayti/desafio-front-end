/*!
 * devextreme-angular
 * Version: 21.1.3
 * Build date: Tue May 18 2021
 *
 * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
import DevExpress from 'devextreme/bundles/dx.all';
import { Font } from 'devextreme/viz/core/base_widget';
import { NestedOptionHost } from 'devextreme-angular/core';
import { CollectionNestedOption } from 'devextreme-angular/core';
import * as ɵngcc0 from '@angular/core';
export declare class DxiLayerComponent extends CollectionNestedOption {
    borderColor: string;
    borderWidth: number;
    color: string;
    colorGroupingField: string;
    colorGroups: Array<number>;
    customize: Function;
    dataField: string;
    dataSource: any | DevExpress.data.DataSource | DevExpress.data.DataSourceOptions | string | Array<any>;
    elementType: string;
    hoveredBorderColor: string;
    hoveredBorderWidth: number;
    hoveredColor: string;
    hoverEnabled: boolean;
    label: {
        dataField?: string;
        enabled?: boolean;
        font?: Font;
    };
    maxSize: number;
    minSize: number;
    name: string;
    opacity: number;
    palette: string | Array<string>;
    paletteIndex: number;
    paletteSize: number;
    selectedBorderColor: string;
    selectedBorderWidth: number;
    selectedColor: string;
    selectionMode: string;
    size: number;
    sizeGroupingField: string;
    sizeGroups: Array<number>;
    type: string;
    protected readonly _optionPath: string;
    constructor(parentOptionHost: NestedOptionHost, optionHost: NestedOptionHost);
    ngOnDestroy(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<DxiLayerComponent, [{ host: true; skipSelf: true; }, { host: true; }]>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<DxiLayerComponent, "dxi-layer", never, { "borderColor": "borderColor"; "borderWidth": "borderWidth"; "color": "color"; "colorGroupingField": "colorGroupingField"; "colorGroups": "colorGroups"; "customize": "customize"; "dataField": "dataField"; "dataSource": "dataSource"; "elementType": "elementType"; "hoveredBorderColor": "hoveredBorderColor"; "hoveredBorderWidth": "hoveredBorderWidth"; "hoveredColor": "hoveredColor"; "hoverEnabled": "hoverEnabled"; "label": "label"; "maxSize": "maxSize"; "minSize": "minSize"; "name": "name"; "opacity": "opacity"; "palette": "palette"; "paletteIndex": "paletteIndex"; "paletteSize": "paletteSize"; "selectedBorderColor": "selectedBorderColor"; "selectedBorderWidth": "selectedBorderWidth"; "selectedColor": "selectedColor"; "selectionMode": "selectionMode"; "size": "size"; "sizeGroupingField": "sizeGroupingField"; "sizeGroups": "sizeGroups"; "type": "type"; }, {}, never, never>;
}
export declare class DxiLayerModule {
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<DxiLayerModule, never>;
    static ɵmod: ɵngcc0.ɵɵNgModuleDeclaration<DxiLayerModule, [typeof DxiLayerComponent], never, [typeof DxiLayerComponent]>;
    static ɵinj: ɵngcc0.ɵɵInjectorDeclaration<DxiLayerModule>;
}

//# sourceMappingURL=layer-dxi.d.ts.map