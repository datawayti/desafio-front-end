{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/date_box/ui.date_box.strategy.list.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport $ from \"../../core/renderer\";\nimport { getWindow } from \"../../core/utils/window\";\nvar window = getWindow();\nimport List from \"../list\";\nimport DateBoxStrategy from \"./ui.date_box.strategy\";\nimport { noop, ensureDefined } from \"../../core/utils/common\";\nimport { isDate } from \"../../core/utils/type\";\nimport { extend } from \"../../core/utils/extend\";\nimport dateUtils from \"./ui.date_utils\";\nimport dateLocalization from \"../../localization/date\";\nimport dateSerialization from \"../../core/utils/date_serialization\";\nimport { getSizeValue } from \"../drop_down_editor/utils\";\nvar DATE_FORMAT = \"date\";\nvar BOUNDARY_VALUES = {\n  min: new Date(0, 0, 0, 0, 0),\n  max: new Date(0, 0, 0, 23, 59)\n};\nvar ListStrategy = DateBoxStrategy.inherit({\n  NAME: \"List\",\n  supportedKeys: function () {\n    return {\n      tab: function () {\n        if (this.option(\"opened\")) {\n          this.close();\n        }\n      },\n      space: noop,\n      home: noop,\n      end: noop\n    };\n  },\n  getDefaultOptions: function () {\n    return extend(this.callBase(), {\n      applyValueMode: \"instantly\"\n    });\n  },\n  getDisplayFormat: function (displayFormat) {\n    return displayFormat || \"shorttime\";\n  },\n  popupConfig: function (_popupConfig) {\n    return _popupConfig;\n  },\n  useCurrentDateByDefault: function () {\n    return true;\n  },\n  getDefaultDate: function () {\n    return new Date(null);\n  },\n  popupShowingHandler: function () {\n    this.dateBox._dimensionChanged();\n  },\n  _renderWidget: function () {\n    this.callBase();\n\n    this._refreshItems();\n  },\n  _getWidgetName: function () {\n    return List;\n  },\n  _getWidgetOptions: function () {\n    return {\n      itemTemplate: this._timeListItemTemplate.bind(this),\n      onItemClick: this._listItemClickHandler.bind(this),\n      tabIndex: -1,\n      onFocusedItemChanged: this._refreshActiveDescendant.bind(this),\n      selectionMode: \"single\"\n    };\n  },\n  _refreshActiveDescendant: function (e) {\n    this.dateBox.setAria(\"activedescendant\", \"\");\n    this.dateBox.setAria(\"activedescendant\", e.actionValue);\n  },\n  _refreshItems: function () {\n    this._widgetItems = this._getTimeListItems();\n\n    this._widget.option(\"items\", this._widgetItems);\n  },\n  renderOpenedState: function () {\n    if (!this._widget) {\n      return;\n    }\n\n    this._widget.option(\"focusedElement\", null);\n\n    this._setSelectedItemsByValue();\n\n    if (this._widget.option(\"templatesRenderAsynchronously\")) {\n      this._asyncScrollTimeout = setTimeout(this._scrollToSelectedItem.bind(this));\n    } else {\n      this._scrollToSelectedItem();\n    }\n  },\n  dispose: function () {\n    this.callBase();\n    clearTimeout(this._asyncScrollTimeout);\n  },\n  _updateValue: function () {\n    if (!this._widget) {\n      return;\n    }\n\n    this._refreshItems();\n\n    this._setSelectedItemsByValue();\n\n    this._scrollToSelectedItem();\n  },\n  _setSelectedItemsByValue: function () {\n    var value = this.dateBoxValue();\n\n    var dateIndex = this._getDateIndex(value);\n\n    if (-1 === dateIndex) {\n      this._widget.option(\"selectedItems\", []);\n    } else {\n      this._widget.option(\"selectedIndex\", dateIndex);\n    }\n  },\n  _scrollToSelectedItem: function () {\n    this._widget.scrollToItem(this._widget.option(\"selectedIndex\"));\n  },\n  _getDateIndex: function (date) {\n    var result = -1;\n\n    for (var i = 0, n = this._widgetItems.length; i < n; i++) {\n      if (this._areDatesEqual(date, this._widgetItems[i])) {\n        result = i;\n        break;\n      }\n    }\n\n    return result;\n  },\n  _areDatesEqual: function (first, second) {\n    return isDate(first) && isDate(second) && first.getHours() === second.getHours() && first.getMinutes() === second.getMinutes();\n  },\n  _getTimeListItems: function () {\n    var min = this.dateBox.dateOption(\"min\") || this._getBoundaryDate(\"min\");\n\n    var max = this.dateBox.dateOption(\"max\") || this._getBoundaryDate(\"max\");\n\n    var value = this.dateBox.dateOption(\"value\") || null;\n    var delta = max - min;\n    var minutes = min.getMinutes() % this.dateBox.option(\"interval\");\n\n    if (delta < 0) {\n      return [];\n    }\n\n    if (delta > dateUtils.ONE_DAY) {\n      delta = dateUtils.ONE_DAY;\n    }\n\n    if (value - min < dateUtils.ONE_DAY) {\n      return this._getRangeItems(min, new Date(min), delta);\n    }\n\n    min = this._getBoundaryDate(\"min\");\n    min.setMinutes(minutes);\n\n    if (value && Math.abs(value - max) < dateUtils.ONE_DAY) {\n      delta = (60 * max.getHours() + Math.abs(max.getMinutes() - minutes)) * dateUtils.ONE_MINUTE;\n    }\n\n    return this._getRangeItems(min, new Date(min), delta);\n  },\n  _getRangeItems: function (startValue, currentValue, rangeDuration) {\n    var rangeItems = [];\n    var interval = this.dateBox.option(\"interval\");\n\n    while (currentValue - startValue <= rangeDuration) {\n      rangeItems.push(new Date(currentValue));\n      currentValue.setMinutes(currentValue.getMinutes() + interval);\n    }\n\n    return rangeItems;\n  },\n  _getBoundaryDate: function (boundary) {\n    var boundaryValue = BOUNDARY_VALUES[boundary];\n    var currentValue = new Date(ensureDefined(this.dateBox.dateOption(\"value\"), 0));\n    return new Date(currentValue.getFullYear(), currentValue.getMonth(), currentValue.getDate(), boundaryValue.getHours(), boundaryValue.getMinutes());\n  },\n  _timeListItemTemplate: function (itemData) {\n    var displayFormat = this.dateBox.option(\"displayFormat\");\n    return dateLocalization.format(itemData, this.getDisplayFormat(displayFormat));\n  },\n  _listItemClickHandler: function (e) {\n    this.dateBox.option(\"opened\", false);\n    var date = this.dateBox.option(\"value\");\n    var {\n      itemData: itemData\n    } = e;\n    var hours = itemData.getHours();\n    var minutes = itemData.getMinutes();\n    var seconds = itemData.getSeconds();\n    var year = itemData.getFullYear();\n    var month = itemData.getMonth();\n    var day = itemData.getDate();\n\n    if (date) {\n      if (this.dateBox.option(\"dateSerializationFormat\")) {\n        date = dateSerialization.deserializeDate(date);\n      } else {\n        date = new Date(date);\n      }\n\n      date.setHours(hours);\n      date.setMinutes(minutes);\n      date.setSeconds(seconds);\n      date.setFullYear(year);\n      date.setMonth(month);\n      date.setDate(day);\n    } else {\n      date = new Date(year, month, day, hours, minutes, 0, 0);\n    }\n\n    this.dateBoxValue(date, e.event);\n  },\n\n  getKeyboardListener() {\n    return this._widget;\n  },\n\n  _updatePopupHeight: function () {\n    var dropDownOptionsHeight = getSizeValue(this.dateBox.option(\"dropDownOptions.height\"));\n\n    if (void 0 === dropDownOptionsHeight || \"auto\" === dropDownOptionsHeight) {\n      this.dateBox._setPopupOption(\"height\", \"auto\");\n\n      var popupHeight = this._widget.$element().outerHeight();\n\n      var maxHeight = .45 * $(window).height();\n\n      this.dateBox._setPopupOption(\"height\", Math.min(popupHeight, maxHeight));\n    }\n\n    this.dateBox._timeList && this.dateBox._timeList.updateDimensions();\n  },\n  getParsedText: function (text, format) {\n    var value = this.callBase(text, format);\n\n    if (value) {\n      value = dateUtils.mergeDates(value, new Date(null), DATE_FORMAT);\n    }\n\n    return value;\n  }\n});\nexport default ListStrategy;","map":{"version":3,"sources":["/home/yuriwendt/desafio-front-end/node_modules/devextreme/esm/ui/date_box/ui.date_box.strategy.list.js"],"names":["$","getWindow","window","List","DateBoxStrategy","noop","ensureDefined","isDate","extend","dateUtils","dateLocalization","dateSerialization","getSizeValue","DATE_FORMAT","BOUNDARY_VALUES","min","Date","max","ListStrategy","inherit","NAME","supportedKeys","tab","option","close","space","home","end","getDefaultOptions","callBase","applyValueMode","getDisplayFormat","displayFormat","popupConfig","_popupConfig","useCurrentDateByDefault","getDefaultDate","popupShowingHandler","dateBox","_dimensionChanged","_renderWidget","_refreshItems","_getWidgetName","_getWidgetOptions","itemTemplate","_timeListItemTemplate","bind","onItemClick","_listItemClickHandler","tabIndex","onFocusedItemChanged","_refreshActiveDescendant","selectionMode","e","setAria","actionValue","_widgetItems","_getTimeListItems","_widget","renderOpenedState","_setSelectedItemsByValue","_asyncScrollTimeout","setTimeout","_scrollToSelectedItem","dispose","clearTimeout","_updateValue","value","dateBoxValue","dateIndex","_getDateIndex","scrollToItem","date","result","i","n","length","_areDatesEqual","first","second","getHours","getMinutes","dateOption","_getBoundaryDate","delta","minutes","ONE_DAY","_getRangeItems","setMinutes","Math","abs","ONE_MINUTE","startValue","currentValue","rangeDuration","rangeItems","interval","push","boundary","boundaryValue","getFullYear","getMonth","getDate","itemData","format","hours","seconds","getSeconds","year","month","day","deserializeDate","setHours","setSeconds","setFullYear","setMonth","setDate","event","getKeyboardListener","_updatePopupHeight","dropDownOptionsHeight","_setPopupOption","popupHeight","$element","outerHeight","maxHeight","height","_timeList","updateDimensions","getParsedText","text","mergeDates"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/date_box/ui.date_box.strategy.list.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    getWindow\r\n} from \"../../core/utils/window\";\r\nvar window = getWindow();\r\nimport List from \"../list\";\r\nimport DateBoxStrategy from \"./ui.date_box.strategy\";\r\nimport {\r\n    noop,\r\n    ensureDefined\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    isDate\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport dateUtils from \"./ui.date_utils\";\r\nimport dateLocalization from \"../../localization/date\";\r\nimport dateSerialization from \"../../core/utils/date_serialization\";\r\nimport {\r\n    getSizeValue\r\n} from \"../drop_down_editor/utils\";\r\nvar DATE_FORMAT = \"date\";\r\nvar BOUNDARY_VALUES = {\r\n    min: new Date(0, 0, 0, 0, 0),\r\n    max: new Date(0, 0, 0, 23, 59)\r\n};\r\nvar ListStrategy = DateBoxStrategy.inherit({\r\n    NAME: \"List\",\r\n    supportedKeys: function() {\r\n        return {\r\n            tab: function() {\r\n                if (this.option(\"opened\")) {\r\n                    this.close()\r\n                }\r\n            },\r\n            space: noop,\r\n            home: noop,\r\n            end: noop\r\n        }\r\n    },\r\n    getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            applyValueMode: \"instantly\"\r\n        })\r\n    },\r\n    getDisplayFormat: function(displayFormat) {\r\n        return displayFormat || \"shorttime\"\r\n    },\r\n    popupConfig: function(_popupConfig) {\r\n        return _popupConfig\r\n    },\r\n    useCurrentDateByDefault: function() {\r\n        return true\r\n    },\r\n    getDefaultDate: function() {\r\n        return new Date(null)\r\n    },\r\n    popupShowingHandler: function() {\r\n        this.dateBox._dimensionChanged()\r\n    },\r\n    _renderWidget: function() {\r\n        this.callBase();\r\n        this._refreshItems()\r\n    },\r\n    _getWidgetName: function() {\r\n        return List\r\n    },\r\n    _getWidgetOptions: function() {\r\n        return {\r\n            itemTemplate: this._timeListItemTemplate.bind(this),\r\n            onItemClick: this._listItemClickHandler.bind(this),\r\n            tabIndex: -1,\r\n            onFocusedItemChanged: this._refreshActiveDescendant.bind(this),\r\n            selectionMode: \"single\"\r\n        }\r\n    },\r\n    _refreshActiveDescendant: function(e) {\r\n        this.dateBox.setAria(\"activedescendant\", \"\");\r\n        this.dateBox.setAria(\"activedescendant\", e.actionValue)\r\n    },\r\n    _refreshItems: function() {\r\n        this._widgetItems = this._getTimeListItems();\r\n        this._widget.option(\"items\", this._widgetItems)\r\n    },\r\n    renderOpenedState: function() {\r\n        if (!this._widget) {\r\n            return\r\n        }\r\n        this._widget.option(\"focusedElement\", null);\r\n        this._setSelectedItemsByValue();\r\n        if (this._widget.option(\"templatesRenderAsynchronously\")) {\r\n            this._asyncScrollTimeout = setTimeout(this._scrollToSelectedItem.bind(this))\r\n        } else {\r\n            this._scrollToSelectedItem()\r\n        }\r\n    },\r\n    dispose: function() {\r\n        this.callBase();\r\n        clearTimeout(this._asyncScrollTimeout)\r\n    },\r\n    _updateValue: function() {\r\n        if (!this._widget) {\r\n            return\r\n        }\r\n        this._refreshItems();\r\n        this._setSelectedItemsByValue();\r\n        this._scrollToSelectedItem()\r\n    },\r\n    _setSelectedItemsByValue: function() {\r\n        var value = this.dateBoxValue();\r\n        var dateIndex = this._getDateIndex(value);\r\n        if (-1 === dateIndex) {\r\n            this._widget.option(\"selectedItems\", [])\r\n        } else {\r\n            this._widget.option(\"selectedIndex\", dateIndex)\r\n        }\r\n    },\r\n    _scrollToSelectedItem: function() {\r\n        this._widget.scrollToItem(this._widget.option(\"selectedIndex\"))\r\n    },\r\n    _getDateIndex: function(date) {\r\n        var result = -1;\r\n        for (var i = 0, n = this._widgetItems.length; i < n; i++) {\r\n            if (this._areDatesEqual(date, this._widgetItems[i])) {\r\n                result = i;\r\n                break\r\n            }\r\n        }\r\n        return result\r\n    },\r\n    _areDatesEqual: function(first, second) {\r\n        return isDate(first) && isDate(second) && first.getHours() === second.getHours() && first.getMinutes() === second.getMinutes()\r\n    },\r\n    _getTimeListItems: function() {\r\n        var min = this.dateBox.dateOption(\"min\") || this._getBoundaryDate(\"min\");\r\n        var max = this.dateBox.dateOption(\"max\") || this._getBoundaryDate(\"max\");\r\n        var value = this.dateBox.dateOption(\"value\") || null;\r\n        var delta = max - min;\r\n        var minutes = min.getMinutes() % this.dateBox.option(\"interval\");\r\n        if (delta < 0) {\r\n            return []\r\n        }\r\n        if (delta > dateUtils.ONE_DAY) {\r\n            delta = dateUtils.ONE_DAY\r\n        }\r\n        if (value - min < dateUtils.ONE_DAY) {\r\n            return this._getRangeItems(min, new Date(min), delta)\r\n        }\r\n        min = this._getBoundaryDate(\"min\");\r\n        min.setMinutes(minutes);\r\n        if (value && Math.abs(value - max) < dateUtils.ONE_DAY) {\r\n            delta = (60 * max.getHours() + Math.abs(max.getMinutes() - minutes)) * dateUtils.ONE_MINUTE\r\n        }\r\n        return this._getRangeItems(min, new Date(min), delta)\r\n    },\r\n    _getRangeItems: function(startValue, currentValue, rangeDuration) {\r\n        var rangeItems = [];\r\n        var interval = this.dateBox.option(\"interval\");\r\n        while (currentValue - startValue <= rangeDuration) {\r\n            rangeItems.push(new Date(currentValue));\r\n            currentValue.setMinutes(currentValue.getMinutes() + interval)\r\n        }\r\n        return rangeItems\r\n    },\r\n    _getBoundaryDate: function(boundary) {\r\n        var boundaryValue = BOUNDARY_VALUES[boundary];\r\n        var currentValue = new Date(ensureDefined(this.dateBox.dateOption(\"value\"), 0));\r\n        return new Date(currentValue.getFullYear(), currentValue.getMonth(), currentValue.getDate(), boundaryValue.getHours(), boundaryValue.getMinutes())\r\n    },\r\n    _timeListItemTemplate: function(itemData) {\r\n        var displayFormat = this.dateBox.option(\"displayFormat\");\r\n        return dateLocalization.format(itemData, this.getDisplayFormat(displayFormat))\r\n    },\r\n    _listItemClickHandler: function(e) {\r\n        this.dateBox.option(\"opened\", false);\r\n        var date = this.dateBox.option(\"value\");\r\n        var {\r\n            itemData: itemData\r\n        } = e;\r\n        var hours = itemData.getHours();\r\n        var minutes = itemData.getMinutes();\r\n        var seconds = itemData.getSeconds();\r\n        var year = itemData.getFullYear();\r\n        var month = itemData.getMonth();\r\n        var day = itemData.getDate();\r\n        if (date) {\r\n            if (this.dateBox.option(\"dateSerializationFormat\")) {\r\n                date = dateSerialization.deserializeDate(date)\r\n            } else {\r\n                date = new Date(date)\r\n            }\r\n            date.setHours(hours);\r\n            date.setMinutes(minutes);\r\n            date.setSeconds(seconds);\r\n            date.setFullYear(year);\r\n            date.setMonth(month);\r\n            date.setDate(day)\r\n        } else {\r\n            date = new Date(year, month, day, hours, minutes, 0, 0)\r\n        }\r\n        this.dateBoxValue(date, e.event)\r\n    },\r\n    getKeyboardListener() {\r\n        return this._widget\r\n    },\r\n    _updatePopupHeight: function() {\r\n        var dropDownOptionsHeight = getSizeValue(this.dateBox.option(\"dropDownOptions.height\"));\r\n        if (void 0 === dropDownOptionsHeight || \"auto\" === dropDownOptionsHeight) {\r\n            this.dateBox._setPopupOption(\"height\", \"auto\");\r\n            var popupHeight = this._widget.$element().outerHeight();\r\n            var maxHeight = .45 * $(window).height();\r\n            this.dateBox._setPopupOption(\"height\", Math.min(popupHeight, maxHeight))\r\n        }\r\n        this.dateBox._timeList && this.dateBox._timeList.updateDimensions()\r\n    },\r\n    getParsedText: function(text, format) {\r\n        var value = this.callBase(text, format);\r\n        if (value) {\r\n            value = dateUtils.mergeDates(value, new Date(null), DATE_FORMAT)\r\n        }\r\n        return value\r\n    }\r\n});\r\nexport default ListStrategy;\r\n"]},"metadata":{},"sourceType":"module"}