{"ast":null,"code":"/**\r\n * DevExtreme (esm/ui/scheduler/ui.scheduler.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport registerComponent from \"../../core/component_registrator\";\nimport config from \"../../core/config\";\nimport devices from \"../../core/devices\";\nimport $ from \"../../core/renderer\";\nimport { BindableTemplate } from \"../../core/templates/bindable_template\";\nimport { EmptyTemplate } from \"../../core/templates/empty_template\";\nimport { inArray } from \"../../core/utils/array\";\nimport browser from \"../../core/utils/browser\";\nimport Callbacks from \"../../core/utils/callbacks\";\nimport { noop } from \"../../core/utils/common\";\nimport { compileGetter, compileSetter } from \"../../core/utils/data\";\nimport { getBoundingRect } from \"../../core/utils/position\";\nimport dateUtils from \"../../core/utils/date\";\nimport dateSerialization from \"../../core/utils/date_serialization\";\nimport { Deferred, when, fromPromise } from \"../../core/utils/deferred\";\nimport { extend } from \"../../core/utils/extend\";\nimport { each } from \"../../core/utils/iterator\";\nimport { touch } from \"../../core/utils/support\";\nimport { isDefined, isString, isObject, isFunction, isEmptyObject, isDeferred, isPromise } from \"../../core/utils/type\";\nimport { hasWindow } from \"../../core/utils/window\";\nimport DataHelperMixin from \"../../data_helper\";\nimport { triggerResizeEvent } from \"../../events/visibility_change\";\nimport dateLocalization from \"../../localization/date\";\nimport messageLocalization from \"../../localization/message\";\nimport { custom as customDialog } from \"../dialog\";\nimport { isMaterial } from \"../themes\";\nimport errors from \"../widget/ui.errors\";\nimport Widget from \"../widget/ui.widget\";\nimport AppointmentPopup from \"./appointmentPopup\";\nimport { CompactAppointmentsHelper } from \"./compactAppointmentsHelper\";\nimport { DesktopTooltipStrategy } from \"./tooltip_strategies/desktopTooltipStrategy\";\nimport { MobileTooltipStrategy } from \"./tooltip_strategies/mobileTooltipStrategy\";\nimport { hide as hideLoading, show as showLoading } from \"./loading\";\nimport AppointmentCollection from \"./appointments/appointmentCollection\";\nimport AppointmentLayoutManager from \"./appointments.layout_manager\";\nimport SchedulerAppointmentModel from \"./appointment_model\";\nimport { Header } from \"./header/header\";\nimport { ResourceManager } from \"./resources/resourceManager\";\nimport subscribes from \"./subscribes\";\nimport { getRecurrenceProcessor } from \"./recurrence\";\nimport timeZoneUtils from \"./utils.timeZone\";\nimport SchedulerAgenda from \"./workspaces/ui.scheduler.agenda\";\nimport SchedulerTimelineDay from \"./workspaces/ui.scheduler.timeline_day\";\nimport SchedulerTimelineMonth from \"./workspaces/ui.scheduler.timeline_month\";\nimport SchedulerTimelineWeek from \"./workspaces/ui.scheduler.timeline_week\";\nimport SchedulerTimelineWorkWeek from \"./workspaces/ui.scheduler.timeline_work_week\";\nimport SchedulerWorkSpaceDay from \"./workspaces/ui.scheduler.work_space_day\";\nimport SchedulerWorkSpaceMonth from \"./workspaces/ui.scheduler.work_space_month\";\nimport SchedulerWorkSpaceWeek from \"./workspaces/ui.scheduler.work_space_week\";\nimport SchedulerWorkSpaceWorkWeek from \"./workspaces/ui.scheduler.work_space_work_week\";\nimport AppointmentAdapter from \"./appointmentAdapter\";\nimport { TimeZoneCalculator } from \"./timeZoneCalculator\";\nimport { AppointmentTooltipInfo } from \"./dataStructures\";\nimport { AppointmentSettingsGenerator } from \"./appointmentSettingsGenerator\";\nimport AppointmentFilter from \"./appointments/appointmentFilter\";\nimport utils from \"./utils\";\nvar MINUTES_IN_HOUR = 60;\nvar WIDGET_CLASS = \"dx-scheduler\";\nvar WIDGET_SMALL_CLASS = \"\".concat(WIDGET_CLASS, \"-small\");\nvar WIDGET_ADAPTIVE_CLASS = \"\".concat(WIDGET_CLASS, \"-adaptive\");\nvar WIDGET_WIN_NO_TOUCH_CLASS = \"\".concat(WIDGET_CLASS, \"-win-no-touch\");\nvar WIDGET_READONLY_CLASS = \"\".concat(WIDGET_CLASS, \"-readonly\");\nvar WIDGET_SMALL_WIDTH = 400;\nvar FULL_DATE_FORMAT = \"yyyyMMddTHHmmss\";\nvar UTC_FULL_DATE_FORMAT = FULL_DATE_FORMAT + \"Z\";\nvar VIEWS_CONFIG = {\n  day: {\n    workSpace: SchedulerWorkSpaceDay,\n    renderingStrategy: \"vertical\"\n  },\n  week: {\n    workSpace: SchedulerWorkSpaceWeek,\n    renderingStrategy: \"vertical\"\n  },\n  workWeek: {\n    workSpace: SchedulerWorkSpaceWorkWeek,\n    renderingStrategy: \"vertical\"\n  },\n  month: {\n    workSpace: SchedulerWorkSpaceMonth,\n    renderingStrategy: \"horizontalMonth\"\n  },\n  timelineDay: {\n    workSpace: SchedulerTimelineDay,\n    renderingStrategy: \"horizontal\"\n  },\n  timelineWeek: {\n    workSpace: SchedulerTimelineWeek,\n    renderingStrategy: \"horizontal\"\n  },\n  timelineWorkWeek: {\n    workSpace: SchedulerTimelineWorkWeek,\n    renderingStrategy: \"horizontal\"\n  },\n  timelineMonth: {\n    workSpace: SchedulerTimelineMonth,\n    renderingStrategy: \"horizontalMonthLine\"\n  },\n  agenda: {\n    workSpace: SchedulerAgenda,\n    renderingStrategy: \"agenda\"\n  }\n};\nvar StoreEventNames = {\n  ADDING: \"onAppointmentAdding\",\n  ADDED: \"onAppointmentAdded\",\n  DELETING: \"onAppointmentDeleting\",\n  DELETED: \"onAppointmentDeleted\",\n  UPDATING: \"onAppointmentUpdating\",\n  UPDATED: \"onAppointmentUpdated\"\n};\nvar RECURRENCE_EDITING_MODE = {\n  SERIES: \"editSeries\",\n  OCCURENCE: \"editOccurence\",\n  CANCEL: \"cancel\"\n};\n\nclass Scheduler extends Widget {\n  get appointmentFilter() {\n    return new AppointmentFilter(this);\n  }\n\n  _getDefaultOptions() {\n    var defaultOptions = extend(super._getDefaultOptions(), {\n      views: [\"day\", \"week\"],\n      currentView: \"day\",\n      currentDate: dateUtils.trimTime(new Date()),\n      min: void 0,\n      max: void 0,\n      dateSerializationFormat: void 0,\n      firstDayOfWeek: void 0,\n      groups: [],\n      resources: [],\n      dataSource: null,\n      customizeDateNavigatorText: void 0,\n      appointmentTemplate: \"item\",\n      dropDownAppointmentTemplate: \"dropDownAppointment\",\n      appointmentCollectorTemplate: \"appointmentCollector\",\n      dataCellTemplate: null,\n      timeCellTemplate: null,\n      resourceCellTemplate: null,\n      dateCellTemplate: null,\n      startDayHour: 0,\n      endDayHour: 24,\n      editing: {\n        allowAdding: true,\n        allowDeleting: true,\n        allowDragging: true,\n        allowResizing: true,\n        allowUpdating: true,\n        allowTimeZoneEditing: false,\n        allowEditingTimeZones: false\n      },\n      showAllDayPanel: true,\n      showCurrentTimeIndicator: true,\n      shadeUntilCurrentTime: false,\n      indicatorUpdateInterval: 3e5,\n      indicatorTime: void 0,\n      recurrenceEditMode: \"dialog\",\n      cellDuration: 30,\n      maxAppointmentsPerCell: \"auto\",\n      selectedCellData: [],\n      groupByDate: false,\n      onAppointmentRendered: null,\n      onAppointmentClick: null,\n      onAppointmentDblClick: null,\n      onAppointmentContextMenu: null,\n      onCellClick: null,\n      onCellContextMenu: null,\n      onAppointmentAdding: null,\n      onAppointmentAdded: null,\n      onAppointmentUpdating: null,\n      onAppointmentUpdated: null,\n      onAppointmentDeleting: null,\n      onAppointmentDeleted: null,\n      onAppointmentFormOpening: null,\n      appointmentTooltipTemplate: \"appointmentTooltip\",\n      appointmentPopupTemplate: \"appointmentPopup\",\n      crossScrollingEnabled: false,\n      useDropDownViewSwitcher: false,\n      startDateExpr: \"startDate\",\n      endDateExpr: \"endDate\",\n      textExpr: \"text\",\n      descriptionExpr: \"description\",\n      allDayExpr: \"allDay\",\n      recurrenceRuleExpr: \"recurrenceRule\",\n      recurrenceExceptionExpr: \"recurrenceException\",\n      disabledExpr: \"disabled\",\n      remoteFiltering: false,\n      timeZone: \"\",\n      startDateTimeZoneExpr: \"startDateTimeZone\",\n      endDateTimeZoneExpr: \"endDateTimeZone\",\n      noDataText: messageLocalization.format(\"dxCollectionWidget-noDataText\"),\n      adaptivityEnabled: false,\n      allowMultipleCellSelection: true,\n      scrolling: {\n        mode: \"standard\"\n      },\n      renovateRender: true,\n      _draggingMode: \"outlook\",\n      _appointmentTooltipOffset: {\n        x: 0,\n        y: 0\n      },\n      _appointmentTooltipButtonsPosition: \"bottom\",\n      _appointmentTooltipOpenButtonText: messageLocalization.format(\"dxScheduler-openAppointment\"),\n      _dropDownButtonIcon: \"overflow\",\n      _appointmentCountPerCell: 2,\n      _collectorOffset: 0,\n      _appointmentOffset: 26\n    });\n    return extend(true, defaultOptions, {\n      integrationOptions: {\n        useDeferUpdateForTemplates: false\n      }\n    });\n  }\n\n  _defaultOptionsRules() {\n    return super._defaultOptionsRules().concat([{\n      device: function () {\n        return \"desktop\" === devices.real().deviceType && !devices.isSimulator();\n      },\n      options: {\n        focusStateEnabled: true\n      }\n    }, {\n      device: function () {\n        return !devices.current().generic;\n      },\n      options: {\n        useDropDownViewSwitcher: true,\n        editing: {\n          allowDragging: false,\n          allowResizing: false\n        }\n      }\n    }, {\n      device: function () {\n        return isMaterial();\n      },\n      options: {\n        useDropDownViewSwitcher: true,\n        dateCellTemplate: function (data, index, element) {\n          var text = data.text;\n          text.split(\" \").forEach(function (text, index) {\n            var span = $(\"<span>\").text(text).addClass(\"dx-scheduler-header-panel-cell-date\");\n            $(element).append(span);\n\n            if (!index) {\n              $(element).append(\" \");\n            }\n          });\n        },\n        _appointmentTooltipOffset: {\n          x: 0,\n          y: 11\n        },\n        _appointmentTooltipButtonsPosition: \"top\",\n        _appointmentTooltipOpenButtonText: null,\n        _dropDownButtonIcon: \"chevrondown\",\n        _appointmentCountPerCell: 1,\n        _collectorOffset: 20,\n        _appointmentOffset: 30\n      }\n    }]);\n  }\n\n  _setDeprecatedOptions() {\n    super._setDeprecatedOptions();\n\n    extend(this._deprecatedOptions, {\n      dropDownAppointmentTemplate: {\n        since: \"19.2\",\n        message: \"appointmentTooltipTemplate\"\n      },\n      allowEditingTimeZones: {\n        since: \"20.1\",\n        alias: \"allowTimeZoneEditing\"\n      }\n    });\n  }\n\n  _getAppointmentSettingsGenerator() {\n    return new AppointmentSettingsGenerator(this);\n  }\n\n  _postponeDataSourceLoading(promise) {\n    this.postponedOperations.add(\"_reloadDataSource\", this._reloadDataSource.bind(this), promise);\n  }\n\n  _postponeResourceLoading() {\n    var whenLoaded = this.postponedOperations.add(\"_loadResources\", () => this._loadResources());\n    var resolveCallbacks = new Deferred();\n    whenLoaded.done(resources => {\n      resolveCallbacks.resolve(resources);\n    });\n\n    this._postponeDataSourceLoading(whenLoaded);\n\n    return resolveCallbacks.promise();\n  }\n\n  _optionChanged(args) {\n    var value = args.value;\n    var name = args.name;\n\n    switch (args.name) {\n      case \"customizeDateNavigatorText\":\n        this._updateOption(\"header\", name, value);\n\n        break;\n\n      case \"firstDayOfWeek\":\n        this._updateOption(\"workSpace\", name, value);\n\n        this._updateOption(\"header\", name, value);\n\n        break;\n\n      case \"currentDate\":\n        value = this._dateOption(name);\n        value = dateUtils.trimTime(new Date(value));\n        this.option(\"selectedCellData\", []);\n\n        this._workSpace.option(name, new Date(value));\n\n        this._header.option(name, new Date(value));\n\n        this._header.option(\"displayedDate\", this._workSpace._getViewStartByOptions());\n\n        this._appointments.option(\"items\", []);\n\n        this._filterAppointmentsByDate();\n\n        this._postponeDataSourceLoading();\n\n        break;\n\n      case \"dataSource\":\n        this._initDataSource();\n\n        this._appointmentModel.setDataSource(this._dataSource);\n\n        this._postponeResourceLoading().done(resources => {\n          this._filterAppointmentsByDate();\n\n          this._updateOption(\"workSpace\", \"showAllDayPanel\", this.option(\"showAllDayPanel\"));\n        });\n\n        break;\n\n      case \"min\":\n      case \"max\":\n        value = this._dateOption(name);\n\n        this._updateOption(\"header\", name, new Date(value));\n\n        this._updateOption(\"workSpace\", name, new Date(value));\n\n        break;\n\n      case \"views\":\n        this._processCurrentView();\n\n        if (this._getCurrentViewOptions()) {\n          this.repaint();\n        } else {\n          this._header.option(name, value);\n        }\n\n        break;\n\n      case \"useDropDownViewSwitcher\":\n        this._header.option(name, value);\n\n        break;\n\n      case \"currentView\":\n        this._processCurrentView();\n\n        this.fire(\"validateDayHours\");\n        this.getLayoutManager().initRenderingStrategy(this._getAppointmentsRenderingStrategy());\n\n        this._validateCellDuration();\n\n        this._appointments.option({\n          items: [],\n          allowDrag: this._allowDragging(),\n          allowResize: this._allowResizing(),\n          itemTemplate: this._getAppointmentTemplate(\"appointmentTemplate\")\n        });\n\n        this._postponeResourceLoading().done(resources => {\n          this._refreshWorkSpace(resources);\n\n          this._updateHeader();\n\n          this._filterAppointmentsByDate();\n\n          this._appointments.option(\"allowAllDayResize\", \"day\" !== value);\n        });\n\n        break;\n\n      case \"appointmentTemplate\":\n        this._appointments.option(\"itemTemplate\", value);\n\n        break;\n\n      case \"dateCellTemplate\":\n      case \"resourceCellTemplate\":\n      case \"dataCellTemplate\":\n      case \"timeCellTemplate\":\n        this._updateOption(\"workSpace\", name, value);\n\n        this.repaint();\n        break;\n\n      case \"groups\":\n        this._postponeResourceLoading().done(resources => {\n          this._refreshWorkSpace(resources);\n\n          this._filterAppointmentsByDate();\n        });\n\n        break;\n\n      case \"resources\":\n        this._resourcesManager.setResources(this.option(\"resources\"));\n\n        this._appointmentModel.setDataAccessors(this._combineDataAccessors());\n\n        this._postponeResourceLoading().done(resources => {\n          this._appointments.option(\"items\", []);\n\n          this._refreshWorkSpace(resources);\n\n          this._filterAppointmentsByDate();\n        });\n\n        break;\n\n      case \"startDayHour\":\n      case \"endDayHour\":\n        this.fire(\"validateDayHours\");\n\n        this._appointments.option(\"items\", []);\n\n        this._updateOption(\"workSpace\", name, value);\n\n        this._appointments.repaint();\n\n        this._filterAppointmentsByDate();\n\n        this._postponeDataSourceLoading();\n\n        break;\n\n      case StoreEventNames.ADDING:\n      case StoreEventNames.ADDED:\n      case StoreEventNames.UPDATING:\n      case StoreEventNames.UPDATED:\n      case StoreEventNames.DELETING:\n      case StoreEventNames.DELETED:\n      case \"onAppointmentFormOpening\":\n        this._actions[name] = this._createActionByOption(name);\n        break;\n\n      case \"onAppointmentRendered\":\n        this._appointments.option(\"onItemRendered\", this._getAppointmentRenderedAction());\n\n        break;\n\n      case \"onAppointmentClick\":\n        this._appointments.option(\"onItemClick\", this._createActionByOption(name));\n\n        break;\n\n      case \"onAppointmentDblClick\":\n        this._appointments.option(name, this._createActionByOption(name));\n\n        break;\n\n      case \"onAppointmentContextMenu\":\n        this._appointments.option(\"onItemContextMenu\", this._createActionByOption(name));\n\n        break;\n\n      case \"noDataText\":\n      case \"allowMultipleCellSelection\":\n      case \"selectedCellData\":\n      case \"accessKey\":\n      case \"onCellClick\":\n      case \"onCellContextMenu\":\n        this._workSpace.option(name, value);\n\n        break;\n\n      case \"crossScrollingEnabled\":\n        this._postponeResourceLoading().done(resources => {\n          this._appointments.option(\"items\", []);\n\n          this._refreshWorkSpace(resources);\n\n          if (this._readyToRenderAppointments) {\n            this._appointments.option(\"items\", this._getAppointmentsToRepaint());\n          }\n        });\n\n        break;\n\n      case \"cellDuration\":\n        this._validateCellDuration();\n\n        this._appointments.option(\"items\", []);\n\n        if (this._readyToRenderAppointments) {\n          this._updateOption(\"workSpace\", \"hoursInterval\", value / 60);\n\n          this._appointments.option(\"items\", this._getAppointmentsToRepaint());\n        }\n\n        break;\n\n      case \"tabIndex\":\n      case \"focusStateEnabled\":\n        this._updateOption(\"header\", name, value);\n\n        this._updateOption(\"workSpace\", name, value);\n\n        this._appointments.option(name, value);\n\n        super._optionChanged(args);\n\n        break;\n\n      case \"width\":\n        this._updateOption(\"header\", name, value);\n\n        if (this.option(\"crossScrollingEnabled\")) {\n          this._updateOption(\"workSpace\", \"width\", value);\n        }\n\n        super._optionChanged(args);\n\n        this._dimensionChanged();\n\n        break;\n\n      case \"height\":\n        super._optionChanged(args);\n\n        this._dimensionChanged();\n\n        break;\n\n      case \"editing\":\n        this._initEditing();\n\n        var editing = this._editing;\n\n        this._bringEditingModeToAppointments(editing);\n\n        this.hideAppointmentTooltip();\n\n        this._cleanPopup();\n\n        break;\n\n      case \"showAllDayPanel\":\n        this._postponeResourceLoading().done(resources => {\n          this._filterAppointmentsByDate();\n\n          this._updateOption(\"workSpace\", \"allDayExpanded\", value);\n\n          this._updateOption(\"workSpace\", name, value);\n        });\n\n        break;\n\n      case \"showCurrentTimeIndicator\":\n      case \"indicatorTime\":\n      case \"indicatorUpdateInterval\":\n      case \"shadeUntilCurrentTime\":\n      case \"groupByDate\":\n        this._updateOption(\"workSpace\", name, value);\n\n        this.repaint();\n        break;\n\n      case \"appointmentDragging\":\n      case \"appointmentTooltipTemplate\":\n      case \"appointmentPopupTemplate\":\n      case \"recurrenceEditMode\":\n      case \"remoteFiltering\":\n      case \"timeZone\":\n      case \"dropDownAppointmentTemplate\":\n      case \"appointmentCollectorTemplate\":\n      case \"_appointmentTooltipOffset\":\n      case \"_appointmentTooltipButtonsPosition\":\n      case \"_appointmentTooltipOpenButtonText\":\n      case \"_dropDownButtonIcon\":\n      case \"_appointmentCountPerCell\":\n      case \"_collectorOffset\":\n      case \"_appointmentOffset\":\n        this.repaint();\n        break;\n\n      case \"dateSerializationFormat\":\n      case \"maxAppointmentsPerCell\":\n        break;\n\n      case \"startDateExpr\":\n      case \"endDateExpr\":\n      case \"startDateTimeZoneExpr\":\n      case \"endDateTimeZoneExpr\":\n      case \"textExpr\":\n      case \"descriptionExpr\":\n      case \"allDayExpr\":\n      case \"recurrenceRuleExpr\":\n      case \"recurrenceExceptionExpr\":\n      case \"disabledExpr\":\n        this._updateExpression(name, value);\n\n        this._appointmentModel.setDataAccessors(this._combineDataAccessors());\n\n        this._initAppointmentTemplate();\n\n        this.repaint();\n        break;\n\n      case \"adaptivityEnabled\":\n        this._toggleAdaptiveClass();\n\n        this.repaint();\n        break;\n\n      case \"scrolling\":\n        this.option(\"crossScrollingEnabled\", this._isHorizontalVirtualScrolling() || this.option(\"crossScrollingEnabled\"));\n\n        this._updateOption(\"workSpace\", args.fullName, value);\n\n        break;\n\n      case \"renovateRender\":\n        this._updateOption(\"workSpace\", name, value);\n\n        break;\n\n      case \"_draggingMode\":\n        this._workSpace.option(\"draggingMode\", value);\n\n        break;\n\n      default:\n        super._optionChanged(args);\n\n    }\n  }\n\n  _updateHeader() {\n    var viewCountConfig = this._getViewCountConfig();\n\n    this._header.option(\"intervalCount\", viewCountConfig.intervalCount);\n\n    this._header.option(\"displayedDate\", this._workSpace._getViewStartByOptions());\n\n    this._header.option(\"min\", this._dateOption(\"min\"));\n\n    this._header.option(\"max\", this._dateOption(\"max\"));\n\n    this._header.option(\"currentDate\", this._dateOption(\"currentDate\"));\n\n    this._header.option(\"firstDayOfWeek\", this._getCurrentViewOption(\"firstDayOfWeek\"));\n\n    this._header.option(\"currentView\", this._currentView);\n  }\n\n  _dateOption(optionName) {\n    var optionValue = this._getCurrentViewOption(optionName);\n\n    return dateSerialization.deserializeDate(optionValue);\n  }\n\n  _getSerializationFormat(optionName) {\n    var value = this._getCurrentViewOption(optionName);\n\n    if (\"number\" === typeof value) {\n      return \"number\";\n    }\n\n    if (!isString(value)) {\n      return;\n    }\n\n    return dateSerialization.getDateSerializationFormat(value);\n  }\n\n  _bringEditingModeToAppointments(editing) {\n    var editingConfig = {\n      allowDelete: editing.allowUpdating && editing.allowDeleting\n    };\n\n    if (!this._isAgenda()) {\n      editingConfig.allowDrag = editing.allowDragging;\n      editingConfig.allowResize = editing.allowResizing;\n      editingConfig.allowAllDayResize = editing.allowResizing && this._supportAllDayResizing();\n    }\n\n    this._appointments.option(editingConfig);\n\n    this.repaint();\n  }\n\n  _isAgenda() {\n    return \"agenda\" === this._getAppointmentsRenderingStrategy();\n  }\n\n  _allowDragging() {\n    return this._editing.allowDragging && !this._isAgenda();\n  }\n\n  _allowResizing() {\n    return this._editing.allowResizing && !this._isAgenda();\n  }\n\n  _allowAllDayResizing() {\n    return this._editing.allowResizing && this._supportAllDayResizing();\n  }\n\n  _supportAllDayResizing() {\n    return \"day\" !== this._getCurrentViewType() || this._currentView.intervalCount > 1;\n  }\n\n  _isAllDayExpanded(items) {\n    return this.option(\"showAllDayPanel\") && this.appointmentFilter.hasAllDayAppointments(items);\n  }\n\n  _getTimezoneOffsetByOption(date) {\n    return timeZoneUtils.calculateTimezoneByValue(this.option(\"timeZone\"), date);\n  }\n\n  _filterAppointmentsByDate() {\n    var dateRange = this._workSpace.getDateRange();\n\n    var startDate = this.timeZoneCalculator.createDate(dateRange[0], {\n      path: \"fromGrid\"\n    });\n    var endDate = this.timeZoneCalculator.createDate(dateRange[1], {\n      path: \"fromGrid\"\n    });\n\n    this._appointmentModel.filterByDate(startDate, endDate, this.option(\"remoteFiltering\"), this.option(\"dateSerializationFormat\"));\n  }\n\n  _loadResources() {\n    var groups = this._getCurrentViewOption(\"groups\");\n\n    var result = new Deferred();\n\n    this._resourcesManager.loadResources(groups).done(function (resources) {\n      this._loadedResources = resources;\n      result.resolve(resources);\n    }.bind(this));\n\n    return result.promise();\n  }\n\n  _reloadDataSource() {\n    var result = new Deferred();\n\n    if (this._dataSource) {\n      this._dataSource.load().done(function () {\n        hideLoading();\n\n        this._fireContentReadyAction(result);\n      }.bind(this)).fail(function () {\n        hideLoading();\n        result.reject();\n      });\n\n      this._dataSource.isLoading() && showLoading({\n        container: this.$element(),\n        position: {\n          of: this.$element()\n        }\n      });\n    } else {\n      this._fireContentReadyAction(result);\n    }\n\n    return result.promise();\n  }\n\n  _fireContentReadyAction(result) {\n    var contentReadyBase = super._fireContentReadyAction.bind(this);\n\n    var fireContentReady = () => {\n      contentReadyBase();\n      null === result || void 0 === result ? void 0 : result.resolve();\n    };\n\n    if (this._workSpaceRecalculation) {\n      var _this$_workSpaceRecal;\n\n      null === (_this$_workSpaceRecal = this._workSpaceRecalculation) || void 0 === _this$_workSpaceRecal ? void 0 : _this$_workSpaceRecal.done(() => {\n        fireContentReady();\n      });\n    } else {\n      fireContentReady();\n    }\n  }\n\n  _dimensionChanged() {\n    var filteredItems = this.getFilteredItems();\n\n    this._toggleSmallClass();\n\n    if (!this._isAgenda() && filteredItems && this._isVisible()) {\n      this._workSpace._cleanAllowedPositions();\n\n      this._workSpace.option(\"allDayExpanded\", this._isAllDayExpanded(filteredItems));\n\n      this._workSpace._dimensionChanged();\n\n      var appointments = this._layoutManager.createAppointmentsMap(filteredItems);\n\n      this._appointments.option(\"items\", appointments);\n    }\n\n    this.hideAppointmentTooltip();\n\n    this._appointmentPopup.triggerResize();\n\n    this._appointmentPopup.updatePopupFullScreenMode();\n  }\n\n  _clean() {\n    this._cleanPopup();\n\n    super._clean();\n  }\n\n  _toggleSmallClass() {\n    var width = getBoundingRect(this.$element().get(0)).width;\n    this.$element().toggleClass(WIDGET_SMALL_CLASS, width < WIDGET_SMALL_WIDTH);\n  }\n\n  _toggleAdaptiveClass() {\n    this.$element().toggleClass(WIDGET_ADAPTIVE_CLASS, this.option(\"adaptivityEnabled\"));\n  }\n\n  _visibilityChanged(visible) {\n    visible && this._dimensionChanged();\n  }\n\n  _dataSourceOptions() {\n    return {\n      paginate: false\n    };\n  }\n\n  _init() {\n    this._initExpressions({\n      startDate: this.option(\"startDateExpr\"),\n      endDate: this.option(\"endDateExpr\"),\n      startDateTimeZone: this.option(\"startDateTimeZoneExpr\"),\n      endDateTimeZone: this.option(\"endDateTimeZoneExpr\"),\n      allDay: this.option(\"allDayExpr\"),\n      text: this.option(\"textExpr\"),\n      description: this.option(\"descriptionExpr\"),\n      recurrenceRule: this.option(\"recurrenceRuleExpr\"),\n      recurrenceException: this.option(\"recurrenceExceptionExpr\"),\n      disabled: this.option(\"disabledExpr\")\n    });\n\n    super._init();\n\n    this._initDataSource();\n\n    this._loadedResources = [];\n    this.$element().addClass(WIDGET_CLASS).toggleClass(WIDGET_WIN_NO_TOUCH_CLASS, !!(browser.msie && touch));\n\n    this._initEditing();\n\n    this._resourcesManager = new ResourceManager(this.option(\"resources\"));\n\n    var combinedDataAccessors = this._combineDataAccessors();\n\n    this._appointmentModel = new SchedulerAppointmentModel(this._dataSource, combinedDataAccessors, this.getAppointmentDurationInMinutes());\n\n    this._initActions();\n\n    this._compactAppointmentsHelper = new CompactAppointmentsHelper(this);\n    this._asyncTemplatesTimers = [];\n    this._dataSourceLoadedCallback = Callbacks();\n    this._subscribes = subscribes;\n    this.timeZoneCalculator = new TimeZoneCalculator({\n      getClientOffset: date => timeZoneUtils.getClientTimezoneOffset(date),\n      getCommonOffset: (date, timeZone) => timeZoneUtils.calculateTimezoneByValue(timeZone || this.option(\"timeZone\"), date),\n      getAppointmentOffset: (date, appointmentTimezone) => timeZoneUtils.calculateTimezoneByValue(appointmentTimezone, date)\n    });\n  }\n\n  _initTemplates() {\n    this._initAppointmentTemplate();\n\n    this._templateManager.addDefaultTemplates({\n      appointmentTooltip: new EmptyTemplate(),\n      dropDownAppointment: new EmptyTemplate()\n    });\n\n    super._initTemplates();\n  }\n\n  _initAppointmentTemplate() {\n    var {\n      expr: expr\n    } = this._dataAccessors;\n\n    var createGetter = property => compileGetter(\"appointmentData.\".concat(property));\n\n    var getDate = getter => data => {\n      var value = getter(data);\n\n      if (value instanceof Date) {\n        return value.valueOf();\n      }\n\n      return value;\n    };\n\n    this._templateManager.addDefaultTemplates({\n      item: new BindableTemplate(($container, data, model) => this.getAppointmentsInstance()._renderAppointmentTemplate($container, data, model), [\"html\", \"text\", \"startDate\", \"endDate\", \"allDay\", \"description\", \"recurrenceRule\", \"recurrenceException\", \"startDateTimeZone\", \"endDateTimeZone\"], this.option(\"integrationOptions.watchMethod\"), {\n        text: createGetter(expr.textExpr),\n        startDate: getDate(createGetter(expr.startDateExpr)),\n        endDate: getDate(createGetter(expr.endDateExpr)),\n        startDateTimeZone: createGetter(expr.startDateTimeZoneExpr),\n        endDateTimeZone: createGetter(expr.endDateTimeZoneExpr),\n        allDay: createGetter(expr.allDayExpr),\n        recurrenceRule: createGetter(expr.recurrenceRuleExpr)\n      })\n    });\n  }\n\n  _combineDataAccessors() {\n    var resourcesDataAccessors = this._resourcesManager._dataAccessors;\n    var result = extend(true, {}, this._dataAccessors);\n    each(resourcesDataAccessors, function (type, accessor) {\n      result[type].resources = accessor;\n    }.bind(this));\n    return result;\n  }\n\n  _renderContent() {\n    this._renderContentImpl();\n  }\n\n  _dataSourceChangedHandler(result) {\n    if (this._readyToRenderAppointments) {\n      this._workSpaceRecalculation.done(function () {\n        this._renderAppointments();\n\n        var filteredItems = this.getFilteredItems();\n        this.getWorkSpace().onDataSourceChanged(filteredItems);\n      }.bind(this));\n    }\n  }\n\n  isVirtualScrolling() {\n    var _this$getWorkSpace;\n\n    return null === (_this$getWorkSpace = this.getWorkSpace()) || void 0 === _this$getWorkSpace ? void 0 : _this$getWorkSpace.isVirtualScrolling();\n  }\n\n  _filterAppointments() {\n    return this.appointmentFilter.filter();\n  }\n\n  _renderAppointments() {\n    var workspace = this.getWorkSpace();\n    this._filteredItems = this._filterAppointments();\n    workspace.preRenderAppointments({\n      allDayExpanded: this._isAllDayExpanded(this._filteredItems),\n      appointments: this._filteredItems\n    });\n\n    if (this._filteredItems.length && this._isVisible()) {\n      this._appointments.option(\"items\", this._getAppointmentsToRepaint());\n\n      this._appointmentModel.cleanModelState();\n    } else {\n      this._appointments.option(\"items\", []);\n    }\n  }\n\n  _getAppointmentsToRepaint() {\n    var appointments = this._layoutManager.createAppointmentsMap(this._filteredItems);\n\n    return this._layoutManager.getRepaintedAppointments(appointments, this.getAppointmentsInstance().option(\"items\"));\n  }\n\n  _initExpressions(fields) {\n    if (!this._dataAccessors) {\n      this._dataAccessors = {\n        getter: {},\n        setter: {},\n        expr: {}\n      };\n    }\n\n    each(fields, function (name, expr) {\n      if (expr) {\n        var getter = compileGetter(expr);\n        var setter = compileSetter(expr);\n        var dateGetter;\n        var dateSetter;\n\n        if (field = name, \"startDate\" === field || \"endDate\" === field) {\n          var that = this;\n\n          dateGetter = function () {\n            var value = getter.apply(this, arguments);\n\n            if (config().forceIsoDateParsing) {\n              if (!that.option(\"dateSerializationFormat\")) {\n                var format = dateSerialization.getDateSerializationFormat(value);\n\n                if (format) {\n                  that.option(\"dateSerializationFormat\", format);\n                }\n              }\n\n              value = dateSerialization.deserializeDate(value);\n            }\n\n            return value;\n          };\n\n          dateSetter = function (object, value) {\n            if (config().forceIsoDateParsing || that.option(\"dateSerializationFormat\")) {\n              value = dateSerialization.serializeDate(value, that.option(\"dateSerializationFormat\"));\n            }\n\n            setter.call(this, object, value);\n          };\n        }\n\n        this._dataAccessors.getter[name] = dateGetter || getter;\n        this._dataAccessors.setter[name] = dateSetter || setter;\n        this._dataAccessors.expr[name + \"Expr\"] = expr;\n      } else {\n        delete this._dataAccessors.getter[name];\n        delete this._dataAccessors.setter[name];\n        delete this._dataAccessors.expr[name + \"Expr\"];\n      }\n\n      var field;\n    }.bind(this));\n  }\n\n  _updateExpression(name, value) {\n    var exprObj = {};\n    exprObj[name.replace(\"Expr\", \"\")] = value;\n\n    this._initExpressions(exprObj);\n  }\n\n  _initEditing() {\n    var editing = this.option(\"editing\");\n    this._editing = {\n      allowAdding: !!editing,\n      allowUpdating: !!editing,\n      allowDeleting: !!editing,\n      allowResizing: !!editing,\n      allowDragging: !!editing\n    };\n\n    if (isObject(editing)) {\n      this._editing = extend(this._editing, editing);\n    }\n\n    this._editing.allowDragging = this._editing.allowDragging && this._editing.allowUpdating;\n    this._editing.allowResizing = this._editing.allowResizing && this._editing.allowUpdating;\n    this.$element().toggleClass(WIDGET_READONLY_CLASS, this._isReadOnly());\n  }\n\n  _isReadOnly() {\n    var result = true;\n    var editing = this._editing;\n\n    for (var prop in editing) {\n      if (Object.prototype.hasOwnProperty.call(editing, prop)) {\n        result = result && !editing[prop];\n      }\n    }\n\n    return result;\n  }\n\n  _dispose() {\n    var _this$_recurrenceDial;\n\n    this._appointmentTooltip && this._appointmentTooltip.dispose();\n    null === (_this$_recurrenceDial = this._recurrenceDialog) || void 0 === _this$_recurrenceDial ? void 0 : _this$_recurrenceDial.hide(RECURRENCE_EDITING_MODE.CANCEL);\n    this.hideAppointmentPopup();\n    this.hideAppointmentTooltip();\n\n    this._asyncTemplatesTimers.forEach(clearTimeout);\n\n    this._asyncTemplatesTimers = [];\n\n    super._dispose();\n  }\n\n  _initActions() {\n    this._actions = {\n      onAppointmentAdding: this._createActionByOption(StoreEventNames.ADDING),\n      onAppointmentAdded: this._createActionByOption(StoreEventNames.ADDED),\n      onAppointmentUpdating: this._createActionByOption(StoreEventNames.UPDATING),\n      onAppointmentUpdated: this._createActionByOption(StoreEventNames.UPDATED),\n      onAppointmentDeleting: this._createActionByOption(StoreEventNames.DELETING),\n      onAppointmentDeleted: this._createActionByOption(StoreEventNames.DELETED),\n      onAppointmentFormOpening: this._createActionByOption(\"onAppointmentFormOpening\")\n    };\n  }\n\n  _getAppointmentRenderedAction() {\n    return this._createActionByOption(\"onAppointmentRendered\", {\n      excludeValidators: [\"disabled\", \"readOnly\"]\n    });\n  }\n\n  _renderFocusTarget() {\n    return noop();\n  }\n\n  _initMarkup() {\n    super._initMarkup();\n\n    this.fire(\"validateDayHours\");\n\n    this._validateCellDuration();\n\n    this._processCurrentView();\n\n    this._renderHeader();\n\n    this._layoutManager = new AppointmentLayoutManager(this, this._getAppointmentsRenderingStrategy());\n    this._appointments = this._createComponent(\"<div>\", AppointmentCollection, this._appointmentsConfig());\n\n    this._appointments.option(\"itemTemplate\", this._getAppointmentTemplate(\"appointmentTemplate\"));\n\n    this._appointmentTooltip = new (this.option(\"adaptivityEnabled\") ? MobileTooltipStrategy : DesktopTooltipStrategy)(this._getAppointmentTooltipOptions());\n    this._appointmentPopup = new AppointmentPopup(this);\n\n    if (this._isLoaded() || this._isDataSourceLoading()) {\n      this._initMarkupCore(this._loadedResources);\n\n      this._dataSourceChangedHandler(this._dataSource.items());\n\n      this._fireContentReadyAction();\n    } else {\n      this._loadResources().done(function (resources) {\n        this._initMarkupCore(resources);\n\n        this._reloadDataSource();\n      }.bind(this));\n    }\n  }\n\n  _getAppointmentTooltipOptions() {\n    return {\n      createComponent: this._createComponent.bind(this),\n      container: this.$element(),\n      getScrollableContainer: this.getWorkSpaceScrollableContainer.bind(this),\n      addDefaultTemplates: this._templateManager.addDefaultTemplates.bind(this._templateManager),\n      getAppointmentTemplate: this._getAppointmentTemplate.bind(this),\n      showAppointmentPopup: this.showAppointmentPopup.bind(this),\n      checkAndDeleteAppointment: this.checkAndDeleteAppointment.bind(this),\n      isAppointmentInAllDayPanel: this.isAppointmentInAllDayPanel.bind(this),\n      createFormattedDateText: (appointment, targetedAppointment, format) => this.fire(\"getTextAndFormatDate\", appointment, targetedAppointment, format),\n      getAppointmentDisabled: appointment => this.createAppointmentAdapter(appointment).disabled\n    };\n  }\n\n  checkAndDeleteAppointment(appointment, targetedAppointment) {\n    var targetedAdapter = this.createAppointmentAdapter(targetedAppointment);\n\n    this._checkRecurringAppointment(appointment, targetedAppointment, targetedAdapter.startDate, () => {\n      this.deleteAppointment(appointment);\n    }, true);\n  }\n\n  _getExtraAppointmentTooltipOptions() {\n    return {\n      rtlEnabled: this.option(\"rtlEnabled\"),\n      focusStateEnabled: this.option(\"focusStateEnabled\"),\n      editing: this.option(\"editing\"),\n      offset: this.option(\"_appointmentTooltipOffset\")\n    };\n  }\n\n  isAppointmentInAllDayPanel(appointmentData) {\n    var workSpace = this._workSpace;\n    var itTakesAllDay = this.appointmentTakesAllDay(appointmentData);\n    return itTakesAllDay && workSpace.supportAllDayRow() && workSpace.option(\"showAllDayPanel\");\n  }\n\n  _initMarkupCore(resources) {\n    this._readyToRenderAppointments = hasWindow();\n    this._workSpace && this._cleanWorkspace();\n\n    this._renderWorkSpace(resources);\n\n    this._appointments.option({\n      fixedContainer: this._workSpace.getFixedContainer(),\n      allDayContainer: this._workSpace.getAllDayContainer()\n    });\n\n    this._waitAsyncTemplate(() => {\n      var _this$_workSpaceRecal2;\n\n      return null === (_this$_workSpaceRecal2 = this._workSpaceRecalculation) || void 0 === _this$_workSpaceRecal2 ? void 0 : _this$_workSpaceRecal2.resolve();\n    });\n\n    this._filterAppointmentsByDate();\n  }\n\n  _isLoaded() {\n    return this._isResourcesLoaded() && this._isDataSourceLoaded();\n  }\n\n  _isResourcesLoaded() {\n    return isDefined(this._loadedResources);\n  }\n\n  _isDataSourceLoaded() {\n    return this._dataSource && this._dataSource.isLoaded();\n  }\n\n  _render() {\n    this._toggleSmallClass();\n\n    this._toggleAdaptiveClass();\n\n    super._render();\n  }\n\n  _renderHeader() {\n    var $header = $(\"<div>\").appendTo(this.$element());\n    this._header = this._createComponent($header, Header, this._headerConfig());\n  }\n\n  _headerConfig() {\n    var currentViewOptions = this._getCurrentViewOptions();\n\n    var countConfig = this._getViewCountConfig();\n\n    var result = extend({\n      isAdaptive: this.option(\"adaptivityEnabled\"),\n      firstDayOfWeek: this.option(\"firstDayOfWeek\"),\n      currentView: this._currentView,\n      tabIndex: this.option(\"tabIndex\"),\n      focusStateEnabled: this.option(\"focusStateEnabled\"),\n      width: this.option(\"width\"),\n      rtlEnabled: this.option(\"rtlEnabled\"),\n      useDropDownViewSwitcher: this.option(\"useDropDownViewSwitcher\"),\n      _dropDownButtonIcon: this.option(\"_dropDownButtonIcon\"),\n      customizeDateNavigatorText: this.option(\"customizeDateNavigatorText\")\n    }, currentViewOptions);\n    result.observer = this;\n    result.intervalCount = countConfig.intervalCount;\n    result.views = this.option(\"views\");\n    result.min = new Date(this._dateOption(\"min\"));\n    result.max = new Date(this._dateOption(\"max\"));\n    result.currentDate = dateUtils.trimTime(new Date(this._dateOption(\"currentDate\")));\n\n    result.todayDate = () => {\n      var result = this.timeZoneCalculator.createDate(new Date(), {\n        path: \"toGrid\"\n      });\n      return result;\n    };\n\n    return result;\n  }\n\n  _appointmentsConfig() {\n    var that = this;\n    var config = {\n      observer: this,\n      onItemRendered: this._getAppointmentRenderedAction(),\n      onItemClick: this._createActionByOption(\"onAppointmentClick\"),\n      onItemContextMenu: this._createActionByOption(\"onAppointmentContextMenu\"),\n      onAppointmentDblClick: this._createActionByOption(\"onAppointmentDblClick\"),\n      tabIndex: this.option(\"tabIndex\"),\n      focusStateEnabled: this.option(\"focusStateEnabled\"),\n      allowDrag: this._allowDragging(),\n      allowDelete: this._editing.allowUpdating && this._editing.allowDeleting,\n      allowResize: this._allowResizing(),\n      allowAllDayResize: this._allowAllDayResizing(),\n      rtlEnabled: this.option(\"rtlEnabled\"),\n      currentView: this.option(\"currentView\"),\n      onContentReady: function () {\n        that._workSpace && that._workSpace.option(\"allDayExpanded\", that._isAllDayExpanded(that.getFilteredItems()));\n      }\n    };\n    return config;\n  }\n\n  getCollectorOffset() {\n    if (this._workSpace.needApplyCollectorOffset() && !this.option(\"adaptivityEnabled\")) {\n      return this.option(\"_collectorOffset\");\n    } else {\n      return 0;\n    }\n  }\n\n  getAppointmentDurationInMinutes() {\n    return this._getCurrentViewOption(\"cellDuration\");\n  }\n\n  _processCurrentView() {\n    var views = this.option(\"views\");\n    var currentView = this.option(\"currentView\");\n    var that = this;\n    this._currentView = null;\n    each(views, function (_, view) {\n      var isViewIsObject = isObject(view);\n      var viewName = isViewIsObject ? view.name : view;\n      var viewType = view.type;\n\n      if (currentView === viewName || currentView === viewType) {\n        that._currentView = view;\n        return false;\n      }\n    });\n\n    if (!this._currentView) {\n      var isCurrentViewValid = !!VIEWS_CONFIG[currentView];\n\n      if (isCurrentViewValid) {\n        this._currentView = currentView;\n      } else {\n        this._currentView = views[0];\n      }\n    }\n  }\n\n  _validateCellDuration() {\n    var endDayHour = this._getCurrentViewOption(\"endDayHour\");\n\n    var startDayHour = this._getCurrentViewOption(\"startDayHour\");\n\n    var cellDuration = this._getCurrentViewOption(\"cellDuration\");\n\n    if ((endDayHour - startDayHour) * MINUTES_IN_HOUR % cellDuration !== 0) {\n      errors.log(\"W1015\");\n    }\n  }\n\n  _getCurrentViewType() {\n    return this._currentView.type || this._currentView;\n  }\n\n  _getAppointmentsRenderingStrategy() {\n    return VIEWS_CONFIG[this._getCurrentViewType()].renderingStrategy;\n  }\n\n  _renderWorkSpace(groups) {\n    this._readyToRenderAppointments && this._toggleSmallClass();\n    var $workSpace = $(\"<div>\").appendTo(this.$element());\n\n    var countConfig = this._getViewCountConfig();\n\n    var workSpaceComponent = VIEWS_CONFIG[this._getCurrentViewType()].workSpace;\n\n    var workSpaceConfig = this._workSpaceConfig(groups, countConfig);\n\n    this._workSpace = this._createComponent($workSpace, workSpaceComponent, workSpaceConfig);\n    this._allowDragging() && this._workSpace.initDragBehavior(this, this._all);\n\n    this._workSpace._attachTablesEvents();\n\n    this._workSpace.getWorkArea().append(this._appointments.$element());\n\n    this._recalculateWorkspace();\n\n    countConfig.startDate && this._header && this._header.option(\"currentDate\", this._workSpace._getHeaderDate());\n\n    this._appointments.option(\"_collectorOffset\", this.getCollectorOffset());\n  }\n\n  _getViewCountConfig() {\n    var currentView = this.option(\"currentView\");\n\n    var view = this._getViewByName(currentView);\n\n    var viewCount = view && view.intervalCount || 1;\n    var startDate = view && view.startDate || null;\n    return {\n      intervalCount: viewCount,\n      startDate: startDate\n    };\n  }\n\n  _getViewByName(name) {\n    var views = this.option(\"views\");\n\n    for (var i = 0; i < views.length; i++) {\n      if (views[i].name === name || views[i].type === name || views[i] === name) {\n        return views[i];\n      }\n    }\n  }\n\n  _recalculateWorkspace() {\n    this._workSpaceRecalculation = new Deferred();\n\n    this._waitAsyncTemplate(() => {\n      triggerResizeEvent(this._workSpace.$element());\n\n      this._workSpace._refreshDateTimeIndication();\n    });\n  }\n\n  _workSpaceConfig(groups, countConfig) {\n    var _currentViewOptions$s;\n\n    var currentViewOptions = this._getCurrentViewOptions();\n\n    var scrolling = this.option(\"scrolling\");\n    var isVirtualScrolling = \"virtual\" === scrolling.mode || \"virtual\" === (null === (_currentViewOptions$s = currentViewOptions.scrolling) || void 0 === _currentViewOptions$s ? void 0 : _currentViewOptions$s.mode);\n    var horizontalVirtualScrollingAllowed = isVirtualScrolling && (!isDefined(scrolling.orientation) || [\"horizontal\", \"both\"].filter(item => {\n      var _currentViewOptions$s2;\n\n      return scrolling.orientation === item || (null === (_currentViewOptions$s2 = currentViewOptions.scrolling) || void 0 === _currentViewOptions$s2 ? void 0 : _currentViewOptions$s2.orientation) === item;\n    }).length > 0);\n    var crossScrollingEnabled = this.option(\"crossScrollingEnabled\") || horizontalVirtualScrollingAllowed;\n    var result = extend({\n      noDataText: this.option(\"noDataText\"),\n      firstDayOfWeek: this.option(\"firstDayOfWeek\"),\n      startDayHour: this.option(\"startDayHour\"),\n      endDayHour: this.option(\"endDayHour\"),\n      tabIndex: this.option(\"tabIndex\"),\n      accessKey: this.option(\"accessKey\"),\n      focusStateEnabled: this.option(\"focusStateEnabled\"),\n      cellDuration: this.option(\"cellDuration\"),\n      showAllDayPanel: this.option(\"showAllDayPanel\"),\n      showCurrentTimeIndicator: this.option(\"showCurrentTimeIndicator\"),\n      indicatorTime: this.option(\"indicatorTime\"),\n      indicatorUpdateInterval: this.option(\"indicatorUpdateInterval\"),\n      shadeUntilCurrentTime: this.option(\"shadeUntilCurrentTime\"),\n      allDayExpanded: this._appointments.option(\"items\"),\n      crossScrollingEnabled: crossScrollingEnabled,\n      dataCellTemplate: this.option(\"dataCellTemplate\"),\n      timeCellTemplate: this.option(\"timeCellTemplate\"),\n      resourceCellTemplate: this.option(\"resourceCellTemplate\"),\n      dateCellTemplate: this.option(\"dateCellTemplate\"),\n      allowMultipleCellSelection: this.option(\"allowMultipleCellSelection\"),\n      selectedCellData: this.option(\"selectedCellData\"),\n      onSelectionChanged: args => {\n        this.option(\"selectedCellData\", args.selectedCellData);\n      },\n      groupByDate: this._getCurrentViewOption(\"groupByDate\"),\n      scrolling: scrolling,\n      draggingMode: this.option(\"_draggingMode\"),\n      renovateRender: this._isRenovatedRender(isVirtualScrolling)\n    }, currentViewOptions);\n    result.observer = this;\n    result.intervalCount = countConfig.intervalCount;\n    result.startDate = countConfig.startDate;\n    result.groups = groups;\n    result.onCellClick = this._createActionByOption(\"onCellClick\");\n    result.onCellContextMenu = this._createActionByOption(\"onCellContextMenu\");\n    result.min = new Date(this._dateOption(\"min\"));\n    result.max = new Date(this._dateOption(\"max\"));\n    result.currentDate = dateUtils.trimTime(new Date(this._dateOption(\"currentDate\")));\n    result.hoursInterval = result.cellDuration / 60;\n    result.allDayExpanded = this._isAllDayExpanded(this.getFilteredItems());\n    result.dataCellTemplate = result.dataCellTemplate ? this._getTemplate(result.dataCellTemplate) : null;\n    result.timeCellTemplate = result.timeCellTemplate ? this._getTemplate(result.timeCellTemplate) : null;\n    result.resourceCellTemplate = result.resourceCellTemplate ? this._getTemplate(result.resourceCellTemplate) : null;\n    result.dateCellTemplate = result.dateCellTemplate ? this._getTemplate(result.dateCellTemplate) : null;\n    return result;\n  }\n\n  _isRenovatedRender(isVirtualScrolling) {\n    return this.option(\"renovateRender\") && hasWindow() || isVirtualScrolling;\n  }\n\n  _waitAsyncTemplate(callback) {\n    if (this._options.silent(\"templatesRenderAsynchronously\")) {\n      var timer = setTimeout(() => {\n        callback();\n        clearTimeout(timer);\n      });\n\n      this._asyncTemplatesTimers.push(timer);\n    } else {\n      callback();\n    }\n  }\n\n  _getCurrentViewOptions() {\n    return this._currentView;\n  }\n\n  _getCurrentViewOption(optionName) {\n    var currentViewOptions = this._getCurrentViewOptions();\n\n    if (currentViewOptions && void 0 !== currentViewOptions[optionName]) {\n      return currentViewOptions[optionName];\n    }\n\n    return this.option(optionName);\n  }\n\n  _getAppointmentTemplate(optionName) {\n    var currentViewOptions = this._getCurrentViewOptions();\n\n    if (currentViewOptions && currentViewOptions[optionName]) {\n      return this._getTemplate(currentViewOptions[optionName]);\n    }\n\n    return this._getTemplateByOption(optionName);\n  }\n\n  _updateOption(viewName, optionName, value) {\n    var currentViewOptions = this._getCurrentViewOptions();\n\n    if (!currentViewOptions || !isDefined(currentViewOptions[optionName])) {\n      this[\"_\" + viewName].option(optionName, value);\n    }\n  }\n\n  _refreshWorkSpace(groups) {\n    this._cleanWorkspace();\n\n    delete this._workSpace;\n\n    this._renderWorkSpace(groups);\n\n    if (this._readyToRenderAppointments) {\n      this._appointments.option({\n        fixedContainer: this._workSpace.getFixedContainer(),\n        allDayContainer: this._workSpace.getAllDayContainer()\n      });\n\n      this._waitAsyncTemplate(() => this._workSpaceRecalculation.resolve());\n    }\n  }\n\n  _cleanWorkspace() {\n    this._appointments.$element().detach();\n\n    this._workSpace._dispose();\n\n    this._workSpace.$element().remove();\n\n    this.option(\"selectedCellData\", []);\n  }\n\n  getWorkSpaceScrollable() {\n    return this._workSpace.getScrollable();\n  }\n\n  getWorkSpaceScrollableScrollTop(allDay) {\n    return this._workSpace.getGroupedScrollableScrollTop(allDay);\n  }\n\n  getWorkSpaceScrollableScrollLeft() {\n    return this._workSpace.getScrollableScrollLeft();\n  }\n\n  getWorkSpaceScrollableContainer() {\n    return this._workSpace.getScrollableContainer();\n  }\n\n  getWorkSpaceAllDayHeight() {\n    return this._workSpace.getAllDayHeight();\n  }\n\n  getWorkSpaceAllDayOffset() {\n    return this._workSpace.getAllDayOffset();\n  }\n\n  getWorkSpaceHeaderPanelHeight() {\n    return this._workSpace.getHeaderPanelHeight();\n  }\n\n  getWorkSpaceDateTableOffset() {\n    return !this.option(\"crossScrollingEnabled\") || this.option(\"rtlEnabled\") ? this._workSpace.getWorkSpaceLeftOffset() : 0;\n  }\n\n  getWorkSpace() {\n    return this._workSpace;\n  }\n\n  getAppointmentModel() {\n    return this._appointmentModel;\n  }\n\n  getHeader() {\n    return this._header;\n  }\n\n  getMaxAppointmentsPerCell() {\n    return this._getCurrentViewOption(\"maxAppointmentsPerCell\");\n  }\n\n  _cleanPopup() {\n    this._appointmentPopup && this._appointmentPopup.dispose();\n  }\n\n  _checkRecurringAppointment(targetAppointment, singleAppointment, exceptionDate, callback, isDeleted, isPopupEditing, dragEvent) {\n    delete this._updatedRecAppointment;\n    var recurrenceRule = this.fire(\"getField\", \"recurrenceRule\", targetAppointment);\n\n    if (!getRecurrenceProcessor().evalRecurrenceRule(recurrenceRule).isValid || !this._editing.allowUpdating) {\n      callback();\n      return;\n    }\n\n    var editMode = this.option(\"recurrenceEditMode\");\n\n    switch (editMode) {\n      case \"series\":\n        callback();\n        break;\n\n      case \"occurrence\":\n        this._excludeAppointmentFromSeries(targetAppointment, singleAppointment, exceptionDate, isDeleted, isPopupEditing, dragEvent);\n\n        break;\n\n      default:\n        if (dragEvent) {\n          dragEvent.cancel = new Deferred();\n        }\n\n        this._showRecurrenceChangeConfirm(isDeleted).done(editingMode => {\n          editingMode === RECURRENCE_EDITING_MODE.SERIES && callback();\n          editingMode === RECURRENCE_EDITING_MODE.OCCURENCE && this._excludeAppointmentFromSeries(targetAppointment, singleAppointment, exceptionDate, isDeleted, isPopupEditing, dragEvent);\n        }).fail(() => this._appointments.moveAppointmentBack(dragEvent));\n\n    }\n  }\n\n  _excludeAppointmentFromSeries(rawAppointment, newRawAppointment, exceptionDate, isDeleted, isPopupEditing, dragEvent) {\n    var appointment = this.createAppointmentAdapter(_extends({}, rawAppointment));\n    var newAppointment = this.createAppointmentAdapter(newRawAppointment);\n    newAppointment.recurrenceRule = \"\";\n    newAppointment.recurrenceException = \"\";\n    var canCreateNewAppointment = !isDeleted && !isPopupEditing;\n\n    if (canCreateNewAppointment) {\n      var keyPropertyName = this._appointmentModel.keyName;\n      delete newRawAppointment[keyPropertyName];\n      this.addAppointment(newRawAppointment);\n    }\n\n    appointment.recurrenceException = this._createRecurrenceException(appointment, exceptionDate);\n\n    if (isPopupEditing) {\n      this._updatedRecAppointment = appointment.source();\n\n      this._appointmentPopup.show(newRawAppointment, true);\n\n      this._editAppointmentData = rawAppointment;\n    } else {\n      this._updateAppointment(rawAppointment, appointment.source(), () => {\n        this._appointments.moveAppointmentBack(dragEvent);\n      }, dragEvent);\n    }\n  }\n\n  _createRecurrenceException(appointment, exceptionDate) {\n    var result = [];\n\n    if (appointment.recurrenceException) {\n      result.push(appointment.recurrenceException);\n    }\n\n    result.push(this._getSerializedDate(exceptionDate, appointment.startDate, appointment.allDay));\n    return result.join();\n  }\n\n  _getSerializedDate(date, startDate, isAllDay) {\n    isAllDay && date.setHours(startDate.getHours(), startDate.getMinutes(), startDate.getSeconds(), startDate.getMilliseconds());\n    return dateSerialization.serializeDate(date, UTC_FULL_DATE_FORMAT);\n  }\n\n  _showRecurrenceChangeConfirm(isDeleted) {\n    var message = messageLocalization.format(isDeleted ? \"dxScheduler-confirmRecurrenceDeleteMessage\" : \"dxScheduler-confirmRecurrenceEditMessage\");\n    var seriesText = messageLocalization.format(isDeleted ? \"dxScheduler-confirmRecurrenceDeleteSeries\" : \"dxScheduler-confirmRecurrenceEditSeries\");\n    var occurrenceText = messageLocalization.format(isDeleted ? \"dxScheduler-confirmRecurrenceDeleteOccurrence\" : \"dxScheduler-confirmRecurrenceEditOccurrence\");\n    this._recurrenceDialog = customDialog({\n      messageHtml: message,\n      showCloseButton: true,\n      showTitle: true,\n      buttons: [{\n        text: seriesText,\n        onClick: function () {\n          return RECURRENCE_EDITING_MODE.SERIES;\n        }\n      }, {\n        text: occurrenceText,\n        onClick: function () {\n          return RECURRENCE_EDITING_MODE.OCCURENCE;\n        }\n      }],\n      popupOptions: {\n        onHidden: e => {\n          e.component.$element().remove();\n        }\n      }\n    });\n    return this._recurrenceDialog.show();\n  }\n\n  _getUpdatedData(rawAppointment) {\n    var getConvertedFromGrid = date => date ? this.timeZoneCalculator.createDate(date, {\n      path: \"fromGrid\"\n    }) : void 0;\n\n    var isValidDate = date => !isNaN(new Date(date).getTime());\n\n    var targetCell = this.getTargetCellData();\n    var appointment = this.createAppointmentAdapter(rawAppointment);\n    var cellStartDate = getConvertedFromGrid(targetCell.startDate);\n    var cellEndDate = getConvertedFromGrid(targetCell.endDate);\n    var appointmentStartDate = new Date(appointment.startDate);\n    var appointmentEndDate = new Date(appointment.endDate);\n    var resultedStartDate = cellStartDate || appointmentStartDate;\n\n    if (!isValidDate(appointmentStartDate)) {\n      appointmentStartDate = resultedStartDate;\n    }\n\n    if (!isValidDate(appointmentEndDate)) {\n      appointmentEndDate = cellEndDate;\n    }\n\n    var duration = appointmentEndDate.getTime() - appointmentStartDate.getTime();\n    var isKeepAppointmentHours = this._workSpace.keepOriginalHours() && isValidDate(appointment.startDate) && isValidDate(cellStartDate);\n\n    if (isKeepAppointmentHours) {\n      var {\n        trimTime: trimTime\n      } = dateUtils;\n      var startDate = this.timeZoneCalculator.createDate(appointment.startDate, {\n        path: \"toGrid\"\n      });\n      var timeInMs = startDate.getTime() - trimTime(startDate).getTime();\n      resultedStartDate = new Date(trimTime(targetCell.startDate).getTime() + timeInMs);\n      resultedStartDate = this.timeZoneCalculator.createDate(resultedStartDate, {\n        path: \"fromGrid\"\n      });\n    }\n\n    var result = this.createAppointmentAdapter({});\n\n    if (void 0 !== targetCell.allDay) {\n      result.allDay = targetCell.allDay;\n    }\n\n    result.startDate = resultedStartDate;\n    var resultedEndDate = new Date(resultedStartDate.getTime() + duration);\n\n    if (this.appointmentTakesAllDay(rawAppointment) && !result.allDay && this._workSpace.supportAllDayRow()) {\n      resultedEndDate = this._workSpace.calculateEndDate(resultedStartDate);\n    }\n\n    if (appointment.allDay && !this._workSpace.supportAllDayRow() && !this._workSpace.keepOriginalHours()) {\n      var dateCopy = new Date(resultedStartDate);\n      dateCopy.setHours(0);\n      resultedEndDate = new Date(dateCopy.getTime() + duration);\n\n      if (0 !== resultedEndDate.getHours()) {\n        resultedEndDate.setHours(this._getCurrentViewOption(\"endDayHour\"));\n      }\n    }\n\n    var timeZoneOffset = timeZoneUtils.getTimezoneOffsetChangeInMs(appointmentStartDate, appointmentEndDate, resultedStartDate, resultedEndDate);\n    result.endDate = new Date(resultedEndDate.getTime() - timeZoneOffset);\n    var rawResult = result.source();\n\n    this._resourcesManager.setResourcesToItem(rawResult, targetCell.groups);\n\n    return rawResult;\n  }\n\n  getTargetedAppointment(appointment, element) {\n    var settings = utils.dataAccessors.getAppointmentSettings(element);\n    var info = utils.dataAccessors.getAppointmentInfo(element);\n    var appointmentIndex = $(element).data(this._appointments._itemIndexKey());\n    var adapter = this.createAppointmentAdapter(appointment);\n    var targetedAdapter = adapter.clone();\n\n    if (this._isAgenda() && adapter.isRecurrent) {\n      var getStartDate = this.getRenderingStrategyInstance().getAppointmentDataCalculator();\n      var newStartDate = getStartDate($(element), adapter.startDate).startDate;\n      targetedAdapter.startDate = newStartDate;\n      targetedAdapter.endDate = new Date(newStartDate.getTime() + adapter.duration);\n    } else if (settings) {\n      targetedAdapter.startDate = info ? info.sourceAppointment.startDate : adapter.startDate;\n      targetedAdapter.endDate = info ? info.sourceAppointment.endDate : adapter.endDate;\n    }\n\n    var rawTargetedAppointment = targetedAdapter.source();\n\n    if (element) {\n      this.setTargetedAppointmentResources(rawTargetedAppointment, element, appointmentIndex);\n    }\n\n    return rawTargetedAppointment;\n  }\n\n  subscribe(subject, action) {\n    this._subscribes[subject] = subscribes[subject] = action;\n  }\n\n  fire(subject) {\n    var callback = this._subscribes[subject];\n    var args = Array.prototype.slice.call(arguments);\n\n    if (!isFunction(callback)) {\n      throw errors.Error(\"E1031\", subject);\n    }\n\n    return callback.apply(this, args.slice(1));\n  }\n\n  getTargetCellData() {\n    return this._workSpace.getDataByDroppableCell();\n  }\n\n  _updateAppointment(target, rawAppointment, onUpdatePrevented, dragEvent) {\n    var updatingOptions = {\n      newData: rawAppointment,\n      oldData: extend({}, target),\n      cancel: false\n    };\n\n    var performFailAction = function (err) {\n      if (onUpdatePrevented) {\n        onUpdatePrevented.call(this);\n      }\n\n      if (err && \"Error\" === err.name) {\n        throw err;\n      }\n    }.bind(this);\n\n    this._actions[StoreEventNames.UPDATING](updatingOptions);\n\n    if (dragEvent && !isDeferred(dragEvent.cancel)) {\n      dragEvent.cancel = new Deferred();\n    }\n\n    return this._processActionResult(updatingOptions, function (canceled) {\n      var deferred = new Deferred();\n\n      if (!canceled) {\n        this._expandAllDayPanel(rawAppointment);\n\n        try {\n          deferred = this._appointmentModel.update(target, rawAppointment).done(() => {\n            dragEvent && dragEvent.cancel.resolve(false);\n          }).always(storeAppointment => this._onDataPromiseCompleted(StoreEventNames.UPDATED, storeAppointment)).fail(() => performFailAction());\n        } catch (err) {\n          performFailAction(err);\n          deferred.resolve();\n        }\n      } else {\n        performFailAction();\n        deferred.resolve();\n      }\n\n      return deferred.promise();\n    });\n  }\n\n  _processActionResult(actionOptions, callback) {\n    var deferred = new Deferred();\n\n    var resolveCallback = callbackResult => {\n      when(fromPromise(callbackResult)).always(deferred.resolve);\n    };\n\n    if (isPromise(actionOptions.cancel)) {\n      when(fromPromise(actionOptions.cancel)).always(cancel => {\n        if (!isDefined(cancel)) {\n          cancel = \"rejected\" === actionOptions.cancel.state();\n        }\n\n        resolveCallback(callback.call(this, cancel));\n      });\n    } else {\n      resolveCallback(callback.call(this, actionOptions.cancel));\n    }\n\n    return deferred.promise();\n  }\n\n  _expandAllDayPanel(appointment) {\n    if (!this._isAllDayExpanded(this.getFilteredItems()) && this.appointmentTakesAllDay(appointment)) {\n      this._workSpace.option(\"allDayExpanded\", true);\n    }\n  }\n\n  _onDataPromiseCompleted(handlerName, storeAppointment, appointment) {\n    var args = {\n      appointmentData: appointment || storeAppointment\n    };\n\n    if (storeAppointment instanceof Error) {\n      args.error = storeAppointment;\n    } else {\n      this._appointmentPopup.isVisible() && this._appointmentPopup.hide();\n    }\n\n    this._actions[handlerName](args);\n\n    this._fireContentReadyAction();\n  }\n\n  getAppointmentPopup() {\n    return this._appointmentPopup.getPopup();\n  }\n\n  getUpdatedAppointment() {\n    return this._appointmentModel.getUpdatedAppointment();\n  }\n\n  getUpdatedAppointmentKeys() {\n    return this._appointmentModel.getUpdatedAppointmentKeys();\n  }\n\n  getAppointmentsInstance() {\n    return this._appointments;\n  }\n\n  getResourceManager() {\n    return this._resourcesManager;\n  }\n\n  getLayoutManager() {\n    return this._layoutManager;\n  }\n\n  getRenderingStrategyInstance() {\n    return this._layoutManager.getRenderingStrategyInstance();\n  }\n\n  getFilteredItems() {\n    return this._filteredItems;\n  }\n\n  getActions() {\n    return this._actions;\n  }\n\n  appointmentTakesAllDay(appointment) {\n    return this._appointmentModel.appointmentTakesAllDay(appointment, this._getCurrentViewOption(\"startDayHour\"), this._getCurrentViewOption(\"endDayHour\"));\n  }\n\n  _getRecurrenceException(rawAppointment) {\n    var appointment = this.createAppointmentAdapter(rawAppointment);\n    var recurrenceException = appointment.recurrenceException;\n\n    if (recurrenceException) {\n      var exceptions = recurrenceException.split(\",\");\n\n      for (var i = 0; i < exceptions.length; i++) {\n        exceptions[i] = this._convertRecurrenceException(exceptions[i], appointment.startDate);\n      }\n\n      return exceptions.join();\n    }\n\n    return recurrenceException;\n  }\n\n  _convertRecurrenceException(exceptionString, startDate) {\n    exceptionString = exceptionString.replace(/\\s/g, \"\");\n\n    var getConvertedToTimeZone = date => this.timeZoneCalculator.createDate(date, {\n      path: \"toGrid\"\n    });\n\n    var exceptionDate = dateSerialization.deserializeDate(exceptionString);\n    var convertedStartDate = getConvertedToTimeZone(startDate);\n    var convertedExceptionDate = getConvertedToTimeZone(exceptionDate);\n    convertedExceptionDate = timeZoneUtils.correctRecurrenceExceptionByTimezone(convertedExceptionDate, convertedStartDate, this.option(\"timeZone\"));\n    exceptionString = dateSerialization.serializeDate(convertedExceptionDate, FULL_DATE_FORMAT);\n    return exceptionString;\n  }\n\n  dayHasAppointment(day, rawAppointment, trimTime) {\n    var getConvertedToTimeZone = date => this.timeZoneCalculator.createDate(date, {\n      path: \"toGrid\"\n    });\n\n    var appointment = this.createAppointmentAdapter(rawAppointment);\n    var startDate = new Date(appointment.startDate);\n    var endDate = new Date(appointment.endDate);\n    startDate = getConvertedToTimeZone(startDate);\n    endDate = getConvertedToTimeZone(endDate);\n\n    if (day.getTime() === endDate.getTime()) {\n      return startDate.getTime() === endDate.getTime();\n    }\n\n    if (trimTime) {\n      day = dateUtils.trimTime(day);\n      startDate = dateUtils.trimTime(startDate);\n      endDate = dateUtils.trimTime(endDate);\n    }\n\n    var dayTimeStamp = day.getTime();\n    var startDateTimeStamp = startDate.getTime();\n    var endDateTimeStamp = endDate.getTime();\n    return inArray(dayTimeStamp, [startDateTimeStamp, endDateTimeStamp]) > -1 || startDateTimeStamp < dayTimeStamp && endDateTimeStamp > dayTimeStamp;\n  }\n\n  setTargetedAppointmentResources(rawAppointment, element, appointmentIndex) {\n    var groups = this._getCurrentViewOption(\"groups\");\n\n    if (null !== groups && void 0 !== groups && groups.length) {\n      var resourcesSetter = this._resourcesManager._dataAccessors.setter;\n      var workSpace = this._workSpace;\n      var getGroups;\n      var setResourceCallback;\n\n      if (this._isAgenda()) {\n        getGroups = function () {\n          var apptSettings = this.getLayoutManager()._positionMap[appointmentIndex];\n\n          return workSpace._getCellGroups(apptSettings[0].groupIndex);\n        };\n\n        setResourceCallback = function (_, group) {\n          resourcesSetter[group.name](rawAppointment, group.id);\n        };\n      } else {\n        getGroups = function () {\n          var setting = utils.dataAccessors.getAppointmentSettings(element) || {};\n          return workSpace.getCellDataByCoordinates({\n            left: setting.left,\n            top: setting.top\n          }).groups;\n        };\n\n        setResourceCallback = function (field, value) {\n          resourcesSetter[field](rawAppointment, value);\n        };\n      }\n\n      each(getGroups.call(this), setResourceCallback);\n    }\n  }\n\n  getStartViewDate() {\n    return this._workSpace.getStartViewDate();\n  }\n\n  getEndViewDate() {\n    return this._workSpace.getEndViewDate();\n  }\n\n  showAppointmentPopup(rawAppointment, createNewAppointment, rawTargetedAppointment) {\n    var appointment = this.createAppointmentAdapter(rawTargetedAppointment || rawAppointment);\n    var newTargetedAppointment = extend({}, rawAppointment, rawTargetedAppointment);\n\n    this._checkRecurringAppointment(rawAppointment, newTargetedAppointment, appointment.startDate, () => {\n      if (createNewAppointment || isEmptyObject(rawAppointment)) {\n        delete this._editAppointmentData;\n        this._editing.allowAdding && this._appointmentPopup.show(rawAppointment, true);\n      } else {\n        this._editAppointmentData = rawAppointment;\n\n        this._appointmentPopup.show(rawAppointment, this._editing.allowUpdating);\n      }\n    }, false, true);\n  }\n\n  hideAppointmentPopup(saveChanges) {\n    if (this._appointmentPopup && this._appointmentPopup.isVisible()) {\n      saveChanges && this._appointmentPopup.saveChanges();\n\n      this._appointmentPopup.hide();\n    }\n  }\n\n  showAppointmentTooltip(appointment, element, targetedAppointment) {\n    if (appointment) {\n      var settings = utils.dataAccessors.getAppointmentSettings(element);\n      var deferredColor = this.fire(\"getAppointmentColor\", {\n        itemData: targetedAppointment || appointment,\n        groupIndex: null === settings || void 0 === settings ? void 0 : settings.groupIndex\n      });\n      var info = new AppointmentTooltipInfo(appointment, targetedAppointment, deferredColor);\n      this.showAppointmentTooltipCore(element, [info]);\n    }\n  }\n\n  showAppointmentTooltipCore(target, data, options) {\n    if (this._appointmentTooltip.isAlreadyShown(target)) {\n      this.hideAppointmentTooltip();\n    } else {\n      this._appointmentTooltip.show(target, data, extend(this._getExtraAppointmentTooltipOptions(), options));\n    }\n  }\n\n  hideAppointmentTooltip() {\n    this._appointmentTooltip && this._appointmentTooltip.hide();\n  }\n\n  scrollToTime(hours, minutes, date) {\n    this._workSpace.scrollToTime(hours, minutes, date);\n  }\n\n  scrollTo(date, groups, allDay) {\n    this._workSpace.scrollTo(date, groups, allDay);\n  }\n\n  _isHorizontalVirtualScrolling() {\n    var scrolling = this.option(\"scrolling\");\n    var {\n      orientation: orientation,\n      mode: mode\n    } = scrolling;\n    var isVirtualScrolling = \"virtual\" === mode;\n    return isVirtualScrolling && (\"horizontal\" === orientation || \"both\" === orientation);\n  }\n\n  addAppointment(rawAppointment) {\n    var appointment = this.createAppointmentAdapter(rawAppointment);\n    appointment.text = appointment.text || \"\";\n    var serializedAppointment = appointment.source(true);\n    var addingOptions = {\n      appointmentData: serializedAppointment,\n      cancel: false\n    };\n\n    this._actions[StoreEventNames.ADDING](addingOptions);\n\n    return this._processActionResult(addingOptions, canceled => {\n      if (canceled) {\n        return new Deferred().resolve();\n      }\n\n      this._expandAllDayPanel(serializedAppointment);\n\n      return this._appointmentModel.add(serializedAppointment).always(storeAppointment => this._onDataPromiseCompleted(StoreEventNames.ADDED, storeAppointment));\n    });\n  }\n\n  updateAppointment(target, appointment) {\n    return this._updateAppointment(target, appointment);\n  }\n\n  deleteAppointment(rawAppointment) {\n    var deletingOptions = {\n      appointmentData: rawAppointment,\n      cancel: false\n    };\n\n    this._actions[StoreEventNames.DELETING](deletingOptions);\n\n    this._processActionResult(deletingOptions, function (canceled) {\n      if (!canceled) {\n        this._appointmentModel.remove(rawAppointment).always(storeAppointment => this._onDataPromiseCompleted(StoreEventNames.DELETED, storeAppointment, rawAppointment));\n      }\n    });\n  }\n\n  focus() {\n    if (this._editAppointmentData) {\n      this._appointments.focus();\n    } else {\n      this._workSpace.focus();\n    }\n  }\n\n  getFirstDayOfWeek() {\n    return isDefined(this.option(\"firstDayOfWeek\")) ? this.option(\"firstDayOfWeek\") : dateLocalization.firstDayOfWeekIndex();\n  }\n\n  createAppointmentAdapter(rawAppointment) {\n    var options = {\n      getField: (rawAppointment, property) => this.fire(\"getField\", property, rawAppointment),\n      setField: (rawAppointment, property, value) => this.fire(\"setField\", property, rawAppointment, value),\n      getTimeZoneCalculator: () => this.timeZoneCalculator\n    };\n    return new AppointmentAdapter(rawAppointment, options);\n  }\n\n}\n\nScheduler.include(DataHelperMixin);\nregisterComponent(\"dxScheduler\", Scheduler);\nexport default Scheduler;","map":{"version":3,"sources":["/home/yuriwendt/desafio-front-end/node_modules/devextreme/esm/ui/scheduler/ui.scheduler.js"],"names":["_extends","registerComponent","config","devices","$","BindableTemplate","EmptyTemplate","inArray","browser","Callbacks","noop","compileGetter","compileSetter","getBoundingRect","dateUtils","dateSerialization","Deferred","when","fromPromise","extend","each","touch","isDefined","isString","isObject","isFunction","isEmptyObject","isDeferred","isPromise","hasWindow","DataHelperMixin","triggerResizeEvent","dateLocalization","messageLocalization","custom","customDialog","isMaterial","errors","Widget","AppointmentPopup","CompactAppointmentsHelper","DesktopTooltipStrategy","MobileTooltipStrategy","hide","hideLoading","show","showLoading","AppointmentCollection","AppointmentLayoutManager","SchedulerAppointmentModel","Header","ResourceManager","subscribes","getRecurrenceProcessor","timeZoneUtils","SchedulerAgenda","SchedulerTimelineDay","SchedulerTimelineMonth","SchedulerTimelineWeek","SchedulerTimelineWorkWeek","SchedulerWorkSpaceDay","SchedulerWorkSpaceMonth","SchedulerWorkSpaceWeek","SchedulerWorkSpaceWorkWeek","AppointmentAdapter","TimeZoneCalculator","AppointmentTooltipInfo","AppointmentSettingsGenerator","AppointmentFilter","utils","MINUTES_IN_HOUR","WIDGET_CLASS","WIDGET_SMALL_CLASS","concat","WIDGET_ADAPTIVE_CLASS","WIDGET_WIN_NO_TOUCH_CLASS","WIDGET_READONLY_CLASS","WIDGET_SMALL_WIDTH","FULL_DATE_FORMAT","UTC_FULL_DATE_FORMAT","VIEWS_CONFIG","day","workSpace","renderingStrategy","week","workWeek","month","timelineDay","timelineWeek","timelineWorkWeek","timelineMonth","agenda","StoreEventNames","ADDING","ADDED","DELETING","DELETED","UPDATING","UPDATED","RECURRENCE_EDITING_MODE","SERIES","OCCURENCE","CANCEL","Scheduler","appointmentFilter","_getDefaultOptions","defaultOptions","views","currentView","currentDate","trimTime","Date","min","max","dateSerializationFormat","firstDayOfWeek","groups","resources","dataSource","customizeDateNavigatorText","appointmentTemplate","dropDownAppointmentTemplate","appointmentCollectorTemplate","dataCellTemplate","timeCellTemplate","resourceCellTemplate","dateCellTemplate","startDayHour","endDayHour","editing","allowAdding","allowDeleting","allowDragging","allowResizing","allowUpdating","allowTimeZoneEditing","allowEditingTimeZones","showAllDayPanel","showCurrentTimeIndicator","shadeUntilCurrentTime","indicatorUpdateInterval","indicatorTime","recurrenceEditMode","cellDuration","maxAppointmentsPerCell","selectedCellData","groupByDate","onAppointmentRendered","onAppointmentClick","onAppointmentDblClick","onAppointmentContextMenu","onCellClick","onCellContextMenu","onAppointmentAdding","onAppointmentAdded","onAppointmentUpdating","onAppointmentUpdated","onAppointmentDeleting","onAppointmentDeleted","onAppointmentFormOpening","appointmentTooltipTemplate","appointmentPopupTemplate","crossScrollingEnabled","useDropDownViewSwitcher","startDateExpr","endDateExpr","textExpr","descriptionExpr","allDayExpr","recurrenceRuleExpr","recurrenceExceptionExpr","disabledExpr","remoteFiltering","timeZone","startDateTimeZoneExpr","endDateTimeZoneExpr","noDataText","format","adaptivityEnabled","allowMultipleCellSelection","scrolling","mode","renovateRender","_draggingMode","_appointmentTooltipOffset","x","y","_appointmentTooltipButtonsPosition","_appointmentTooltipOpenButtonText","_dropDownButtonIcon","_appointmentCountPerCell","_collectorOffset","_appointmentOffset","integrationOptions","useDeferUpdateForTemplates","_defaultOptionsRules","device","real","deviceType","isSimulator","options","focusStateEnabled","current","generic","data","index","element","text","split","forEach","span","addClass","append","_setDeprecatedOptions","_deprecatedOptions","since","message","alias","_getAppointmentSettingsGenerator","_postponeDataSourceLoading","promise","postponedOperations","add","_reloadDataSource","bind","_postponeResourceLoading","whenLoaded","_loadResources","resolveCallbacks","done","resolve","_optionChanged","args","value","name","_updateOption","_dateOption","option","_workSpace","_header","_getViewStartByOptions","_appointments","_filterAppointmentsByDate","_initDataSource","_appointmentModel","setDataSource","_dataSource","_processCurrentView","_getCurrentViewOptions","repaint","fire","getLayoutManager","initRenderingStrategy","_getAppointmentsRenderingStrategy","_validateCellDuration","items","allowDrag","_allowDragging","allowResize","_allowResizing","itemTemplate","_getAppointmentTemplate","_refreshWorkSpace","_updateHeader","_resourcesManager","setResources","setDataAccessors","_combineDataAccessors","_actions","_createActionByOption","_getAppointmentRenderedAction","_readyToRenderAppointments","_getAppointmentsToRepaint","_dimensionChanged","_initEditing","_editing","_bringEditingModeToAppointments","hideAppointmentTooltip","_cleanPopup","_updateExpression","_initAppointmentTemplate","_toggleAdaptiveClass","_isHorizontalVirtualScrolling","fullName","viewCountConfig","_getViewCountConfig","intervalCount","_getCurrentViewOption","_currentView","optionName","optionValue","deserializeDate","_getSerializationFormat","getDateSerializationFormat","editingConfig","allowDelete","_isAgenda","allowAllDayResize","_supportAllDayResizing","_allowAllDayResizing","_getCurrentViewType","_isAllDayExpanded","hasAllDayAppointments","_getTimezoneOffsetByOption","date","calculateTimezoneByValue","dateRange","getDateRange","startDate","timeZoneCalculator","createDate","path","endDate","filterByDate","result","loadResources","_loadedResources","load","_fireContentReadyAction","fail","reject","isLoading","container","$element","position","of","contentReadyBase","fireContentReady","_workSpaceRecalculation","_this$_workSpaceRecal","filteredItems","getFilteredItems","_toggleSmallClass","_isVisible","_cleanAllowedPositions","appointments","_layoutManager","createAppointmentsMap","_appointmentPopup","triggerResize","updatePopupFullScreenMode","_clean","width","get","toggleClass","_visibilityChanged","visible","_dataSourceOptions","paginate","_init","_initExpressions","startDateTimeZone","endDateTimeZone","allDay","description","recurrenceRule","recurrenceException","disabled","msie","combinedDataAccessors","getAppointmentDurationInMinutes","_initActions","_compactAppointmentsHelper","_asyncTemplatesTimers","_dataSourceLoadedCallback","_subscribes","getClientOffset","getClientTimezoneOffset","getCommonOffset","getAppointmentOffset","appointmentTimezone","_initTemplates","_templateManager","addDefaultTemplates","appointmentTooltip","dropDownAppointment","expr","_dataAccessors","createGetter","property","getDate","getter","valueOf","item","$container","model","getAppointmentsInstance","_renderAppointmentTemplate","resourcesDataAccessors","type","accessor","_renderContent","_renderContentImpl","_dataSourceChangedHandler","_renderAppointments","getWorkSpace","onDataSourceChanged","isVirtualScrolling","_this$getWorkSpace","_filterAppointments","filter","workspace","_filteredItems","preRenderAppointments","allDayExpanded","length","cleanModelState","getRepaintedAppointments","fields","setter","dateGetter","dateSetter","field","that","apply","arguments","forceIsoDateParsing","object","serializeDate","call","exprObj","replace","_isReadOnly","prop","Object","prototype","hasOwnProperty","_dispose","_this$_recurrenceDial","_appointmentTooltip","dispose","_recurrenceDialog","hideAppointmentPopup","clearTimeout","excludeValidators","_renderFocusTarget","_initMarkup","_renderHeader","_createComponent","_appointmentsConfig","_getAppointmentTooltipOptions","_isLoaded","_isDataSourceLoading","_initMarkupCore","createComponent","getScrollableContainer","getWorkSpaceScrollableContainer","getAppointmentTemplate","showAppointmentPopup","checkAndDeleteAppointment","isAppointmentInAllDayPanel","createFormattedDateText","appointment","targetedAppointment","getAppointmentDisabled","createAppointmentAdapter","targetedAdapter","_checkRecurringAppointment","deleteAppointment","_getExtraAppointmentTooltipOptions","rtlEnabled","offset","appointmentData","itTakesAllDay","appointmentTakesAllDay","supportAllDayRow","_cleanWorkspace","_renderWorkSpace","fixedContainer","getFixedContainer","allDayContainer","getAllDayContainer","_waitAsyncTemplate","_this$_workSpaceRecal2","_isResourcesLoaded","_isDataSourceLoaded","isLoaded","_render","$header","appendTo","_headerConfig","currentViewOptions","countConfig","isAdaptive","tabIndex","observer","todayDate","onItemRendered","onItemClick","onItemContextMenu","onContentReady","getCollectorOffset","needApplyCollectorOffset","_","view","isViewIsObject","viewName","viewType","isCurrentViewValid","log","$workSpace","workSpaceComponent","workSpaceConfig","_workSpaceConfig","initDragBehavior","_all","_attachTablesEvents","getWorkArea","_recalculateWorkspace","_getHeaderDate","_getViewByName","viewCount","i","_refreshDateTimeIndication","_currentViewOptions$s","horizontalVirtualScrollingAllowed","orientation","_currentViewOptions$s2","accessKey","onSelectionChanged","draggingMode","_isRenovatedRender","hoursInterval","_getTemplate","callback","_options","silent","timer","setTimeout","push","_getTemplateByOption","detach","remove","getWorkSpaceScrollable","getScrollable","getWorkSpaceScrollableScrollTop","getGroupedScrollableScrollTop","getWorkSpaceScrollableScrollLeft","getScrollableScrollLeft","getWorkSpaceAllDayHeight","getAllDayHeight","getWorkSpaceAllDayOffset","getAllDayOffset","getWorkSpaceHeaderPanelHeight","getHeaderPanelHeight","getWorkSpaceDateTableOffset","getWorkSpaceLeftOffset","getAppointmentModel","getHeader","getMaxAppointmentsPerCell","targetAppointment","singleAppointment","exceptionDate","isDeleted","isPopupEditing","dragEvent","_updatedRecAppointment","evalRecurrenceRule","isValid","editMode","_excludeAppointmentFromSeries","cancel","_showRecurrenceChangeConfirm","editingMode","moveAppointmentBack","rawAppointment","newRawAppointment","newAppointment","canCreateNewAppointment","keyPropertyName","keyName","addAppointment","_createRecurrenceException","source","_editAppointmentData","_updateAppointment","_getSerializedDate","join","isAllDay","setHours","getHours","getMinutes","getSeconds","getMilliseconds","seriesText","occurrenceText","messageHtml","showCloseButton","showTitle","buttons","onClick","popupOptions","onHidden","e","component","_getUpdatedData","getConvertedFromGrid","isValidDate","isNaN","getTime","targetCell","getTargetCellData","cellStartDate","cellEndDate","appointmentStartDate","appointmentEndDate","resultedStartDate","duration","isKeepAppointmentHours","keepOriginalHours","timeInMs","resultedEndDate","calculateEndDate","dateCopy","timeZoneOffset","getTimezoneOffsetChangeInMs","rawResult","setResourcesToItem","getTargetedAppointment","settings","dataAccessors","getAppointmentSettings","info","getAppointmentInfo","appointmentIndex","_itemIndexKey","adapter","clone","isRecurrent","getStartDate","getRenderingStrategyInstance","getAppointmentDataCalculator","newStartDate","sourceAppointment","rawTargetedAppointment","setTargetedAppointmentResources","subscribe","subject","action","Array","slice","Error","getDataByDroppableCell","target","onUpdatePrevented","updatingOptions","newData","oldData","performFailAction","err","_processActionResult","canceled","deferred","_expandAllDayPanel","update","always","storeAppointment","_onDataPromiseCompleted","actionOptions","resolveCallback","callbackResult","state","handlerName","error","isVisible","getAppointmentPopup","getPopup","getUpdatedAppointment","getUpdatedAppointmentKeys","getResourceManager","getActions","_getRecurrenceException","exceptions","_convertRecurrenceException","exceptionString","getConvertedToTimeZone","convertedStartDate","convertedExceptionDate","correctRecurrenceExceptionByTimezone","dayHasAppointment","dayTimeStamp","startDateTimeStamp","endDateTimeStamp","resourcesSetter","getGroups","setResourceCallback","apptSettings","_positionMap","_getCellGroups","groupIndex","group","id","setting","getCellDataByCoordinates","left","top","getStartViewDate","getEndViewDate","createNewAppointment","newTargetedAppointment","saveChanges","showAppointmentTooltip","deferredColor","itemData","showAppointmentTooltipCore","isAlreadyShown","scrollToTime","hours","minutes","scrollTo","serializedAppointment","addingOptions","updateAppointment","deletingOptions","focus","getFirstDayOfWeek","firstDayOfWeekIndex","getField","setField","getTimeZoneCalculator","include"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (esm/ui/scheduler/ui.scheduler.js)\r\n * Version: 21.1.3\r\n * Build date: Tue May 18 2021\r\n *\r\n * Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\r\nimport registerComponent from \"../../core/component_registrator\";\r\nimport config from \"../../core/config\";\r\nimport devices from \"../../core/devices\";\r\nimport $ from \"../../core/renderer\";\r\nimport {\r\n    BindableTemplate\r\n} from \"../../core/templates/bindable_template\";\r\nimport {\r\n    EmptyTemplate\r\n} from \"../../core/templates/empty_template\";\r\nimport {\r\n    inArray\r\n} from \"../../core/utils/array\";\r\nimport browser from \"../../core/utils/browser\";\r\nimport Callbacks from \"../../core/utils/callbacks\";\r\nimport {\r\n    noop\r\n} from \"../../core/utils/common\";\r\nimport {\r\n    compileGetter,\r\n    compileSetter\r\n} from \"../../core/utils/data\";\r\nimport {\r\n    getBoundingRect\r\n} from \"../../core/utils/position\";\r\nimport dateUtils from \"../../core/utils/date\";\r\nimport dateSerialization from \"../../core/utils/date_serialization\";\r\nimport {\r\n    Deferred,\r\n    when,\r\n    fromPromise\r\n} from \"../../core/utils/deferred\";\r\nimport {\r\n    extend\r\n} from \"../../core/utils/extend\";\r\nimport {\r\n    each\r\n} from \"../../core/utils/iterator\";\r\nimport {\r\n    touch\r\n} from \"../../core/utils/support\";\r\nimport {\r\n    isDefined,\r\n    isString,\r\n    isObject,\r\n    isFunction,\r\n    isEmptyObject,\r\n    isDeferred,\r\n    isPromise\r\n} from \"../../core/utils/type\";\r\nimport {\r\n    hasWindow\r\n} from \"../../core/utils/window\";\r\nimport DataHelperMixin from \"../../data_helper\";\r\nimport {\r\n    triggerResizeEvent\r\n} from \"../../events/visibility_change\";\r\nimport dateLocalization from \"../../localization/date\";\r\nimport messageLocalization from \"../../localization/message\";\r\nimport {\r\n    custom as customDialog\r\n} from \"../dialog\";\r\nimport {\r\n    isMaterial\r\n} from \"../themes\";\r\nimport errors from \"../widget/ui.errors\";\r\nimport Widget from \"../widget/ui.widget\";\r\nimport AppointmentPopup from \"./appointmentPopup\";\r\nimport {\r\n    CompactAppointmentsHelper\r\n} from \"./compactAppointmentsHelper\";\r\nimport {\r\n    DesktopTooltipStrategy\r\n} from \"./tooltip_strategies/desktopTooltipStrategy\";\r\nimport {\r\n    MobileTooltipStrategy\r\n} from \"./tooltip_strategies/mobileTooltipStrategy\";\r\nimport {\r\n    hide as hideLoading,\r\n    show as showLoading\r\n} from \"./loading\";\r\nimport AppointmentCollection from \"./appointments/appointmentCollection\";\r\nimport AppointmentLayoutManager from \"./appointments.layout_manager\";\r\nimport SchedulerAppointmentModel from \"./appointment_model\";\r\nimport {\r\n    Header\r\n} from \"./header/header\";\r\nimport {\r\n    ResourceManager\r\n} from \"./resources/resourceManager\";\r\nimport subscribes from \"./subscribes\";\r\nimport {\r\n    getRecurrenceProcessor\r\n} from \"./recurrence\";\r\nimport timeZoneUtils from \"./utils.timeZone\";\r\nimport SchedulerAgenda from \"./workspaces/ui.scheduler.agenda\";\r\nimport SchedulerTimelineDay from \"./workspaces/ui.scheduler.timeline_day\";\r\nimport SchedulerTimelineMonth from \"./workspaces/ui.scheduler.timeline_month\";\r\nimport SchedulerTimelineWeek from \"./workspaces/ui.scheduler.timeline_week\";\r\nimport SchedulerTimelineWorkWeek from \"./workspaces/ui.scheduler.timeline_work_week\";\r\nimport SchedulerWorkSpaceDay from \"./workspaces/ui.scheduler.work_space_day\";\r\nimport SchedulerWorkSpaceMonth from \"./workspaces/ui.scheduler.work_space_month\";\r\nimport SchedulerWorkSpaceWeek from \"./workspaces/ui.scheduler.work_space_week\";\r\nimport SchedulerWorkSpaceWorkWeek from \"./workspaces/ui.scheduler.work_space_work_week\";\r\nimport AppointmentAdapter from \"./appointmentAdapter\";\r\nimport {\r\n    TimeZoneCalculator\r\n} from \"./timeZoneCalculator\";\r\nimport {\r\n    AppointmentTooltipInfo\r\n} from \"./dataStructures\";\r\nimport {\r\n    AppointmentSettingsGenerator\r\n} from \"./appointmentSettingsGenerator\";\r\nimport AppointmentFilter from \"./appointments/appointmentFilter\";\r\nimport utils from \"./utils\";\r\nvar MINUTES_IN_HOUR = 60;\r\nvar WIDGET_CLASS = \"dx-scheduler\";\r\nvar WIDGET_SMALL_CLASS = \"\".concat(WIDGET_CLASS, \"-small\");\r\nvar WIDGET_ADAPTIVE_CLASS = \"\".concat(WIDGET_CLASS, \"-adaptive\");\r\nvar WIDGET_WIN_NO_TOUCH_CLASS = \"\".concat(WIDGET_CLASS, \"-win-no-touch\");\r\nvar WIDGET_READONLY_CLASS = \"\".concat(WIDGET_CLASS, \"-readonly\");\r\nvar WIDGET_SMALL_WIDTH = 400;\r\nvar FULL_DATE_FORMAT = \"yyyyMMddTHHmmss\";\r\nvar UTC_FULL_DATE_FORMAT = FULL_DATE_FORMAT + \"Z\";\r\nvar VIEWS_CONFIG = {\r\n    day: {\r\n        workSpace: SchedulerWorkSpaceDay,\r\n        renderingStrategy: \"vertical\"\r\n    },\r\n    week: {\r\n        workSpace: SchedulerWorkSpaceWeek,\r\n        renderingStrategy: \"vertical\"\r\n    },\r\n    workWeek: {\r\n        workSpace: SchedulerWorkSpaceWorkWeek,\r\n        renderingStrategy: \"vertical\"\r\n    },\r\n    month: {\r\n        workSpace: SchedulerWorkSpaceMonth,\r\n        renderingStrategy: \"horizontalMonth\"\r\n    },\r\n    timelineDay: {\r\n        workSpace: SchedulerTimelineDay,\r\n        renderingStrategy: \"horizontal\"\r\n    },\r\n    timelineWeek: {\r\n        workSpace: SchedulerTimelineWeek,\r\n        renderingStrategy: \"horizontal\"\r\n    },\r\n    timelineWorkWeek: {\r\n        workSpace: SchedulerTimelineWorkWeek,\r\n        renderingStrategy: \"horizontal\"\r\n    },\r\n    timelineMonth: {\r\n        workSpace: SchedulerTimelineMonth,\r\n        renderingStrategy: \"horizontalMonthLine\"\r\n    },\r\n    agenda: {\r\n        workSpace: SchedulerAgenda,\r\n        renderingStrategy: \"agenda\"\r\n    }\r\n};\r\nvar StoreEventNames = {\r\n    ADDING: \"onAppointmentAdding\",\r\n    ADDED: \"onAppointmentAdded\",\r\n    DELETING: \"onAppointmentDeleting\",\r\n    DELETED: \"onAppointmentDeleted\",\r\n    UPDATING: \"onAppointmentUpdating\",\r\n    UPDATED: \"onAppointmentUpdated\"\r\n};\r\nvar RECURRENCE_EDITING_MODE = {\r\n    SERIES: \"editSeries\",\r\n    OCCURENCE: \"editOccurence\",\r\n    CANCEL: \"cancel\"\r\n};\r\nclass Scheduler extends Widget {\r\n    get appointmentFilter() {\r\n        return new AppointmentFilter(this)\r\n    }\r\n    _getDefaultOptions() {\r\n        var defaultOptions = extend(super._getDefaultOptions(), {\r\n            views: [\"day\", \"week\"],\r\n            currentView: \"day\",\r\n            currentDate: dateUtils.trimTime(new Date),\r\n            min: void 0,\r\n            max: void 0,\r\n            dateSerializationFormat: void 0,\r\n            firstDayOfWeek: void 0,\r\n            groups: [],\r\n            resources: [],\r\n            dataSource: null,\r\n            customizeDateNavigatorText: void 0,\r\n            appointmentTemplate: \"item\",\r\n            dropDownAppointmentTemplate: \"dropDownAppointment\",\r\n            appointmentCollectorTemplate: \"appointmentCollector\",\r\n            dataCellTemplate: null,\r\n            timeCellTemplate: null,\r\n            resourceCellTemplate: null,\r\n            dateCellTemplate: null,\r\n            startDayHour: 0,\r\n            endDayHour: 24,\r\n            editing: {\r\n                allowAdding: true,\r\n                allowDeleting: true,\r\n                allowDragging: true,\r\n                allowResizing: true,\r\n                allowUpdating: true,\r\n                allowTimeZoneEditing: false,\r\n                allowEditingTimeZones: false\r\n            },\r\n            showAllDayPanel: true,\r\n            showCurrentTimeIndicator: true,\r\n            shadeUntilCurrentTime: false,\r\n            indicatorUpdateInterval: 3e5,\r\n            indicatorTime: void 0,\r\n            recurrenceEditMode: \"dialog\",\r\n            cellDuration: 30,\r\n            maxAppointmentsPerCell: \"auto\",\r\n            selectedCellData: [],\r\n            groupByDate: false,\r\n            onAppointmentRendered: null,\r\n            onAppointmentClick: null,\r\n            onAppointmentDblClick: null,\r\n            onAppointmentContextMenu: null,\r\n            onCellClick: null,\r\n            onCellContextMenu: null,\r\n            onAppointmentAdding: null,\r\n            onAppointmentAdded: null,\r\n            onAppointmentUpdating: null,\r\n            onAppointmentUpdated: null,\r\n            onAppointmentDeleting: null,\r\n            onAppointmentDeleted: null,\r\n            onAppointmentFormOpening: null,\r\n            appointmentTooltipTemplate: \"appointmentTooltip\",\r\n            appointmentPopupTemplate: \"appointmentPopup\",\r\n            crossScrollingEnabled: false,\r\n            useDropDownViewSwitcher: false,\r\n            startDateExpr: \"startDate\",\r\n            endDateExpr: \"endDate\",\r\n            textExpr: \"text\",\r\n            descriptionExpr: \"description\",\r\n            allDayExpr: \"allDay\",\r\n            recurrenceRuleExpr: \"recurrenceRule\",\r\n            recurrenceExceptionExpr: \"recurrenceException\",\r\n            disabledExpr: \"disabled\",\r\n            remoteFiltering: false,\r\n            timeZone: \"\",\r\n            startDateTimeZoneExpr: \"startDateTimeZone\",\r\n            endDateTimeZoneExpr: \"endDateTimeZone\",\r\n            noDataText: messageLocalization.format(\"dxCollectionWidget-noDataText\"),\r\n            adaptivityEnabled: false,\r\n            allowMultipleCellSelection: true,\r\n            scrolling: {\r\n                mode: \"standard\"\r\n            },\r\n            renovateRender: true,\r\n            _draggingMode: \"outlook\",\r\n            _appointmentTooltipOffset: {\r\n                x: 0,\r\n                y: 0\r\n            },\r\n            _appointmentTooltipButtonsPosition: \"bottom\",\r\n            _appointmentTooltipOpenButtonText: messageLocalization.format(\"dxScheduler-openAppointment\"),\r\n            _dropDownButtonIcon: \"overflow\",\r\n            _appointmentCountPerCell: 2,\r\n            _collectorOffset: 0,\r\n            _appointmentOffset: 26\r\n        });\r\n        return extend(true, defaultOptions, {\r\n            integrationOptions: {\r\n                useDeferUpdateForTemplates: false\r\n            }\r\n        })\r\n    }\r\n    _defaultOptionsRules() {\r\n        return super._defaultOptionsRules().concat([{\r\n            device: function() {\r\n                return \"desktop\" === devices.real().deviceType && !devices.isSimulator()\r\n            },\r\n            options: {\r\n                focusStateEnabled: true\r\n            }\r\n        }, {\r\n            device: function() {\r\n                return !devices.current().generic\r\n            },\r\n            options: {\r\n                useDropDownViewSwitcher: true,\r\n                editing: {\r\n                    allowDragging: false,\r\n                    allowResizing: false\r\n                }\r\n            }\r\n        }, {\r\n            device: function() {\r\n                return isMaterial()\r\n            },\r\n            options: {\r\n                useDropDownViewSwitcher: true,\r\n                dateCellTemplate: function(data, index, element) {\r\n                    var text = data.text;\r\n                    text.split(\" \").forEach((function(text, index) {\r\n                        var span = $(\"<span>\").text(text).addClass(\"dx-scheduler-header-panel-cell-date\");\r\n                        $(element).append(span);\r\n                        if (!index) {\r\n                            $(element).append(\" \")\r\n                        }\r\n                    }))\r\n                },\r\n                _appointmentTooltipOffset: {\r\n                    x: 0,\r\n                    y: 11\r\n                },\r\n                _appointmentTooltipButtonsPosition: \"top\",\r\n                _appointmentTooltipOpenButtonText: null,\r\n                _dropDownButtonIcon: \"chevrondown\",\r\n                _appointmentCountPerCell: 1,\r\n                _collectorOffset: 20,\r\n                _appointmentOffset: 30\r\n            }\r\n        }])\r\n    }\r\n    _setDeprecatedOptions() {\r\n        super._setDeprecatedOptions();\r\n        extend(this._deprecatedOptions, {\r\n            dropDownAppointmentTemplate: {\r\n                since: \"19.2\",\r\n                message: \"appointmentTooltipTemplate\"\r\n            },\r\n            allowEditingTimeZones: {\r\n                since: \"20.1\",\r\n                alias: \"allowTimeZoneEditing\"\r\n            }\r\n        })\r\n    }\r\n    _getAppointmentSettingsGenerator() {\r\n        return new AppointmentSettingsGenerator(this)\r\n    }\r\n    _postponeDataSourceLoading(promise) {\r\n        this.postponedOperations.add(\"_reloadDataSource\", this._reloadDataSource.bind(this), promise)\r\n    }\r\n    _postponeResourceLoading() {\r\n        var whenLoaded = this.postponedOperations.add(\"_loadResources\", () => this._loadResources());\r\n        var resolveCallbacks = new Deferred;\r\n        whenLoaded.done(resources => {\r\n            resolveCallbacks.resolve(resources)\r\n        });\r\n        this._postponeDataSourceLoading(whenLoaded);\r\n        return resolveCallbacks.promise()\r\n    }\r\n    _optionChanged(args) {\r\n        var value = args.value;\r\n        var name = args.name;\r\n        switch (args.name) {\r\n            case \"customizeDateNavigatorText\":\r\n                this._updateOption(\"header\", name, value);\r\n                break;\r\n            case \"firstDayOfWeek\":\r\n                this._updateOption(\"workSpace\", name, value);\r\n                this._updateOption(\"header\", name, value);\r\n                break;\r\n            case \"currentDate\":\r\n                value = this._dateOption(name);\r\n                value = dateUtils.trimTime(new Date(value));\r\n                this.option(\"selectedCellData\", []);\r\n                this._workSpace.option(name, new Date(value));\r\n                this._header.option(name, new Date(value));\r\n                this._header.option(\"displayedDate\", this._workSpace._getViewStartByOptions());\r\n                this._appointments.option(\"items\", []);\r\n                this._filterAppointmentsByDate();\r\n                this._postponeDataSourceLoading();\r\n                break;\r\n            case \"dataSource\":\r\n                this._initDataSource();\r\n                this._appointmentModel.setDataSource(this._dataSource);\r\n                this._postponeResourceLoading().done(resources => {\r\n                    this._filterAppointmentsByDate();\r\n                    this._updateOption(\"workSpace\", \"showAllDayPanel\", this.option(\"showAllDayPanel\"))\r\n                });\r\n                break;\r\n            case \"min\":\r\n            case \"max\":\r\n                value = this._dateOption(name);\r\n                this._updateOption(\"header\", name, new Date(value));\r\n                this._updateOption(\"workSpace\", name, new Date(value));\r\n                break;\r\n            case \"views\":\r\n                this._processCurrentView();\r\n                if (this._getCurrentViewOptions()) {\r\n                    this.repaint()\r\n                } else {\r\n                    this._header.option(name, value)\r\n                }\r\n                break;\r\n            case \"useDropDownViewSwitcher\":\r\n                this._header.option(name, value);\r\n                break;\r\n            case \"currentView\":\r\n                this._processCurrentView();\r\n                this.fire(\"validateDayHours\");\r\n                this.getLayoutManager().initRenderingStrategy(this._getAppointmentsRenderingStrategy());\r\n                this._validateCellDuration();\r\n                this._appointments.option({\r\n                    items: [],\r\n                    allowDrag: this._allowDragging(),\r\n                    allowResize: this._allowResizing(),\r\n                    itemTemplate: this._getAppointmentTemplate(\"appointmentTemplate\")\r\n                });\r\n                this._postponeResourceLoading().done(resources => {\r\n                    this._refreshWorkSpace(resources);\r\n                    this._updateHeader();\r\n                    this._filterAppointmentsByDate();\r\n                    this._appointments.option(\"allowAllDayResize\", \"day\" !== value)\r\n                });\r\n                break;\r\n            case \"appointmentTemplate\":\r\n                this._appointments.option(\"itemTemplate\", value);\r\n                break;\r\n            case \"dateCellTemplate\":\r\n            case \"resourceCellTemplate\":\r\n            case \"dataCellTemplate\":\r\n            case \"timeCellTemplate\":\r\n                this._updateOption(\"workSpace\", name, value);\r\n                this.repaint();\r\n                break;\r\n            case \"groups\":\r\n                this._postponeResourceLoading().done(resources => {\r\n                    this._refreshWorkSpace(resources);\r\n                    this._filterAppointmentsByDate()\r\n                });\r\n                break;\r\n            case \"resources\":\r\n                this._resourcesManager.setResources(this.option(\"resources\"));\r\n                this._appointmentModel.setDataAccessors(this._combineDataAccessors());\r\n                this._postponeResourceLoading().done(resources => {\r\n                    this._appointments.option(\"items\", []);\r\n                    this._refreshWorkSpace(resources);\r\n                    this._filterAppointmentsByDate()\r\n                });\r\n                break;\r\n            case \"startDayHour\":\r\n            case \"endDayHour\":\r\n                this.fire(\"validateDayHours\");\r\n                this._appointments.option(\"items\", []);\r\n                this._updateOption(\"workSpace\", name, value);\r\n                this._appointments.repaint();\r\n                this._filterAppointmentsByDate();\r\n                this._postponeDataSourceLoading();\r\n                break;\r\n            case StoreEventNames.ADDING:\r\n            case StoreEventNames.ADDED:\r\n            case StoreEventNames.UPDATING:\r\n            case StoreEventNames.UPDATED:\r\n            case StoreEventNames.DELETING:\r\n            case StoreEventNames.DELETED:\r\n            case \"onAppointmentFormOpening\":\r\n                this._actions[name] = this._createActionByOption(name);\r\n                break;\r\n            case \"onAppointmentRendered\":\r\n                this._appointments.option(\"onItemRendered\", this._getAppointmentRenderedAction());\r\n                break;\r\n            case \"onAppointmentClick\":\r\n                this._appointments.option(\"onItemClick\", this._createActionByOption(name));\r\n                break;\r\n            case \"onAppointmentDblClick\":\r\n                this._appointments.option(name, this._createActionByOption(name));\r\n                break;\r\n            case \"onAppointmentContextMenu\":\r\n                this._appointments.option(\"onItemContextMenu\", this._createActionByOption(name));\r\n                break;\r\n            case \"noDataText\":\r\n            case \"allowMultipleCellSelection\":\r\n            case \"selectedCellData\":\r\n            case \"accessKey\":\r\n            case \"onCellClick\":\r\n            case \"onCellContextMenu\":\r\n                this._workSpace.option(name, value);\r\n                break;\r\n            case \"crossScrollingEnabled\":\r\n                this._postponeResourceLoading().done(resources => {\r\n                    this._appointments.option(\"items\", []);\r\n                    this._refreshWorkSpace(resources);\r\n                    if (this._readyToRenderAppointments) {\r\n                        this._appointments.option(\"items\", this._getAppointmentsToRepaint())\r\n                    }\r\n                });\r\n                break;\r\n            case \"cellDuration\":\r\n                this._validateCellDuration();\r\n                this._appointments.option(\"items\", []);\r\n                if (this._readyToRenderAppointments) {\r\n                    this._updateOption(\"workSpace\", \"hoursInterval\", value / 60);\r\n                    this._appointments.option(\"items\", this._getAppointmentsToRepaint())\r\n                }\r\n                break;\r\n            case \"tabIndex\":\r\n            case \"focusStateEnabled\":\r\n                this._updateOption(\"header\", name, value);\r\n                this._updateOption(\"workSpace\", name, value);\r\n                this._appointments.option(name, value);\r\n                super._optionChanged(args);\r\n                break;\r\n            case \"width\":\r\n                this._updateOption(\"header\", name, value);\r\n                if (this.option(\"crossScrollingEnabled\")) {\r\n                    this._updateOption(\"workSpace\", \"width\", value)\r\n                }\r\n                super._optionChanged(args);\r\n                this._dimensionChanged();\r\n                break;\r\n            case \"height\":\r\n                super._optionChanged(args);\r\n                this._dimensionChanged();\r\n                break;\r\n            case \"editing\":\r\n                this._initEditing();\r\n                var editing = this._editing;\r\n                this._bringEditingModeToAppointments(editing);\r\n                this.hideAppointmentTooltip();\r\n                this._cleanPopup();\r\n                break;\r\n            case \"showAllDayPanel\":\r\n                this._postponeResourceLoading().done(resources => {\r\n                    this._filterAppointmentsByDate();\r\n                    this._updateOption(\"workSpace\", \"allDayExpanded\", value);\r\n                    this._updateOption(\"workSpace\", name, value)\r\n                });\r\n                break;\r\n            case \"showCurrentTimeIndicator\":\r\n            case \"indicatorTime\":\r\n            case \"indicatorUpdateInterval\":\r\n            case \"shadeUntilCurrentTime\":\r\n            case \"groupByDate\":\r\n                this._updateOption(\"workSpace\", name, value);\r\n                this.repaint();\r\n                break;\r\n            case \"appointmentDragging\":\r\n            case \"appointmentTooltipTemplate\":\r\n            case \"appointmentPopupTemplate\":\r\n            case \"recurrenceEditMode\":\r\n            case \"remoteFiltering\":\r\n            case \"timeZone\":\r\n            case \"dropDownAppointmentTemplate\":\r\n            case \"appointmentCollectorTemplate\":\r\n            case \"_appointmentTooltipOffset\":\r\n            case \"_appointmentTooltipButtonsPosition\":\r\n            case \"_appointmentTooltipOpenButtonText\":\r\n            case \"_dropDownButtonIcon\":\r\n            case \"_appointmentCountPerCell\":\r\n            case \"_collectorOffset\":\r\n            case \"_appointmentOffset\":\r\n                this.repaint();\r\n                break;\r\n            case \"dateSerializationFormat\":\r\n            case \"maxAppointmentsPerCell\":\r\n                break;\r\n            case \"startDateExpr\":\r\n            case \"endDateExpr\":\r\n            case \"startDateTimeZoneExpr\":\r\n            case \"endDateTimeZoneExpr\":\r\n            case \"textExpr\":\r\n            case \"descriptionExpr\":\r\n            case \"allDayExpr\":\r\n            case \"recurrenceRuleExpr\":\r\n            case \"recurrenceExceptionExpr\":\r\n            case \"disabledExpr\":\r\n                this._updateExpression(name, value);\r\n                this._appointmentModel.setDataAccessors(this._combineDataAccessors());\r\n                this._initAppointmentTemplate();\r\n                this.repaint();\r\n                break;\r\n            case \"adaptivityEnabled\":\r\n                this._toggleAdaptiveClass();\r\n                this.repaint();\r\n                break;\r\n            case \"scrolling\":\r\n                this.option(\"crossScrollingEnabled\", this._isHorizontalVirtualScrolling() || this.option(\"crossScrollingEnabled\"));\r\n                this._updateOption(\"workSpace\", args.fullName, value);\r\n                break;\r\n            case \"renovateRender\":\r\n                this._updateOption(\"workSpace\", name, value);\r\n                break;\r\n            case \"_draggingMode\":\r\n                this._workSpace.option(\"draggingMode\", value);\r\n                break;\r\n            default:\r\n                super._optionChanged(args)\r\n        }\r\n    }\r\n    _updateHeader() {\r\n        var viewCountConfig = this._getViewCountConfig();\r\n        this._header.option(\"intervalCount\", viewCountConfig.intervalCount);\r\n        this._header.option(\"displayedDate\", this._workSpace._getViewStartByOptions());\r\n        this._header.option(\"min\", this._dateOption(\"min\"));\r\n        this._header.option(\"max\", this._dateOption(\"max\"));\r\n        this._header.option(\"currentDate\", this._dateOption(\"currentDate\"));\r\n        this._header.option(\"firstDayOfWeek\", this._getCurrentViewOption(\"firstDayOfWeek\"));\r\n        this._header.option(\"currentView\", this._currentView)\r\n    }\r\n    _dateOption(optionName) {\r\n        var optionValue = this._getCurrentViewOption(optionName);\r\n        return dateSerialization.deserializeDate(optionValue)\r\n    }\r\n    _getSerializationFormat(optionName) {\r\n        var value = this._getCurrentViewOption(optionName);\r\n        if (\"number\" === typeof value) {\r\n            return \"number\"\r\n        }\r\n        if (!isString(value)) {\r\n            return\r\n        }\r\n        return dateSerialization.getDateSerializationFormat(value)\r\n    }\r\n    _bringEditingModeToAppointments(editing) {\r\n        var editingConfig = {\r\n            allowDelete: editing.allowUpdating && editing.allowDeleting\r\n        };\r\n        if (!this._isAgenda()) {\r\n            editingConfig.allowDrag = editing.allowDragging;\r\n            editingConfig.allowResize = editing.allowResizing;\r\n            editingConfig.allowAllDayResize = editing.allowResizing && this._supportAllDayResizing()\r\n        }\r\n        this._appointments.option(editingConfig);\r\n        this.repaint()\r\n    }\r\n    _isAgenda() {\r\n        return \"agenda\" === this._getAppointmentsRenderingStrategy()\r\n    }\r\n    _allowDragging() {\r\n        return this._editing.allowDragging && !this._isAgenda()\r\n    }\r\n    _allowResizing() {\r\n        return this._editing.allowResizing && !this._isAgenda()\r\n    }\r\n    _allowAllDayResizing() {\r\n        return this._editing.allowResizing && this._supportAllDayResizing()\r\n    }\r\n    _supportAllDayResizing() {\r\n        return \"day\" !== this._getCurrentViewType() || this._currentView.intervalCount > 1\r\n    }\r\n    _isAllDayExpanded(items) {\r\n        return this.option(\"showAllDayPanel\") && this.appointmentFilter.hasAllDayAppointments(items)\r\n    }\r\n    _getTimezoneOffsetByOption(date) {\r\n        return timeZoneUtils.calculateTimezoneByValue(this.option(\"timeZone\"), date)\r\n    }\r\n    _filterAppointmentsByDate() {\r\n        var dateRange = this._workSpace.getDateRange();\r\n        var startDate = this.timeZoneCalculator.createDate(dateRange[0], {\r\n            path: \"fromGrid\"\r\n        });\r\n        var endDate = this.timeZoneCalculator.createDate(dateRange[1], {\r\n            path: \"fromGrid\"\r\n        });\r\n        this._appointmentModel.filterByDate(startDate, endDate, this.option(\"remoteFiltering\"), this.option(\"dateSerializationFormat\"))\r\n    }\r\n    _loadResources() {\r\n        var groups = this._getCurrentViewOption(\"groups\");\r\n        var result = new Deferred;\r\n        this._resourcesManager.loadResources(groups).done(function(resources) {\r\n            this._loadedResources = resources;\r\n            result.resolve(resources)\r\n        }.bind(this));\r\n        return result.promise()\r\n    }\r\n    _reloadDataSource() {\r\n        var result = new Deferred;\r\n        if (this._dataSource) {\r\n            this._dataSource.load().done(function() {\r\n                hideLoading();\r\n                this._fireContentReadyAction(result)\r\n            }.bind(this)).fail((function() {\r\n                hideLoading();\r\n                result.reject()\r\n            }));\r\n            this._dataSource.isLoading() && showLoading({\r\n                container: this.$element(),\r\n                position: {\r\n                    of: this.$element()\r\n                }\r\n            })\r\n        } else {\r\n            this._fireContentReadyAction(result)\r\n        }\r\n        return result.promise()\r\n    }\r\n    _fireContentReadyAction(result) {\r\n        var contentReadyBase = super._fireContentReadyAction.bind(this);\r\n        var fireContentReady = () => {\r\n            contentReadyBase();\r\n            null === result || void 0 === result ? void 0 : result.resolve()\r\n        };\r\n        if (this._workSpaceRecalculation) {\r\n            var _this$_workSpaceRecal;\r\n            null === (_this$_workSpaceRecal = this._workSpaceRecalculation) || void 0 === _this$_workSpaceRecal ? void 0 : _this$_workSpaceRecal.done(() => {\r\n                fireContentReady()\r\n            })\r\n        } else {\r\n            fireContentReady()\r\n        }\r\n    }\r\n    _dimensionChanged() {\r\n        var filteredItems = this.getFilteredItems();\r\n        this._toggleSmallClass();\r\n        if (!this._isAgenda() && filteredItems && this._isVisible()) {\r\n            this._workSpace._cleanAllowedPositions();\r\n            this._workSpace.option(\"allDayExpanded\", this._isAllDayExpanded(filteredItems));\r\n            this._workSpace._dimensionChanged();\r\n            var appointments = this._layoutManager.createAppointmentsMap(filteredItems);\r\n            this._appointments.option(\"items\", appointments)\r\n        }\r\n        this.hideAppointmentTooltip();\r\n        this._appointmentPopup.triggerResize();\r\n        this._appointmentPopup.updatePopupFullScreenMode()\r\n    }\r\n    _clean() {\r\n        this._cleanPopup();\r\n        super._clean()\r\n    }\r\n    _toggleSmallClass() {\r\n        var width = getBoundingRect(this.$element().get(0)).width;\r\n        this.$element().toggleClass(WIDGET_SMALL_CLASS, width < WIDGET_SMALL_WIDTH)\r\n    }\r\n    _toggleAdaptiveClass() {\r\n        this.$element().toggleClass(WIDGET_ADAPTIVE_CLASS, this.option(\"adaptivityEnabled\"))\r\n    }\r\n    _visibilityChanged(visible) {\r\n        visible && this._dimensionChanged()\r\n    }\r\n    _dataSourceOptions() {\r\n        return {\r\n            paginate: false\r\n        }\r\n    }\r\n    _init() {\r\n        this._initExpressions({\r\n            startDate: this.option(\"startDateExpr\"),\r\n            endDate: this.option(\"endDateExpr\"),\r\n            startDateTimeZone: this.option(\"startDateTimeZoneExpr\"),\r\n            endDateTimeZone: this.option(\"endDateTimeZoneExpr\"),\r\n            allDay: this.option(\"allDayExpr\"),\r\n            text: this.option(\"textExpr\"),\r\n            description: this.option(\"descriptionExpr\"),\r\n            recurrenceRule: this.option(\"recurrenceRuleExpr\"),\r\n            recurrenceException: this.option(\"recurrenceExceptionExpr\"),\r\n            disabled: this.option(\"disabledExpr\")\r\n        });\r\n        super._init();\r\n        this._initDataSource();\r\n        this._loadedResources = [];\r\n        this.$element().addClass(WIDGET_CLASS).toggleClass(WIDGET_WIN_NO_TOUCH_CLASS, !!(browser.msie && touch));\r\n        this._initEditing();\r\n        this._resourcesManager = new ResourceManager(this.option(\"resources\"));\r\n        var combinedDataAccessors = this._combineDataAccessors();\r\n        this._appointmentModel = new SchedulerAppointmentModel(this._dataSource, combinedDataAccessors, this.getAppointmentDurationInMinutes());\r\n        this._initActions();\r\n        this._compactAppointmentsHelper = new CompactAppointmentsHelper(this);\r\n        this._asyncTemplatesTimers = [];\r\n        this._dataSourceLoadedCallback = Callbacks();\r\n        this._subscribes = subscribes;\r\n        this.timeZoneCalculator = new TimeZoneCalculator({\r\n            getClientOffset: date => timeZoneUtils.getClientTimezoneOffset(date),\r\n            getCommonOffset: (date, timeZone) => timeZoneUtils.calculateTimezoneByValue(timeZone || this.option(\"timeZone\"), date),\r\n            getAppointmentOffset: (date, appointmentTimezone) => timeZoneUtils.calculateTimezoneByValue(appointmentTimezone, date)\r\n        })\r\n    }\r\n    _initTemplates() {\r\n        this._initAppointmentTemplate();\r\n        this._templateManager.addDefaultTemplates({\r\n            appointmentTooltip: new EmptyTemplate,\r\n            dropDownAppointment: new EmptyTemplate\r\n        });\r\n        super._initTemplates()\r\n    }\r\n    _initAppointmentTemplate() {\r\n        var {\r\n            expr: expr\r\n        } = this._dataAccessors;\r\n        var createGetter = property => compileGetter(\"appointmentData.\".concat(property));\r\n        var getDate = getter => data => {\r\n            var value = getter(data);\r\n            if (value instanceof Date) {\r\n                return value.valueOf()\r\n            }\r\n            return value\r\n        };\r\n        this._templateManager.addDefaultTemplates({\r\n            item: new BindableTemplate(($container, data, model) => this.getAppointmentsInstance()._renderAppointmentTemplate($container, data, model), [\"html\", \"text\", \"startDate\", \"endDate\", \"allDay\", \"description\", \"recurrenceRule\", \"recurrenceException\", \"startDateTimeZone\", \"endDateTimeZone\"], this.option(\"integrationOptions.watchMethod\"), {\r\n                text: createGetter(expr.textExpr),\r\n                startDate: getDate(createGetter(expr.startDateExpr)),\r\n                endDate: getDate(createGetter(expr.endDateExpr)),\r\n                startDateTimeZone: createGetter(expr.startDateTimeZoneExpr),\r\n                endDateTimeZone: createGetter(expr.endDateTimeZoneExpr),\r\n                allDay: createGetter(expr.allDayExpr),\r\n                recurrenceRule: createGetter(expr.recurrenceRuleExpr)\r\n            })\r\n        })\r\n    }\r\n    _combineDataAccessors() {\r\n        var resourcesDataAccessors = this._resourcesManager._dataAccessors;\r\n        var result = extend(true, {}, this._dataAccessors);\r\n        each(resourcesDataAccessors, function(type, accessor) {\r\n            result[type].resources = accessor\r\n        }.bind(this));\r\n        return result\r\n    }\r\n    _renderContent() {\r\n        this._renderContentImpl()\r\n    }\r\n    _dataSourceChangedHandler(result) {\r\n        if (this._readyToRenderAppointments) {\r\n            this._workSpaceRecalculation.done(function() {\r\n                this._renderAppointments();\r\n                var filteredItems = this.getFilteredItems();\r\n                this.getWorkSpace().onDataSourceChanged(filteredItems)\r\n            }.bind(this))\r\n        }\r\n    }\r\n    isVirtualScrolling() {\r\n        var _this$getWorkSpace;\r\n        return null === (_this$getWorkSpace = this.getWorkSpace()) || void 0 === _this$getWorkSpace ? void 0 : _this$getWorkSpace.isVirtualScrolling()\r\n    }\r\n    _filterAppointments() {\r\n        return this.appointmentFilter.filter()\r\n    }\r\n    _renderAppointments() {\r\n        var workspace = this.getWorkSpace();\r\n        this._filteredItems = this._filterAppointments();\r\n        workspace.preRenderAppointments({\r\n            allDayExpanded: this._isAllDayExpanded(this._filteredItems),\r\n            appointments: this._filteredItems\r\n        });\r\n        if (this._filteredItems.length && this._isVisible()) {\r\n            this._appointments.option(\"items\", this._getAppointmentsToRepaint());\r\n            this._appointmentModel.cleanModelState()\r\n        } else {\r\n            this._appointments.option(\"items\", [])\r\n        }\r\n    }\r\n    _getAppointmentsToRepaint() {\r\n        var appointments = this._layoutManager.createAppointmentsMap(this._filteredItems);\r\n        return this._layoutManager.getRepaintedAppointments(appointments, this.getAppointmentsInstance().option(\"items\"))\r\n    }\r\n    _initExpressions(fields) {\r\n        if (!this._dataAccessors) {\r\n            this._dataAccessors = {\r\n                getter: {},\r\n                setter: {},\r\n                expr: {}\r\n            }\r\n        }\r\n        each(fields, function(name, expr) {\r\n            if (expr) {\r\n                var getter = compileGetter(expr);\r\n                var setter = compileSetter(expr);\r\n                var dateGetter;\r\n                var dateSetter;\r\n                if (field = name, \"startDate\" === field || \"endDate\" === field) {\r\n                    var that = this;\r\n                    dateGetter = function() {\r\n                        var value = getter.apply(this, arguments);\r\n                        if (config().forceIsoDateParsing) {\r\n                            if (!that.option(\"dateSerializationFormat\")) {\r\n                                var format = dateSerialization.getDateSerializationFormat(value);\r\n                                if (format) {\r\n                                    that.option(\"dateSerializationFormat\", format)\r\n                                }\r\n                            }\r\n                            value = dateSerialization.deserializeDate(value)\r\n                        }\r\n                        return value\r\n                    };\r\n                    dateSetter = function(object, value) {\r\n                        if (config().forceIsoDateParsing || that.option(\"dateSerializationFormat\")) {\r\n                            value = dateSerialization.serializeDate(value, that.option(\"dateSerializationFormat\"))\r\n                        }\r\n                        setter.call(this, object, value)\r\n                    }\r\n                }\r\n                this._dataAccessors.getter[name] = dateGetter || getter;\r\n                this._dataAccessors.setter[name] = dateSetter || setter;\r\n                this._dataAccessors.expr[name + \"Expr\"] = expr\r\n            } else {\r\n                delete this._dataAccessors.getter[name];\r\n                delete this._dataAccessors.setter[name];\r\n                delete this._dataAccessors.expr[name + \"Expr\"]\r\n            }\r\n            var field\r\n        }.bind(this))\r\n    }\r\n    _updateExpression(name, value) {\r\n        var exprObj = {};\r\n        exprObj[name.replace(\"Expr\", \"\")] = value;\r\n        this._initExpressions(exprObj)\r\n    }\r\n    _initEditing() {\r\n        var editing = this.option(\"editing\");\r\n        this._editing = {\r\n            allowAdding: !!editing,\r\n            allowUpdating: !!editing,\r\n            allowDeleting: !!editing,\r\n            allowResizing: !!editing,\r\n            allowDragging: !!editing\r\n        };\r\n        if (isObject(editing)) {\r\n            this._editing = extend(this._editing, editing)\r\n        }\r\n        this._editing.allowDragging = this._editing.allowDragging && this._editing.allowUpdating;\r\n        this._editing.allowResizing = this._editing.allowResizing && this._editing.allowUpdating;\r\n        this.$element().toggleClass(WIDGET_READONLY_CLASS, this._isReadOnly())\r\n    }\r\n    _isReadOnly() {\r\n        var result = true;\r\n        var editing = this._editing;\r\n        for (var prop in editing) {\r\n            if (Object.prototype.hasOwnProperty.call(editing, prop)) {\r\n                result = result && !editing[prop]\r\n            }\r\n        }\r\n        return result\r\n    }\r\n    _dispose() {\r\n        var _this$_recurrenceDial;\r\n        this._appointmentTooltip && this._appointmentTooltip.dispose();\r\n        null === (_this$_recurrenceDial = this._recurrenceDialog) || void 0 === _this$_recurrenceDial ? void 0 : _this$_recurrenceDial.hide(RECURRENCE_EDITING_MODE.CANCEL);\r\n        this.hideAppointmentPopup();\r\n        this.hideAppointmentTooltip();\r\n        this._asyncTemplatesTimers.forEach(clearTimeout);\r\n        this._asyncTemplatesTimers = [];\r\n        super._dispose()\r\n    }\r\n    _initActions() {\r\n        this._actions = {\r\n            onAppointmentAdding: this._createActionByOption(StoreEventNames.ADDING),\r\n            onAppointmentAdded: this._createActionByOption(StoreEventNames.ADDED),\r\n            onAppointmentUpdating: this._createActionByOption(StoreEventNames.UPDATING),\r\n            onAppointmentUpdated: this._createActionByOption(StoreEventNames.UPDATED),\r\n            onAppointmentDeleting: this._createActionByOption(StoreEventNames.DELETING),\r\n            onAppointmentDeleted: this._createActionByOption(StoreEventNames.DELETED),\r\n            onAppointmentFormOpening: this._createActionByOption(\"onAppointmentFormOpening\")\r\n        }\r\n    }\r\n    _getAppointmentRenderedAction() {\r\n        return this._createActionByOption(\"onAppointmentRendered\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"]\r\n        })\r\n    }\r\n    _renderFocusTarget() {\r\n        return noop()\r\n    }\r\n    _initMarkup() {\r\n        super._initMarkup();\r\n        this.fire(\"validateDayHours\");\r\n        this._validateCellDuration();\r\n        this._processCurrentView();\r\n        this._renderHeader();\r\n        this._layoutManager = new AppointmentLayoutManager(this, this._getAppointmentsRenderingStrategy());\r\n        this._appointments = this._createComponent(\"<div>\", AppointmentCollection, this._appointmentsConfig());\r\n        this._appointments.option(\"itemTemplate\", this._getAppointmentTemplate(\"appointmentTemplate\"));\r\n        this._appointmentTooltip = new(this.option(\"adaptivityEnabled\") ? MobileTooltipStrategy : DesktopTooltipStrategy)(this._getAppointmentTooltipOptions());\r\n        this._appointmentPopup = new AppointmentPopup(this);\r\n        if (this._isLoaded() || this._isDataSourceLoading()) {\r\n            this._initMarkupCore(this._loadedResources);\r\n            this._dataSourceChangedHandler(this._dataSource.items());\r\n            this._fireContentReadyAction()\r\n        } else {\r\n            this._loadResources().done(function(resources) {\r\n                this._initMarkupCore(resources);\r\n                this._reloadDataSource()\r\n            }.bind(this))\r\n        }\r\n    }\r\n    _getAppointmentTooltipOptions() {\r\n        return {\r\n            createComponent: this._createComponent.bind(this),\r\n            container: this.$element(),\r\n            getScrollableContainer: this.getWorkSpaceScrollableContainer.bind(this),\r\n            addDefaultTemplates: this._templateManager.addDefaultTemplates.bind(this._templateManager),\r\n            getAppointmentTemplate: this._getAppointmentTemplate.bind(this),\r\n            showAppointmentPopup: this.showAppointmentPopup.bind(this),\r\n            checkAndDeleteAppointment: this.checkAndDeleteAppointment.bind(this),\r\n            isAppointmentInAllDayPanel: this.isAppointmentInAllDayPanel.bind(this),\r\n            createFormattedDateText: (appointment, targetedAppointment, format) => this.fire(\"getTextAndFormatDate\", appointment, targetedAppointment, format),\r\n            getAppointmentDisabled: appointment => this.createAppointmentAdapter(appointment).disabled\r\n        }\r\n    }\r\n    checkAndDeleteAppointment(appointment, targetedAppointment) {\r\n        var targetedAdapter = this.createAppointmentAdapter(targetedAppointment);\r\n        this._checkRecurringAppointment(appointment, targetedAppointment, targetedAdapter.startDate, () => {\r\n            this.deleteAppointment(appointment)\r\n        }, true)\r\n    }\r\n    _getExtraAppointmentTooltipOptions() {\r\n        return {\r\n            rtlEnabled: this.option(\"rtlEnabled\"),\r\n            focusStateEnabled: this.option(\"focusStateEnabled\"),\r\n            editing: this.option(\"editing\"),\r\n            offset: this.option(\"_appointmentTooltipOffset\")\r\n        }\r\n    }\r\n    isAppointmentInAllDayPanel(appointmentData) {\r\n        var workSpace = this._workSpace;\r\n        var itTakesAllDay = this.appointmentTakesAllDay(appointmentData);\r\n        return itTakesAllDay && workSpace.supportAllDayRow() && workSpace.option(\"showAllDayPanel\")\r\n    }\r\n    _initMarkupCore(resources) {\r\n        this._readyToRenderAppointments = hasWindow();\r\n        this._workSpace && this._cleanWorkspace();\r\n        this._renderWorkSpace(resources);\r\n        this._appointments.option({\r\n            fixedContainer: this._workSpace.getFixedContainer(),\r\n            allDayContainer: this._workSpace.getAllDayContainer()\r\n        });\r\n        this._waitAsyncTemplate(() => {\r\n            var _this$_workSpaceRecal2;\r\n            return null === (_this$_workSpaceRecal2 = this._workSpaceRecalculation) || void 0 === _this$_workSpaceRecal2 ? void 0 : _this$_workSpaceRecal2.resolve()\r\n        });\r\n        this._filterAppointmentsByDate()\r\n    }\r\n    _isLoaded() {\r\n        return this._isResourcesLoaded() && this._isDataSourceLoaded()\r\n    }\r\n    _isResourcesLoaded() {\r\n        return isDefined(this._loadedResources)\r\n    }\r\n    _isDataSourceLoaded() {\r\n        return this._dataSource && this._dataSource.isLoaded()\r\n    }\r\n    _render() {\r\n        this._toggleSmallClass();\r\n        this._toggleAdaptiveClass();\r\n        super._render()\r\n    }\r\n    _renderHeader() {\r\n        var $header = $(\"<div>\").appendTo(this.$element());\r\n        this._header = this._createComponent($header, Header, this._headerConfig())\r\n    }\r\n    _headerConfig() {\r\n        var currentViewOptions = this._getCurrentViewOptions();\r\n        var countConfig = this._getViewCountConfig();\r\n        var result = extend({\r\n            isAdaptive: this.option(\"adaptivityEnabled\"),\r\n            firstDayOfWeek: this.option(\"firstDayOfWeek\"),\r\n            currentView: this._currentView,\r\n            tabIndex: this.option(\"tabIndex\"),\r\n            focusStateEnabled: this.option(\"focusStateEnabled\"),\r\n            width: this.option(\"width\"),\r\n            rtlEnabled: this.option(\"rtlEnabled\"),\r\n            useDropDownViewSwitcher: this.option(\"useDropDownViewSwitcher\"),\r\n            _dropDownButtonIcon: this.option(\"_dropDownButtonIcon\"),\r\n            customizeDateNavigatorText: this.option(\"customizeDateNavigatorText\")\r\n        }, currentViewOptions);\r\n        result.observer = this;\r\n        result.intervalCount = countConfig.intervalCount;\r\n        result.views = this.option(\"views\");\r\n        result.min = new Date(this._dateOption(\"min\"));\r\n        result.max = new Date(this._dateOption(\"max\"));\r\n        result.currentDate = dateUtils.trimTime(new Date(this._dateOption(\"currentDate\")));\r\n        result.todayDate = () => {\r\n            var result = this.timeZoneCalculator.createDate(new Date, {\r\n                path: \"toGrid\"\r\n            });\r\n            return result\r\n        };\r\n        return result\r\n    }\r\n    _appointmentsConfig() {\r\n        var that = this;\r\n        var config = {\r\n            observer: this,\r\n            onItemRendered: this._getAppointmentRenderedAction(),\r\n            onItemClick: this._createActionByOption(\"onAppointmentClick\"),\r\n            onItemContextMenu: this._createActionByOption(\"onAppointmentContextMenu\"),\r\n            onAppointmentDblClick: this._createActionByOption(\"onAppointmentDblClick\"),\r\n            tabIndex: this.option(\"tabIndex\"),\r\n            focusStateEnabled: this.option(\"focusStateEnabled\"),\r\n            allowDrag: this._allowDragging(),\r\n            allowDelete: this._editing.allowUpdating && this._editing.allowDeleting,\r\n            allowResize: this._allowResizing(),\r\n            allowAllDayResize: this._allowAllDayResizing(),\r\n            rtlEnabled: this.option(\"rtlEnabled\"),\r\n            currentView: this.option(\"currentView\"),\r\n            onContentReady: function() {\r\n                that._workSpace && that._workSpace.option(\"allDayExpanded\", that._isAllDayExpanded(that.getFilteredItems()))\r\n            }\r\n        };\r\n        return config\r\n    }\r\n    getCollectorOffset() {\r\n        if (this._workSpace.needApplyCollectorOffset() && !this.option(\"adaptivityEnabled\")) {\r\n            return this.option(\"_collectorOffset\")\r\n        } else {\r\n            return 0\r\n        }\r\n    }\r\n    getAppointmentDurationInMinutes() {\r\n        return this._getCurrentViewOption(\"cellDuration\")\r\n    }\r\n    _processCurrentView() {\r\n        var views = this.option(\"views\");\r\n        var currentView = this.option(\"currentView\");\r\n        var that = this;\r\n        this._currentView = null;\r\n        each(views, (function(_, view) {\r\n            var isViewIsObject = isObject(view);\r\n            var viewName = isViewIsObject ? view.name : view;\r\n            var viewType = view.type;\r\n            if (currentView === viewName || currentView === viewType) {\r\n                that._currentView = view;\r\n                return false\r\n            }\r\n        }));\r\n        if (!this._currentView) {\r\n            var isCurrentViewValid = !!VIEWS_CONFIG[currentView];\r\n            if (isCurrentViewValid) {\r\n                this._currentView = currentView\r\n            } else {\r\n                this._currentView = views[0]\r\n            }\r\n        }\r\n    }\r\n    _validateCellDuration() {\r\n        var endDayHour = this._getCurrentViewOption(\"endDayHour\");\r\n        var startDayHour = this._getCurrentViewOption(\"startDayHour\");\r\n        var cellDuration = this._getCurrentViewOption(\"cellDuration\");\r\n        if ((endDayHour - startDayHour) * MINUTES_IN_HOUR % cellDuration !== 0) {\r\n            errors.log(\"W1015\")\r\n        }\r\n    }\r\n    _getCurrentViewType() {\r\n        return this._currentView.type || this._currentView\r\n    }\r\n    _getAppointmentsRenderingStrategy() {\r\n        return VIEWS_CONFIG[this._getCurrentViewType()].renderingStrategy\r\n    }\r\n    _renderWorkSpace(groups) {\r\n        this._readyToRenderAppointments && this._toggleSmallClass();\r\n        var $workSpace = $(\"<div>\").appendTo(this.$element());\r\n        var countConfig = this._getViewCountConfig();\r\n        var workSpaceComponent = VIEWS_CONFIG[this._getCurrentViewType()].workSpace;\r\n        var workSpaceConfig = this._workSpaceConfig(groups, countConfig);\r\n        this._workSpace = this._createComponent($workSpace, workSpaceComponent, workSpaceConfig);\r\n        this._allowDragging() && this._workSpace.initDragBehavior(this, this._all);\r\n        this._workSpace._attachTablesEvents();\r\n        this._workSpace.getWorkArea().append(this._appointments.$element());\r\n        this._recalculateWorkspace();\r\n        countConfig.startDate && this._header && this._header.option(\"currentDate\", this._workSpace._getHeaderDate());\r\n        this._appointments.option(\"_collectorOffset\", this.getCollectorOffset())\r\n    }\r\n    _getViewCountConfig() {\r\n        var currentView = this.option(\"currentView\");\r\n        var view = this._getViewByName(currentView);\r\n        var viewCount = view && view.intervalCount || 1;\r\n        var startDate = view && view.startDate || null;\r\n        return {\r\n            intervalCount: viewCount,\r\n            startDate: startDate\r\n        }\r\n    }\r\n    _getViewByName(name) {\r\n        var views = this.option(\"views\");\r\n        for (var i = 0; i < views.length; i++) {\r\n            if (views[i].name === name || views[i].type === name || views[i] === name) {\r\n                return views[i]\r\n            }\r\n        }\r\n    }\r\n    _recalculateWorkspace() {\r\n        this._workSpaceRecalculation = new Deferred;\r\n        this._waitAsyncTemplate(() => {\r\n            triggerResizeEvent(this._workSpace.$element());\r\n            this._workSpace._refreshDateTimeIndication()\r\n        })\r\n    }\r\n    _workSpaceConfig(groups, countConfig) {\r\n        var _currentViewOptions$s;\r\n        var currentViewOptions = this._getCurrentViewOptions();\r\n        var scrolling = this.option(\"scrolling\");\r\n        var isVirtualScrolling = \"virtual\" === scrolling.mode || \"virtual\" === (null === (_currentViewOptions$s = currentViewOptions.scrolling) || void 0 === _currentViewOptions$s ? void 0 : _currentViewOptions$s.mode);\r\n        var horizontalVirtualScrollingAllowed = isVirtualScrolling && (!isDefined(scrolling.orientation) || [\"horizontal\", \"both\"].filter(item => {\r\n            var _currentViewOptions$s2;\r\n            return scrolling.orientation === item || (null === (_currentViewOptions$s2 = currentViewOptions.scrolling) || void 0 === _currentViewOptions$s2 ? void 0 : _currentViewOptions$s2.orientation) === item\r\n        }).length > 0);\r\n        var crossScrollingEnabled = this.option(\"crossScrollingEnabled\") || horizontalVirtualScrollingAllowed;\r\n        var result = extend({\r\n            noDataText: this.option(\"noDataText\"),\r\n            firstDayOfWeek: this.option(\"firstDayOfWeek\"),\r\n            startDayHour: this.option(\"startDayHour\"),\r\n            endDayHour: this.option(\"endDayHour\"),\r\n            tabIndex: this.option(\"tabIndex\"),\r\n            accessKey: this.option(\"accessKey\"),\r\n            focusStateEnabled: this.option(\"focusStateEnabled\"),\r\n            cellDuration: this.option(\"cellDuration\"),\r\n            showAllDayPanel: this.option(\"showAllDayPanel\"),\r\n            showCurrentTimeIndicator: this.option(\"showCurrentTimeIndicator\"),\r\n            indicatorTime: this.option(\"indicatorTime\"),\r\n            indicatorUpdateInterval: this.option(\"indicatorUpdateInterval\"),\r\n            shadeUntilCurrentTime: this.option(\"shadeUntilCurrentTime\"),\r\n            allDayExpanded: this._appointments.option(\"items\"),\r\n            crossScrollingEnabled: crossScrollingEnabled,\r\n            dataCellTemplate: this.option(\"dataCellTemplate\"),\r\n            timeCellTemplate: this.option(\"timeCellTemplate\"),\r\n            resourceCellTemplate: this.option(\"resourceCellTemplate\"),\r\n            dateCellTemplate: this.option(\"dateCellTemplate\"),\r\n            allowMultipleCellSelection: this.option(\"allowMultipleCellSelection\"),\r\n            selectedCellData: this.option(\"selectedCellData\"),\r\n            onSelectionChanged: args => {\r\n                this.option(\"selectedCellData\", args.selectedCellData)\r\n            },\r\n            groupByDate: this._getCurrentViewOption(\"groupByDate\"),\r\n            scrolling: scrolling,\r\n            draggingMode: this.option(\"_draggingMode\"),\r\n            renovateRender: this._isRenovatedRender(isVirtualScrolling)\r\n        }, currentViewOptions);\r\n        result.observer = this;\r\n        result.intervalCount = countConfig.intervalCount;\r\n        result.startDate = countConfig.startDate;\r\n        result.groups = groups;\r\n        result.onCellClick = this._createActionByOption(\"onCellClick\");\r\n        result.onCellContextMenu = this._createActionByOption(\"onCellContextMenu\");\r\n        result.min = new Date(this._dateOption(\"min\"));\r\n        result.max = new Date(this._dateOption(\"max\"));\r\n        result.currentDate = dateUtils.trimTime(new Date(this._dateOption(\"currentDate\")));\r\n        result.hoursInterval = result.cellDuration / 60;\r\n        result.allDayExpanded = this._isAllDayExpanded(this.getFilteredItems());\r\n        result.dataCellTemplate = result.dataCellTemplate ? this._getTemplate(result.dataCellTemplate) : null;\r\n        result.timeCellTemplate = result.timeCellTemplate ? this._getTemplate(result.timeCellTemplate) : null;\r\n        result.resourceCellTemplate = result.resourceCellTemplate ? this._getTemplate(result.resourceCellTemplate) : null;\r\n        result.dateCellTemplate = result.dateCellTemplate ? this._getTemplate(result.dateCellTemplate) : null;\r\n        return result\r\n    }\r\n    _isRenovatedRender(isVirtualScrolling) {\r\n        return this.option(\"renovateRender\") && hasWindow() || isVirtualScrolling\r\n    }\r\n    _waitAsyncTemplate(callback) {\r\n        if (this._options.silent(\"templatesRenderAsynchronously\")) {\r\n            var timer = setTimeout(() => {\r\n                callback();\r\n                clearTimeout(timer)\r\n            });\r\n            this._asyncTemplatesTimers.push(timer)\r\n        } else {\r\n            callback()\r\n        }\r\n    }\r\n    _getCurrentViewOptions() {\r\n        return this._currentView\r\n    }\r\n    _getCurrentViewOption(optionName) {\r\n        var currentViewOptions = this._getCurrentViewOptions();\r\n        if (currentViewOptions && void 0 !== currentViewOptions[optionName]) {\r\n            return currentViewOptions[optionName]\r\n        }\r\n        return this.option(optionName)\r\n    }\r\n    _getAppointmentTemplate(optionName) {\r\n        var currentViewOptions = this._getCurrentViewOptions();\r\n        if (currentViewOptions && currentViewOptions[optionName]) {\r\n            return this._getTemplate(currentViewOptions[optionName])\r\n        }\r\n        return this._getTemplateByOption(optionName)\r\n    }\r\n    _updateOption(viewName, optionName, value) {\r\n        var currentViewOptions = this._getCurrentViewOptions();\r\n        if (!currentViewOptions || !isDefined(currentViewOptions[optionName])) {\r\n            this[\"_\" + viewName].option(optionName, value)\r\n        }\r\n    }\r\n    _refreshWorkSpace(groups) {\r\n        this._cleanWorkspace();\r\n        delete this._workSpace;\r\n        this._renderWorkSpace(groups);\r\n        if (this._readyToRenderAppointments) {\r\n            this._appointments.option({\r\n                fixedContainer: this._workSpace.getFixedContainer(),\r\n                allDayContainer: this._workSpace.getAllDayContainer()\r\n            });\r\n            this._waitAsyncTemplate(() => this._workSpaceRecalculation.resolve())\r\n        }\r\n    }\r\n    _cleanWorkspace() {\r\n        this._appointments.$element().detach();\r\n        this._workSpace._dispose();\r\n        this._workSpace.$element().remove();\r\n        this.option(\"selectedCellData\", [])\r\n    }\r\n    getWorkSpaceScrollable() {\r\n        return this._workSpace.getScrollable()\r\n    }\r\n    getWorkSpaceScrollableScrollTop(allDay) {\r\n        return this._workSpace.getGroupedScrollableScrollTop(allDay)\r\n    }\r\n    getWorkSpaceScrollableScrollLeft() {\r\n        return this._workSpace.getScrollableScrollLeft()\r\n    }\r\n    getWorkSpaceScrollableContainer() {\r\n        return this._workSpace.getScrollableContainer()\r\n    }\r\n    getWorkSpaceAllDayHeight() {\r\n        return this._workSpace.getAllDayHeight()\r\n    }\r\n    getWorkSpaceAllDayOffset() {\r\n        return this._workSpace.getAllDayOffset()\r\n    }\r\n    getWorkSpaceHeaderPanelHeight() {\r\n        return this._workSpace.getHeaderPanelHeight()\r\n    }\r\n    getWorkSpaceDateTableOffset() {\r\n        return !this.option(\"crossScrollingEnabled\") || this.option(\"rtlEnabled\") ? this._workSpace.getWorkSpaceLeftOffset() : 0\r\n    }\r\n    getWorkSpace() {\r\n        return this._workSpace\r\n    }\r\n    getAppointmentModel() {\r\n        return this._appointmentModel\r\n    }\r\n    getHeader() {\r\n        return this._header\r\n    }\r\n    getMaxAppointmentsPerCell() {\r\n        return this._getCurrentViewOption(\"maxAppointmentsPerCell\")\r\n    }\r\n    _cleanPopup() {\r\n        this._appointmentPopup && this._appointmentPopup.dispose()\r\n    }\r\n    _checkRecurringAppointment(targetAppointment, singleAppointment, exceptionDate, callback, isDeleted, isPopupEditing, dragEvent) {\r\n        delete this._updatedRecAppointment;\r\n        var recurrenceRule = this.fire(\"getField\", \"recurrenceRule\", targetAppointment);\r\n        if (!getRecurrenceProcessor().evalRecurrenceRule(recurrenceRule).isValid || !this._editing.allowUpdating) {\r\n            callback();\r\n            return\r\n        }\r\n        var editMode = this.option(\"recurrenceEditMode\");\r\n        switch (editMode) {\r\n            case \"series\":\r\n                callback();\r\n                break;\r\n            case \"occurrence\":\r\n                this._excludeAppointmentFromSeries(targetAppointment, singleAppointment, exceptionDate, isDeleted, isPopupEditing, dragEvent);\r\n                break;\r\n            default:\r\n                if (dragEvent) {\r\n                    dragEvent.cancel = new Deferred\r\n                }\r\n                this._showRecurrenceChangeConfirm(isDeleted).done(editingMode => {\r\n                    editingMode === RECURRENCE_EDITING_MODE.SERIES && callback();\r\n                    editingMode === RECURRENCE_EDITING_MODE.OCCURENCE && this._excludeAppointmentFromSeries(targetAppointment, singleAppointment, exceptionDate, isDeleted, isPopupEditing, dragEvent)\r\n                }).fail(() => this._appointments.moveAppointmentBack(dragEvent))\r\n        }\r\n    }\r\n    _excludeAppointmentFromSeries(rawAppointment, newRawAppointment, exceptionDate, isDeleted, isPopupEditing, dragEvent) {\r\n        var appointment = this.createAppointmentAdapter(_extends({}, rawAppointment));\r\n        var newAppointment = this.createAppointmentAdapter(newRawAppointment);\r\n        newAppointment.recurrenceRule = \"\";\r\n        newAppointment.recurrenceException = \"\";\r\n        var canCreateNewAppointment = !isDeleted && !isPopupEditing;\r\n        if (canCreateNewAppointment) {\r\n            var keyPropertyName = this._appointmentModel.keyName;\r\n            delete newRawAppointment[keyPropertyName];\r\n            this.addAppointment(newRawAppointment)\r\n        }\r\n        appointment.recurrenceException = this._createRecurrenceException(appointment, exceptionDate);\r\n        if (isPopupEditing) {\r\n            this._updatedRecAppointment = appointment.source();\r\n            this._appointmentPopup.show(newRawAppointment, true);\r\n            this._editAppointmentData = rawAppointment\r\n        } else {\r\n            this._updateAppointment(rawAppointment, appointment.source(), () => {\r\n                this._appointments.moveAppointmentBack(dragEvent)\r\n            }, dragEvent)\r\n        }\r\n    }\r\n    _createRecurrenceException(appointment, exceptionDate) {\r\n        var result = [];\r\n        if (appointment.recurrenceException) {\r\n            result.push(appointment.recurrenceException)\r\n        }\r\n        result.push(this._getSerializedDate(exceptionDate, appointment.startDate, appointment.allDay));\r\n        return result.join()\r\n    }\r\n    _getSerializedDate(date, startDate, isAllDay) {\r\n        isAllDay && date.setHours(startDate.getHours(), startDate.getMinutes(), startDate.getSeconds(), startDate.getMilliseconds());\r\n        return dateSerialization.serializeDate(date, UTC_FULL_DATE_FORMAT)\r\n    }\r\n    _showRecurrenceChangeConfirm(isDeleted) {\r\n        var message = messageLocalization.format(isDeleted ? \"dxScheduler-confirmRecurrenceDeleteMessage\" : \"dxScheduler-confirmRecurrenceEditMessage\");\r\n        var seriesText = messageLocalization.format(isDeleted ? \"dxScheduler-confirmRecurrenceDeleteSeries\" : \"dxScheduler-confirmRecurrenceEditSeries\");\r\n        var occurrenceText = messageLocalization.format(isDeleted ? \"dxScheduler-confirmRecurrenceDeleteOccurrence\" : \"dxScheduler-confirmRecurrenceEditOccurrence\");\r\n        this._recurrenceDialog = customDialog({\r\n            messageHtml: message,\r\n            showCloseButton: true,\r\n            showTitle: true,\r\n            buttons: [{\r\n                text: seriesText,\r\n                onClick: function() {\r\n                    return RECURRENCE_EDITING_MODE.SERIES\r\n                }\r\n            }, {\r\n                text: occurrenceText,\r\n                onClick: function() {\r\n                    return RECURRENCE_EDITING_MODE.OCCURENCE\r\n                }\r\n            }],\r\n            popupOptions: {\r\n                onHidden: e => {\r\n                    e.component.$element().remove()\r\n                }\r\n            }\r\n        });\r\n        return this._recurrenceDialog.show()\r\n    }\r\n    _getUpdatedData(rawAppointment) {\r\n        var getConvertedFromGrid = date => date ? this.timeZoneCalculator.createDate(date, {\r\n            path: \"fromGrid\"\r\n        }) : void 0;\r\n        var isValidDate = date => !isNaN(new Date(date).getTime());\r\n        var targetCell = this.getTargetCellData();\r\n        var appointment = this.createAppointmentAdapter(rawAppointment);\r\n        var cellStartDate = getConvertedFromGrid(targetCell.startDate);\r\n        var cellEndDate = getConvertedFromGrid(targetCell.endDate);\r\n        var appointmentStartDate = new Date(appointment.startDate);\r\n        var appointmentEndDate = new Date(appointment.endDate);\r\n        var resultedStartDate = cellStartDate || appointmentStartDate;\r\n        if (!isValidDate(appointmentStartDate)) {\r\n            appointmentStartDate = resultedStartDate\r\n        }\r\n        if (!isValidDate(appointmentEndDate)) {\r\n            appointmentEndDate = cellEndDate\r\n        }\r\n        var duration = appointmentEndDate.getTime() - appointmentStartDate.getTime();\r\n        var isKeepAppointmentHours = this._workSpace.keepOriginalHours() && isValidDate(appointment.startDate) && isValidDate(cellStartDate);\r\n        if (isKeepAppointmentHours) {\r\n            var {\r\n                trimTime: trimTime\r\n            } = dateUtils;\r\n            var startDate = this.timeZoneCalculator.createDate(appointment.startDate, {\r\n                path: \"toGrid\"\r\n            });\r\n            var timeInMs = startDate.getTime() - trimTime(startDate).getTime();\r\n            resultedStartDate = new Date(trimTime(targetCell.startDate).getTime() + timeInMs);\r\n            resultedStartDate = this.timeZoneCalculator.createDate(resultedStartDate, {\r\n                path: \"fromGrid\"\r\n            })\r\n        }\r\n        var result = this.createAppointmentAdapter({});\r\n        if (void 0 !== targetCell.allDay) {\r\n            result.allDay = targetCell.allDay\r\n        }\r\n        result.startDate = resultedStartDate;\r\n        var resultedEndDate = new Date(resultedStartDate.getTime() + duration);\r\n        if (this.appointmentTakesAllDay(rawAppointment) && !result.allDay && this._workSpace.supportAllDayRow()) {\r\n            resultedEndDate = this._workSpace.calculateEndDate(resultedStartDate)\r\n        }\r\n        if (appointment.allDay && !this._workSpace.supportAllDayRow() && !this._workSpace.keepOriginalHours()) {\r\n            var dateCopy = new Date(resultedStartDate);\r\n            dateCopy.setHours(0);\r\n            resultedEndDate = new Date(dateCopy.getTime() + duration);\r\n            if (0 !== resultedEndDate.getHours()) {\r\n                resultedEndDate.setHours(this._getCurrentViewOption(\"endDayHour\"))\r\n            }\r\n        }\r\n        var timeZoneOffset = timeZoneUtils.getTimezoneOffsetChangeInMs(appointmentStartDate, appointmentEndDate, resultedStartDate, resultedEndDate);\r\n        result.endDate = new Date(resultedEndDate.getTime() - timeZoneOffset);\r\n        var rawResult = result.source();\r\n        this._resourcesManager.setResourcesToItem(rawResult, targetCell.groups);\r\n        return rawResult\r\n    }\r\n    getTargetedAppointment(appointment, element) {\r\n        var settings = utils.dataAccessors.getAppointmentSettings(element);\r\n        var info = utils.dataAccessors.getAppointmentInfo(element);\r\n        var appointmentIndex = $(element).data(this._appointments._itemIndexKey());\r\n        var adapter = this.createAppointmentAdapter(appointment);\r\n        var targetedAdapter = adapter.clone();\r\n        if (this._isAgenda() && adapter.isRecurrent) {\r\n            var getStartDate = this.getRenderingStrategyInstance().getAppointmentDataCalculator();\r\n            var newStartDate = getStartDate($(element), adapter.startDate).startDate;\r\n            targetedAdapter.startDate = newStartDate;\r\n            targetedAdapter.endDate = new Date(newStartDate.getTime() + adapter.duration)\r\n        } else if (settings) {\r\n            targetedAdapter.startDate = info ? info.sourceAppointment.startDate : adapter.startDate;\r\n            targetedAdapter.endDate = info ? info.sourceAppointment.endDate : adapter.endDate\r\n        }\r\n        var rawTargetedAppointment = targetedAdapter.source();\r\n        if (element) {\r\n            this.setTargetedAppointmentResources(rawTargetedAppointment, element, appointmentIndex)\r\n        }\r\n        return rawTargetedAppointment\r\n    }\r\n    subscribe(subject, action) {\r\n        this._subscribes[subject] = subscribes[subject] = action\r\n    }\r\n    fire(subject) {\r\n        var callback = this._subscribes[subject];\r\n        var args = Array.prototype.slice.call(arguments);\r\n        if (!isFunction(callback)) {\r\n            throw errors.Error(\"E1031\", subject)\r\n        }\r\n        return callback.apply(this, args.slice(1))\r\n    }\r\n    getTargetCellData() {\r\n        return this._workSpace.getDataByDroppableCell()\r\n    }\r\n    _updateAppointment(target, rawAppointment, onUpdatePrevented, dragEvent) {\r\n        var updatingOptions = {\r\n            newData: rawAppointment,\r\n            oldData: extend({}, target),\r\n            cancel: false\r\n        };\r\n        var performFailAction = function(err) {\r\n            if (onUpdatePrevented) {\r\n                onUpdatePrevented.call(this)\r\n            }\r\n            if (err && \"Error\" === err.name) {\r\n                throw err\r\n            }\r\n        }.bind(this);\r\n        this._actions[StoreEventNames.UPDATING](updatingOptions);\r\n        if (dragEvent && !isDeferred(dragEvent.cancel)) {\r\n            dragEvent.cancel = new Deferred\r\n        }\r\n        return this._processActionResult(updatingOptions, (function(canceled) {\r\n            var deferred = new Deferred;\r\n            if (!canceled) {\r\n                this._expandAllDayPanel(rawAppointment);\r\n                try {\r\n                    deferred = this._appointmentModel.update(target, rawAppointment).done(() => {\r\n                        dragEvent && dragEvent.cancel.resolve(false)\r\n                    }).always(storeAppointment => this._onDataPromiseCompleted(StoreEventNames.UPDATED, storeAppointment)).fail(() => performFailAction())\r\n                } catch (err) {\r\n                    performFailAction(err);\r\n                    deferred.resolve()\r\n                }\r\n            } else {\r\n                performFailAction();\r\n                deferred.resolve()\r\n            }\r\n            return deferred.promise()\r\n        }))\r\n    }\r\n    _processActionResult(actionOptions, callback) {\r\n        var deferred = new Deferred;\r\n        var resolveCallback = callbackResult => {\r\n            when(fromPromise(callbackResult)).always(deferred.resolve)\r\n        };\r\n        if (isPromise(actionOptions.cancel)) {\r\n            when(fromPromise(actionOptions.cancel)).always(cancel => {\r\n                if (!isDefined(cancel)) {\r\n                    cancel = \"rejected\" === actionOptions.cancel.state()\r\n                }\r\n                resolveCallback(callback.call(this, cancel))\r\n            })\r\n        } else {\r\n            resolveCallback(callback.call(this, actionOptions.cancel))\r\n        }\r\n        return deferred.promise()\r\n    }\r\n    _expandAllDayPanel(appointment) {\r\n        if (!this._isAllDayExpanded(this.getFilteredItems()) && this.appointmentTakesAllDay(appointment)) {\r\n            this._workSpace.option(\"allDayExpanded\", true)\r\n        }\r\n    }\r\n    _onDataPromiseCompleted(handlerName, storeAppointment, appointment) {\r\n        var args = {\r\n            appointmentData: appointment || storeAppointment\r\n        };\r\n        if (storeAppointment instanceof Error) {\r\n            args.error = storeAppointment\r\n        } else {\r\n            this._appointmentPopup.isVisible() && this._appointmentPopup.hide()\r\n        }\r\n        this._actions[handlerName](args);\r\n        this._fireContentReadyAction()\r\n    }\r\n    getAppointmentPopup() {\r\n        return this._appointmentPopup.getPopup()\r\n    }\r\n    getUpdatedAppointment() {\r\n        return this._appointmentModel.getUpdatedAppointment()\r\n    }\r\n    getUpdatedAppointmentKeys() {\r\n        return this._appointmentModel.getUpdatedAppointmentKeys()\r\n    }\r\n    getAppointmentsInstance() {\r\n        return this._appointments\r\n    }\r\n    getResourceManager() {\r\n        return this._resourcesManager\r\n    }\r\n    getLayoutManager() {\r\n        return this._layoutManager\r\n    }\r\n    getRenderingStrategyInstance() {\r\n        return this._layoutManager.getRenderingStrategyInstance()\r\n    }\r\n    getFilteredItems() {\r\n        return this._filteredItems\r\n    }\r\n    getActions() {\r\n        return this._actions\r\n    }\r\n    appointmentTakesAllDay(appointment) {\r\n        return this._appointmentModel.appointmentTakesAllDay(appointment, this._getCurrentViewOption(\"startDayHour\"), this._getCurrentViewOption(\"endDayHour\"))\r\n    }\r\n    _getRecurrenceException(rawAppointment) {\r\n        var appointment = this.createAppointmentAdapter(rawAppointment);\r\n        var recurrenceException = appointment.recurrenceException;\r\n        if (recurrenceException) {\r\n            var exceptions = recurrenceException.split(\",\");\r\n            for (var i = 0; i < exceptions.length; i++) {\r\n                exceptions[i] = this._convertRecurrenceException(exceptions[i], appointment.startDate)\r\n            }\r\n            return exceptions.join()\r\n        }\r\n        return recurrenceException\r\n    }\r\n    _convertRecurrenceException(exceptionString, startDate) {\r\n        exceptionString = exceptionString.replace(/\\s/g, \"\");\r\n        var getConvertedToTimeZone = date => this.timeZoneCalculator.createDate(date, {\r\n            path: \"toGrid\"\r\n        });\r\n        var exceptionDate = dateSerialization.deserializeDate(exceptionString);\r\n        var convertedStartDate = getConvertedToTimeZone(startDate);\r\n        var convertedExceptionDate = getConvertedToTimeZone(exceptionDate);\r\n        convertedExceptionDate = timeZoneUtils.correctRecurrenceExceptionByTimezone(convertedExceptionDate, convertedStartDate, this.option(\"timeZone\"));\r\n        exceptionString = dateSerialization.serializeDate(convertedExceptionDate, FULL_DATE_FORMAT);\r\n        return exceptionString\r\n    }\r\n    dayHasAppointment(day, rawAppointment, trimTime) {\r\n        var getConvertedToTimeZone = date => this.timeZoneCalculator.createDate(date, {\r\n            path: \"toGrid\"\r\n        });\r\n        var appointment = this.createAppointmentAdapter(rawAppointment);\r\n        var startDate = new Date(appointment.startDate);\r\n        var endDate = new Date(appointment.endDate);\r\n        startDate = getConvertedToTimeZone(startDate);\r\n        endDate = getConvertedToTimeZone(endDate);\r\n        if (day.getTime() === endDate.getTime()) {\r\n            return startDate.getTime() === endDate.getTime()\r\n        }\r\n        if (trimTime) {\r\n            day = dateUtils.trimTime(day);\r\n            startDate = dateUtils.trimTime(startDate);\r\n            endDate = dateUtils.trimTime(endDate)\r\n        }\r\n        var dayTimeStamp = day.getTime();\r\n        var startDateTimeStamp = startDate.getTime();\r\n        var endDateTimeStamp = endDate.getTime();\r\n        return inArray(dayTimeStamp, [startDateTimeStamp, endDateTimeStamp]) > -1 || startDateTimeStamp < dayTimeStamp && endDateTimeStamp > dayTimeStamp\r\n    }\r\n    setTargetedAppointmentResources(rawAppointment, element, appointmentIndex) {\r\n        var groups = this._getCurrentViewOption(\"groups\");\r\n        if (null !== groups && void 0 !== groups && groups.length) {\r\n            var resourcesSetter = this._resourcesManager._dataAccessors.setter;\r\n            var workSpace = this._workSpace;\r\n            var getGroups;\r\n            var setResourceCallback;\r\n            if (this._isAgenda()) {\r\n                getGroups = function() {\r\n                    var apptSettings = this.getLayoutManager()._positionMap[appointmentIndex];\r\n                    return workSpace._getCellGroups(apptSettings[0].groupIndex)\r\n                };\r\n                setResourceCallback = function(_, group) {\r\n                    resourcesSetter[group.name](rawAppointment, group.id)\r\n                }\r\n            } else {\r\n                getGroups = function() {\r\n                    var setting = utils.dataAccessors.getAppointmentSettings(element) || {};\r\n                    return workSpace.getCellDataByCoordinates({\r\n                        left: setting.left,\r\n                        top: setting.top\r\n                    }).groups\r\n                };\r\n                setResourceCallback = function(field, value) {\r\n                    resourcesSetter[field](rawAppointment, value)\r\n                }\r\n            }\r\n            each(getGroups.call(this), setResourceCallback)\r\n        }\r\n    }\r\n    getStartViewDate() {\r\n        return this._workSpace.getStartViewDate()\r\n    }\r\n    getEndViewDate() {\r\n        return this._workSpace.getEndViewDate()\r\n    }\r\n    showAppointmentPopup(rawAppointment, createNewAppointment, rawTargetedAppointment) {\r\n        var appointment = this.createAppointmentAdapter(rawTargetedAppointment || rawAppointment);\r\n        var newTargetedAppointment = extend({}, rawAppointment, rawTargetedAppointment);\r\n        this._checkRecurringAppointment(rawAppointment, newTargetedAppointment, appointment.startDate, () => {\r\n            if (createNewAppointment || isEmptyObject(rawAppointment)) {\r\n                delete this._editAppointmentData;\r\n                this._editing.allowAdding && this._appointmentPopup.show(rawAppointment, true)\r\n            } else {\r\n                this._editAppointmentData = rawAppointment;\r\n                this._appointmentPopup.show(rawAppointment, this._editing.allowUpdating)\r\n            }\r\n        }, false, true)\r\n    }\r\n    hideAppointmentPopup(saveChanges) {\r\n        if (this._appointmentPopup && this._appointmentPopup.isVisible()) {\r\n            saveChanges && this._appointmentPopup.saveChanges();\r\n            this._appointmentPopup.hide()\r\n        }\r\n    }\r\n    showAppointmentTooltip(appointment, element, targetedAppointment) {\r\n        if (appointment) {\r\n            var settings = utils.dataAccessors.getAppointmentSettings(element);\r\n            var deferredColor = this.fire(\"getAppointmentColor\", {\r\n                itemData: targetedAppointment || appointment,\r\n                groupIndex: null === settings || void 0 === settings ? void 0 : settings.groupIndex\r\n            });\r\n            var info = new AppointmentTooltipInfo(appointment, targetedAppointment, deferredColor);\r\n            this.showAppointmentTooltipCore(element, [info])\r\n        }\r\n    }\r\n    showAppointmentTooltipCore(target, data, options) {\r\n        if (this._appointmentTooltip.isAlreadyShown(target)) {\r\n            this.hideAppointmentTooltip()\r\n        } else {\r\n            this._appointmentTooltip.show(target, data, extend(this._getExtraAppointmentTooltipOptions(), options))\r\n        }\r\n    }\r\n    hideAppointmentTooltip() {\r\n        this._appointmentTooltip && this._appointmentTooltip.hide()\r\n    }\r\n    scrollToTime(hours, minutes, date) {\r\n        this._workSpace.scrollToTime(hours, minutes, date)\r\n    }\r\n    scrollTo(date, groups, allDay) {\r\n        this._workSpace.scrollTo(date, groups, allDay)\r\n    }\r\n    _isHorizontalVirtualScrolling() {\r\n        var scrolling = this.option(\"scrolling\");\r\n        var {\r\n            orientation: orientation,\r\n            mode: mode\r\n        } = scrolling;\r\n        var isVirtualScrolling = \"virtual\" === mode;\r\n        return isVirtualScrolling && (\"horizontal\" === orientation || \"both\" === orientation)\r\n    }\r\n    addAppointment(rawAppointment) {\r\n        var appointment = this.createAppointmentAdapter(rawAppointment);\r\n        appointment.text = appointment.text || \"\";\r\n        var serializedAppointment = appointment.source(true);\r\n        var addingOptions = {\r\n            appointmentData: serializedAppointment,\r\n            cancel: false\r\n        };\r\n        this._actions[StoreEventNames.ADDING](addingOptions);\r\n        return this._processActionResult(addingOptions, canceled => {\r\n            if (canceled) {\r\n                return (new Deferred).resolve()\r\n            }\r\n            this._expandAllDayPanel(serializedAppointment);\r\n            return this._appointmentModel.add(serializedAppointment).always(storeAppointment => this._onDataPromiseCompleted(StoreEventNames.ADDED, storeAppointment))\r\n        })\r\n    }\r\n    updateAppointment(target, appointment) {\r\n        return this._updateAppointment(target, appointment)\r\n    }\r\n    deleteAppointment(rawAppointment) {\r\n        var deletingOptions = {\r\n            appointmentData: rawAppointment,\r\n            cancel: false\r\n        };\r\n        this._actions[StoreEventNames.DELETING](deletingOptions);\r\n        this._processActionResult(deletingOptions, (function(canceled) {\r\n            if (!canceled) {\r\n                this._appointmentModel.remove(rawAppointment).always(storeAppointment => this._onDataPromiseCompleted(StoreEventNames.DELETED, storeAppointment, rawAppointment))\r\n            }\r\n        }))\r\n    }\r\n    focus() {\r\n        if (this._editAppointmentData) {\r\n            this._appointments.focus()\r\n        } else {\r\n            this._workSpace.focus()\r\n        }\r\n    }\r\n    getFirstDayOfWeek() {\r\n        return isDefined(this.option(\"firstDayOfWeek\")) ? this.option(\"firstDayOfWeek\") : dateLocalization.firstDayOfWeekIndex()\r\n    }\r\n    createAppointmentAdapter(rawAppointment) {\r\n        var options = {\r\n            getField: (rawAppointment, property) => this.fire(\"getField\", property, rawAppointment),\r\n            setField: (rawAppointment, property, value) => this.fire(\"setField\", property, rawAppointment, value),\r\n            getTimeZoneCalculator: () => this.timeZoneCalculator\r\n        };\r\n        return new AppointmentAdapter(rawAppointment, options)\r\n    }\r\n}\r\nScheduler.include(DataHelperMixin);\r\nregisterComponent(\"dxScheduler\", Scheduler);\r\nexport default Scheduler;\r\n"]},"metadata":{},"sourceType":"module"}